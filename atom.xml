<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[始终]]></title>
  <subtitle><![CDATA[不忘初心]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://liam0205.me/"/>
  <updated>2014-07-23T04:33:05.411Z</updated>
  <id>http://liam0205.me/</id>
  
  <author>
    <name><![CDATA[Liam Huang]]></name>
    <email><![CDATA[liamhuang0205+blog@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[异步加载多说评论框以加快页面访问速度]]></title>
    <link href="http://liam0205.me/2014/07/22/duoshuo-delay/"/>
    <id>http://liam0205.me/2014/07/22/duoshuo-delay/</id>
    <published>2014-07-22T09:52:50.000Z</published>
    <updated>2014-07-23T03:45:15.000Z</updated>
    <content type="html"><![CDATA[<p>多说评论框可以让静态博客实现评论功能，对于搭在 GitHub Pages 上的博客来说是非常好用的功能。美中不足的是，多说评论框的加载速度有些慢；默认情况下，多说评论框总是随页面一起加载，拖慢了整个页面的加载速度。</p>
<p>本希望用自动异步加载的方式，在页面加载完成之后，再加载多说评论框。奈何多说没有提供所需的 API。于是只能退而求其次，采用手动的方法。</p>
<a id="more"></a>

<p>多说在其<a href="http://dev.duoshuo.com/docs/50b344447f32d30066000147" target="_blank">官博</a>提出了一种异步加载的方式。经测试，这个方法可用——只需要点击按钮，多说评论框就会弹出来。但是，官博提供的方法只能弹出，不能缩回，有些恼人。于是自己写了几行代码，解决了这个问题。</p>
<h2 id=" 详细步骤 ">详细步骤</h2>
<p>首先，我们需要加载多说的 <code>embed.js</code> 基础代码，并设置 <code>duoshuoQuery</code>。多说官博希望我们把这段代码放在网页的 head 中，我不推荐这样做。因为我们使用异步加载的原因，就是希望提高速度，而如果将多说的代码放在 head 中，又拖慢了速度。所以我们将代码放在多说评论框加载之前就可以了。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"><span class="keyword">var</span> duoshuoQuery = {short_name:<span class="string">" 你的多说二级域名 "</span>};</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://static.duoshuo.com/embed.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>


<p>多说二级域名是指你注册多说时，填写的 <code>abc.duoshuo.com</code> 中的 <code>abc</code> 部分。</p>
<p>紧接其后之后，我们要写入 JavaScript 函数，实现多说评论框的缩放功能。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
<span class="function"><span class="keyword">function</span> <span class="title">toggleDuoshuoComments</span><span class="params">(container, id, url)</span>{</span>
  <span class="keyword">if</span>(jQuery(container).has(<span class="string">"div"</span>).length&gt;<span class="number">0</span>){
    jQuery(container).empty();
    <span class="keyword">return</span>;
  }
  <span class="keyword">var</span> el = document.createElement(<span class="string">'div'</span>);
  el.setAttribute(<span class="string">'data-thread-key'</span>, id);
  el.setAttribute(<span class="string">'data-url'</span>, url);
  DUOSHUO.EmbedThread(el);
  jQuery(container).append(el);
}
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>


<p>在需要插入按钮的地方，我们建立一个 click 事件。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:void(0);"</span> <span class="attribute">onclick</span>=<span class="value">"toggleDuoshuoComments('#comment-box', &lt;%= item.title %&gt;, &lt;%- config.url %&gt;&lt;%- config.root %&gt;&lt;%- item.path %&gt;);"</span>&gt;</span>查看评论<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
</pre></td></tr></table></figure>


<p>其中 <code>&lt;%= item.title %&gt;</code> 和 <code>&lt;%- config.url %&gt;&lt;%- config.root %&gt;&lt;%- item.path %&gt;</code> 是 hexo 的语法。</p>
<p>最后，在需要弹出评论框的地方，插入一个 <code>div</code> 标签。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"comment-box"</span> &gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</pre></td></tr></table></figure>


<p>这样就大功告成啦！</p>
]]></content>
    <summary type="html"><![CDATA[<p>多说评论框可以让静态博客实现评论功能，对于搭在 GitHub Pages 上的博客来说是非常好用的功能。美中不足的是，多说评论框的加载速度有些慢；默认情况下，多说评论框总是随页面一起加载，拖慢了整个页面的加载速度。</p>
<p>本希望用自动异步加载的方式，在页面加载完成之后，再加载多说评论框。奈何多说没有提供所需的 API。于是只能退而求其次，采用手动的方法。</p>
]]></summary>
    
      <category term="Blog" scheme="http://liam0205.me/tags/Blog/"/>
    
      <category term="Duoshuo" scheme="http://liam0205.me/tags/Duoshuo/"/>
    
      <category term="Async Loading" scheme="http://liam0205.me/tags/Async%20Loading/"/>
    
      <category term="Duoshuo" scheme="http://liam0205.me/categories/Duoshuo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[英语语法之二：名词短语]]></title>
    <link href="http://liam0205.me/2014/06/22/noun-phrase-and-articles/"/>
    <id>http://liam0205.me/2014/06/22/noun-phrase-and-articles/</id>
    <published>2014-06-22T01:01:50.000Z</published>
    <updated>2014-06-22T08:41:56.000Z</updated>
    <content type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第二篇，主要讨论名词短语以及冠词的使用。</p>
<h2 id=" 名词短语的基本形态 ">名词短语的基本形态</h2>
<p>名词短语可以充当句子中的主语、宾语、补语等成分，出现的频率相当高。同时，在名词短语中充当限定词的冠词涉及到许多规则，也是容易弄错的地方。涉及到名词短语的语法规则有很多，特例也有很多。基本属于「有二十条规则，又有二十条特例」的情况，令人烦不胜烦。但其实，在表达清晰、意思完整、无有歧义的要求下，这些规则并不需要死记硬背，借由客观地讨论就能形成完整的体系。</p>
<a id="more"></a>

<p>完整的名词短语由三个部分组成：限定词、修饰词、名词。比如（下划线部分是限定词，加粗部分是修饰词）：</p>
<ul>
<li><u>a</u> <strong>new</strong> book.</li>
<li><u>many</u> <strong>good</strong> students.</li>
<li><u>his</u> <strong>beautiful</strong> wife.</li>
<li><u>the</u> <strong>bast</strong> answer.</li>
<li><u>those</u> <strong>sweet</strong> roses.</li>
</ul>
<p>名词短语的三个部分并非每一次都要同时出现，在特定场合下，这三个部分都有可能省略。</p>
<p>修饰词可能是名词短语中最不重要的部分，如果不需要描述名词的状态特征则完全可以省略。比如「a book」同样是正确的名词短语。如果说话人确信听众知道自己在讨论什么东西，则名词也可以省略。比如「Of those answers, this one is the best.」，这里的「the best」指得就是「the best answer」。在面对面交流的时候，修饰词和名词有时甚至可以一起省略。假设你在花店，用手指向一捧玫瑰花，对花店老板说「I want those.」的话，花店老板很清楚你想要什么。</p>
<h2 id=" 限定词 ">限定词</h2>
<p>任何事物出现都是有原因的，那么英语里为什么要有限定词呢？限定词作为名词短语的一部分存在，而名词短语的主体是名词。所以在讨论限定词之前，有必要讨论一下名词。</p>
<h3 id=" 名词的分类 ">名词的分类</h3>
<p>从名词指代的对象来说，名词可以分为「抽象名词」和「普通名词」。抽象名词指代的对象看不见摸不着，通常表示方式方法、状态品质等概念。普通名词则相反，它们指代的对象看得见摸得着，是实际存在的事物。</p>
<p>从名词是否可以计数的方面，名词可以分为「可数名词」和「不可数名词」。可数名词指代的对象通常具有固定的形体，因此可以计数。不可数名词则正好相反，它们指代的对象通常无有固定形体，因此你没法拿起其中的「一个」，对朋友说「嘿，这是一个 XX，你手边上也有一个」。</p>
<p>从名词指代的对象的状态来说，名词可以分成「专有名词」和「非专有名词」。所谓专有名词，就是名词指代的对象，天上地下独一份，没有第二个。而非专有名词则正好相反，它们指代的对象都不止存在一个。</p>
<p>抽象名词指代的对象显然不具有固定的形体或者明确的界限，因此<strong>抽象名词都是不可数名词</strong>。反过来，它的逆否命题显然成立，<strong>可数名词都是普通名词</strong>。</p>
<p>名词是否专有，是在可数名词的范围之内进行讨论的。因为如果名词不可数，也就无从定义「只有一个」，从而讨论是否专有就没有意义了。此外，名词是否专有，有时也要依情况而定。比如，医院都有院长，在医院内部讨论的时候，院长是唯一的，此时可以看做是专有名词；而在医院之间讨论，或者横向比较的时候，院长就不唯一了，此时是非专有名词。</p>
<p>对名词做这样的分类是有意义的。如果一个名词是可数的，并且它是非专有名词，这就意味着它指代的对象在世界上并不唯一，有许多个。以对于「书本」的讨论为例。如果笼统地讨论而不加限定，那么听者就不知道讲话者说得是什么——究竟是说所有的书本组成的这个整体，还是说某一本特定的书呢？显然，对于这样的名词，在讨论的时候需要加以限定，这就是限定词存在的意义。</p>
<h3 id=" 一个例子 ">一个例子</h3>
<p>我们继续上面关于成分省略的话题。如果我们将「many good students」的限定词 many 去掉，形成的「good students」仍然是一个正确的名词短语。但是，将「a new book」的限定词 a 去掉，形成的「new book」就不正确了。</p>
<p>我们对两个短语进行了同样的操作，但是结果却不相同。按照上一小节的讨论，学生和书本都是非专有名词。这种情况下，作为复数存在的 students 表意是明确的，它表示学生这个群体；而作为单数存在的 book 表意就不明确了。</p>
<h3 id=" 冠词的使用 ">冠词的使用</h3>
<p>限定词有很多，我们先简单地看一下。</p>
<ul>
<li>冠词：a, an, the</li>
<li>表示指代：this, that, these, those</li>
<li>所有格：my, your, his, her, their, Jason’s</li>
<li>表示否定：no, neither</li>
<li>表示全部：every, each</li>
<li>表示不确定：some, any, either</li>
<li>表示数量：基数词、序数词以及 many, much, little, few</li>
<li>表示数量的范围、倍数等：all, both, half, one-third, double, twice, three times, such 等</li>
</ul>
<p>行文时有关限定词的错误，要么是漏掉限定词，要么是限定词误用。除掉冠词之外的其余几类限定词都有相对明确的含义，在实际使用中不容易出错。所以我们只需要着重讨论冠词就可以。</p>
<p>从语源学（etymology）的角度说，不定冠词 a(n) 以及定冠词 the 分别是数次 one 和指示代词 that 和 those 的弱化。也就是说，a(n) 就是 one 的意思，the 就是 that 或者 those 的意思，只不过语气上比较弱。</p>
<p>因此，当后面的名词在叙述上有「一个」的含义时，应该加上不定冠词；当后面的名词在上下文有特指「那个」的时候，应该加上不定冠词；当后面的名词不适合以「一个」或「那个」来交代，就不加冠词。</p>
<p>举例分析如下：</p>
<ul>
<li><u>Unmaried men</u> are a rare species these days.<ul>
<li>名词短语 Unmaried men 中 men 是复数形态，没法说「一个」或者「那个」，所以不用冠词。</li>
</ul>
</li>
<li><u>Honesty</u> is necessarily the best policy.<ul>
<li>Honesty 是表达品质的抽象名词，没有复数形态，不能用「一个」来描述，所以不用冠词。</li>
</ul>
</li>
<li><u>Fresh water</u> is a precious resource in Saudi Arabia.<ul>
<li>Fresh water 是不可数的，没有复数形态，不能用「一个」来描述，所以不用冠词。</li>
</ul>
</li>
<li>I have an appointment on <u>Sunday</u>.<ul>
<li>这里 Sunday 在讨论范围内是唯一的，确指这周日，是专有名词，不能用「一个」或者「那个」来描述，所以冠词位置留空。</li>
</ul>
</li>
<li>I would have an appointment on <u>a Sunday</u> next month.<ul>
<li>这里 Sunday 在讨论范围内（下个月）里是不唯一的，因此要保留冠词。</li>
</ul>
</li>
<li>I need <u>a book</u> to read on my trip. I have finished <u>the book</u> you lent me.<ul>
<li>第一句中，a book 不做特指，「随便哪一本书我都乐意读」，因此用不定冠词。</li>
<li>第二句中，the book 特指「你借给我的那一本」，上下文中有暗示的「那个」，所以用定冠词。</li>
</ul>
</li>
<li><u>Modern history</u> is my favorite subject. <u>The history of recent China</u> is a sorry record.<ul>
<li>第一句中，modern history 是抽象名词，没有办法用「一个」或者「那个」来表述，所以冠词位留空。</li>
<li>第二句中，因为特指「中国的『那一段』历史」，所以要用定冠词。</li>
</ul>
</li>
<li>He should be home; I saw <u>a light</u> in his house. Turn off <u>the portal light</u>.<ul>
<li>第一句中，屋子里的灯可能不止一盏，所以不适合用「那个」来表述，只能用不定冠词。</li>
<li>第二局中，等特指门口的「那一盏」，所以用定冠词。</li>
</ul>
</li>
<li><u>Genghis Khan</u> is <u>hero</u>.<ul>
<li>这里 Genghis Khan 是成吉思汗，古今就这一位，是专有名词。如果用「一个」来描述，就表示还有另一个成吉思汗，这不合适，所以冠词位置留空。对于短语 hero 来说，它在居中是 Genghis Khan 的补语，和 Genghis Khan 等同，因此也应当做专有名词来对待。</li>
</ul>
</li>
<li>Someone said that Genghis Khan is <u>a greater hero</u> than Napoleon.<ul>
<li>这里的名词短语 a greater hero 同样是 Genghis Khan 的补语，二者地位等同，但是却没有当做专有名词来处理。这是因为后面还出现了拿破仑，此时 hero 就不唯一了，所以必须加冠词。</li>
</ul>
</li>
<li><u>The five-year-old Genghis Khan</u> was a breezy boy.<ul>
<li>成吉思汗只有一个，但是居中特指「五岁的『那个』成吉思汗」，将成吉思汗的一生展开讨论，于是有了多个时期的成吉思汗。此时成吉思汗不再作为专有名词，又因为讨论时特指「那个」，所以要加上定冠词。</li>
</ul>
</li>
<li>I always go to school by <u>bus</u>.<ul>
<li>Bus 本是个可数的普通名词，按理应加上冠词。但是这里出现在介词 by 之后，表示方式手段，意思是「坐车这种方式」，是抽象名词。这里的 bus 没办法用「一个」或者「那个」去理解，所以冠词位置留空。</li>
</ul>
</li>
<li><u>the Pacific Ocean</u><ul>
<li>「太平洋是专有名词，但是一个特例，要加上定冠词」，这是一般语法书的论调。但事实上，如果把 the Pacific Ocean 理解为「叫做 Pacific 的『那个』海洋」的话，就不需要背这个特例了，加定冠词也就显而易见了。</li>
</ul>
</li>
</ul>
<p>这篇文章不做类似「专有名词前面不加冠词」或是「抽象名词前面不加冠词」之类的总结。因为如你所见，一个名词是否是专有名词或者抽象名词，是需要依情况而定的。如例子里的成吉思汗，尽管它在大多数情况下是专有名词，但是在某些讨论中，它也可以是非专有名词。对这些规则的死记硬背通常导致不加思考的「错误套用」，更将引出无数例外，实不可取。</p>
<h2 id=" 总结 ">总结</h2>
<ul>
<li>名词短语包括限定词、修饰词和名词三个部分。任一部分在合适的情况下都可以省略。</li>
<li>名词短语中没有冠词限定的情况，是因为名词在上下文中不适合理解为「一个」或者「那个」。</li>
<li>a(n) 和 the 分别是 one 和 that/those 的弱化。</li>
</ul>
<p>这些规律在理解的基础上是很自然的，不需要死记硬背。吃透文章中的这些分析，足以涵盖「二十条规则和二十条例外」的语法细则。</p>
]]></content>
    <summary type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第二篇，主要讨论名词短语以及冠词的使用。</p>
<h2 id=" 名词短语的基本形态 ">名词短语的基本形态</h2>
<p>名词短语可以充当句子中的主语、宾语、补语等成分，出现的频率相当高。同时，在名词短语中充当限定词的冠词涉及到许多规则，也是容易弄错的地方。涉及到名词短语的语法规则有很多，特例也有很多。基本属于「有二十条规则，又有二十条特例」的情况，令人烦不胜烦。但其实，在表达清晰、意思完整、无有歧义的要求下，这些规则并不需要死记硬背，借由客观地讨论就能形成完整的体系。</p>
]]></summary>
    
      <category term="English" scheme="http://liam0205.me/tags/English/"/>
    
      <category term="grammar" scheme="http://liam0205.me/tags/grammar/"/>
    
      <category term="English" scheme="http://liam0205.me/categories/English/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[英语语法之一：基本句型、动词分类、补语]]></title>
    <link href="http://liam0205.me/2014/06/21/basic-sentence-and-the-complement/"/>
    <id>http://liam0205.me/2014/06/21/basic-sentence-and-the-complement/</id>
    <published>2014-06-21T04:44:23.000Z</published>
    <updated>2014-06-22T01:04:59.000Z</updated>
    <content type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第一篇，主要讨论动词分类与补语的关系。</p>
<h2 id=" 基本句型 ">基本句型</h2>
<p>英语中的基本句型有五种：</p>
<ol>
<li>S + V</li>
<li>S + V + O</li>
<li>S + V + C</li>
<li>S + V + O + O</li>
<li>S + V + O + C</li>
</ol>
<p>从意思上说，一个完整句子表达的无非是「一个人 / 一个东西怎么样了」。这里「一个人 / 一个东西」称为主语部分（subject），告诉人们「这个句子讨论的是『一个人或者一个东西』」；「怎么样了」称为谓语部分（predicate，也称「述语部分」），它可以是「做了什么事情」或者「具有某种特性」。主语部分形式比较单一，通常由名词性的结构来担任。谓语部分的形式变化较多，五种基本句型实际就是通过不同的谓语部分结构来表达五种类型的含义。</p>
<a id="more"></a>

<p>不过，不管谓语部分如何变化，它都由动词起头，并承担主要的表意功能。因此讨论基本句型就有必要讨论谓语动词。</p>
<h2 id=" 动词的特性及分类 ">动词的特性及分类</h2>
<p>动词的特性分成两个部分。其一是「是否及宾（transitive/intransitive）」，其二是「是否完全（complete/incomplete）」。</p>
<h3 id=" 及宾与不及宾 ">及宾与不及宾</h3>
<p>第一个特性是从动词意思的层面上说的。如果一个动词和其他人或事物没有关系，那它就是不及宾动词；而如果一个动词被做出来必须有一个承担者，那它就是及宾动词。</p>
<ul>
<li>His father <em>died</em> in the war.</li>
<li>His father had <em>killed</em> three enemy soldiers before his father died in the war.</li>
</ul>
<p>例子中的 die 表示「死亡」，是一个不及宾动词。这是因为死亡这个动作只与他的父亲有关，和别人无关——他的父亲一个人就可以执行死亡这个动作了。不及宾动词后面不能与作为受词的宾语（object）直接相连。</p>
<p>例子中的 kill 表示「杀死」，是一个及宾动词。这是因为杀死这个动作必须有一个承受者（在句子中就是受词）——如果句子去掉 kill 的宾语，变成 <code>His father had *killed* before his father died in the war.</code> 的话，句意就不完整了。及宾动词后面必须有作为受词的宾语。</p>
<h3 id=" 完全与不完全 ">完全与不完全</h3>
<p>第二个特性是从表意功能上说的。如果一个谓语动词在句子当中只能起到连接主语和谓语部分的后续结构的作用，而在表意上功能不完全，则这个动词就是「不完全」的；反之若谓语动词能够完整地表意，那它就是「完全」的。</p>
<p>判断动词是否完全比判断动词是否及宾要容易许多。不完全的动词有一个非常明显的特征——它们都是判断动词「是」的变形，都表示某种意义上的「是」。举例如下：</p>
<ul>
<li>I am a boy.</li>
<li>The soup tastes pretty good.</li>
<li>That man looks weak.</li>
</ul>
<p>三个句子中的动词「am」、「taste」、「look」都是不完全的动词，它们分别译作「是」、「尝起来是」、「看起来是」。如果把他们后面的内容去掉，变成：</p>
<ul>
<li>I am.</li>
<li>The soup tastes.</li>
<li>That man looks.</li>
</ul>
<p>句子表意就不完整了。「我是」，我究竟是什么呢？「汤尝起来」，究竟怎么样呢？「那个男人看起来」，究竟怎么了？</p>
<p>总而言之，不完全的动词在句子当中都是判断动词「是」的变形，在句子当中起到连接主语和谓语部分其他内容的作用，但表意功能弱。因此，这些动词被称为「联系动词（Link-verb）」。也因此，当这些句子出现在句中的时候，需要有称为补语的部分将表意功能补足。</p>
<p>英语中，除去「be」之外，常见的联系动词有：</p>
<ul>
<li>look 看起来是</li>
<li>seem 似乎是</li>
<li>appear 显得像是</li>
<li>sound 听起来是</li>
<li>feel 摸起来像是</li>
<li>taste 尝起来是</li>
<li>stay 仍然是</li>
<li>remain 依旧是</li>
<li>turn 转变为</li>
<li>prove 证实为</li>
<li>become 成为</li>
<li>make 作为</li>
</ul>
<h2 id=" 补语 ">补语</h2>
<p>补语是和表意不完全的动词息息相关的。在第三种基本句型中，联系动词将主语和补语在某个意义层面上对等起来。</p>
<p>我们先来讨论主语的补语，而后将宾语的补语作为一种变形来讨论。</p>
<h3 id=" 主语的补语 _S_+_V_+_C">主语的补语 S + V + C</h3>
<p>在前一节的讨论中，我们已经见过补语这个结构了。为了更清晰地讨论补语，我们尝试将主语统一。</p>
<ul>
<li>The dog was a mastiff.</li>
<li>The dog was mean.</li>
<li>The dog was there.</li>
</ul>
<p>在这里，「a mastiff」、「mean」和「there」分别是三句话的补语，他们分别是名词、形容词和方位副词。</p>
<p>在这里，第一句话翻译为「这只狗是一只獒」，可以明显看到判断动词的存在；第二句话翻译成「这只狗很凶」，判断动词不见了。这实际上是翻译上作出的调整。第二个句子逐字翻译（Verbatim Translation）的结果应该是「这只狗是凶恶的」，但这不符合汉语的说话习惯。这个事实从另一个角度说明了，联系动词表意上是不完全的，在翻译上甚至可以将它们丢掉。</p>
<p>另一方面，尝试将下面句子中的联系动词替换为相应的「be」动词，我们会发现，这些句子的表意基本没有发生变化。这也说明，联系动词在表以上是不完全的。</p>
<ul>
<li>The house <em>looks</em> big.</li>
<li>The question <em>seems</em> easy.</li>
<li>The man <em>appears</em> to be a gentleman.</li>
<li>The music <em>sounds</em> of equanimity.</li>
<li>The book <em>feels</em> old.</li>
<li>The soup <em>tastes</em> hot.</li>
<li>This two men <em>stayed</em> friends for their whole life.</li>
<li>The woman <em>remains</em> single.</li>
<li>The player <em>turned</em> professional.</li>
<li>The drug <em>proved</em> effective.</li>
<li>The little boy <em>became</em> a super star.</li>
<li>A nurse <em>makes</em> a good wife.</li>
</ul>
<h3 id=" 宾语的补语 _S_+_V_+_O_+_C">宾语的补语 S + V + O + C</h3>
<p>主语的补语用来表示主语是什么。类似地，宾语的补语用来表示宾语是什么。在 S + V + O + C 这个句型当中，宾语和补语之间虽然没有动词存在。但是句子可以变形成：S + V + that + O + V + C 的形式，也就是将原本的宾语和补语以从句的形式出现。因此，可以认为宾语和补语之间有「隐藏的」判断动词「是」的存在。</p>
<p>上一小节的最后，我们举出了 12 个主语补语的句子，我们可以按照下面的方法轻易地变成宾语补语的句子。</p>
<ul>
<li>The house <em>looks</em> big.</li>
<li>I found that the house <em>looks</em> big.</li>
<li>I found the house big.</li>
</ul>
<p>这也说明了主语补语和宾语补语之间的关系。</p>
<h3 id=" 补语的词类 ">补语的词类</h3>
<p>除了前述的名词和形容词性结构可以充当补语之外，表示方位的副词也可以充当补语。比如：</p>
<ul>
<li>The car is there.</li>
<li>I find the key here.</li>
</ul>
<p>这里，表示方位的副词「there」和「here」分别作为「The car」和「the key」的补语。</p>
<h2 id=" 额外的内容 ">额外的内容</h2>
<h3 id=" 特殊的 _be_ 动词 ">特殊的 be 动词</h3>
<p>一些情况下，be 动词后面不带补语。我们知道 be 动词表示「是」的时候不带补语是表意不完全的，因此这些不带补语的 be 动词并不是系动词，而是作为有实际意义的动词，表示「存在」。</p>
<p>比如，被认为是现代哲学开端的笛卡尔先生的名言「我思故我在」中的 be 动词：I think; therefore I am.</p>
<p>又比如，莎翁名作《哈姆雷特》中，王子哈姆雷特在母亲与叔父通奸害死父王之后思考人生的名句：To be or not to be, that is the question. 这里的 be 也应该理解为存在，引申为「活着」，翻译为「要不要活下去，这是个问题」。</p>
<h3 id="S_+_V_+_O_+_O_ 与 _S_+_V_+_O_+_C">S + V + O + O 与 S + V + O + C</h3>
<p>这是两组结构相似的基本句型，对一些中国学生来说，辨识起来稍有困难。我们知道，五种基本句型的区别在于谓语部分的差别，而谓语部分的差别实际上是谓语动词的差别引起的。所以为了在这两种句型中作出辨析，就应着重探讨谓语动词的特征。</p>
<p>先看两个例子。</p>
<ul>
<li>Jason’s wife gave him a jar of honey.</li>
<li>Jason’s wife called him honey.</li>
</ul>
<p>这里前句是一个 S + V + O + O 的句型，后句是一个 S + V + O + C 的句型。</p>
<p>前句的谓语动词「give」首先是一个及宾动词，因为必须要「把什么东西给出去」。其次，它还必须有一个额外的接收者，因为必须要有人接受，东西才给得出去。所以，动词 give 出现，就必须有两个宾语来承受这个动作，因此是 S + V + O + O 的句型。此外，「him」和「a jar of honey」中不存在对等的概念，也即没有「He is a jar of honey」的意味在其中，所以这不可能是宾语和补语的关系。</p>
<p>后句中，「him」和「honey」隐含着对等的概念，所以这是一个 S + V + O + C 的句型。</p>
<h3 id=" 表语还是补语？">表语还是补语？</h3>
<p>文首列出的第三种基本句型，在中国大陆地区通常称为「主系表结构」。主语和系动词很好理解，那么表语是什么？</p>
<p>在大陆地区的语法书中，表语是这样定义的：</p>
<blockquote>
<p>表语是用来表明主语的身份、性质、品性、特征和状态的，表语常由名词、形容词、副词、介词短语、不定式、动词的 -ing、从句来充当，它常位于系动词的后面。</p>
</blockquote>
<p>显而易见，它就是我们讨论中所言的「主语的补语」，二者是相同的概念。</p>
]]></content>
    <summary type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第一篇，主要讨论动词分类与补语的关系。</p>
<h2 id=" 基本句型 ">基本句型</h2>
<p>英语中的基本句型有五种：</p>
<ol>
<li>S + V</li>
<li>S + V + O</li>
<li>S + V + C</li>
<li>S + V + O + O</li>
<li>S + V + O + C</li>
</ol>
<p>从意思上说，一个完整句子表达的无非是「一个人 / 一个东西怎么样了」。这里「一个人 / 一个东西」称为主语部分（subject），告诉人们「这个句子讨论的是『一个人或者一个东西』」；「怎么样了」称为谓语部分（predicate，也称「述语部分」），它可以是「做了什么事情」或者「具有某种特性」。主语部分形式比较单一，通常由名词性的结构来担任。谓语部分的形式变化较多，五种基本句型实际就是通过不同的谓语部分结构来表达五种类型的含义。</p>
]]></summary>
    
      <category term="English" scheme="http://liam0205.me/tags/English/"/>
    
      <category term="grammar" scheme="http://liam0205.me/tags/grammar/"/>
    
      <category term="English" scheme="http://liam0205.me/categories/English/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Virtual Audio Cable 解决 CamStudio 在部分 ThinkPad 机型上无法内录的问题]]></title>
    <link href="http://liam0205.me/2014/05/23/CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cable/"/>
    <id>http://liam0205.me/2014/05/23/CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cable/</id>
    <published>2014-05-23T03:24:46.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>最近因为一些缘故，需要在 Win7 上实现录屏和声音内录功能：前者记录计算机屏幕的内容变化，后者记录通过计算机扬声器或耳机线路发出的声音（Speaker 的声音）。在朋友圈中问了一圈，结合自己搜索之后，决定使用开源的 <a href="http://camstudio.org/" target="_blank">CamStudio</a> 来录屏。</p>
<p>CamStudio 十分优秀，视频上支持多种区域方式（全屏、区域、固定大小、窗口），声音上支持计算机内录和从麦克风输入录制，甚至可选鼠标和键盘操作的录制。但在实际操作中 CamStudio 的内录功能无法正常进行，提示 <code>WaveoutGetSelectControl() failed</code> 的错误，并且官方似乎也没有定位问题所在，导致在多个版本中都存在这个错误（见<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">官方论坛的讨论</a>）。</p>
<p>Woedge 在上述<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">讨论</a>中给出了一个解决方案，帮助一些用户解决了问题。这个方案的关键步骤，是打开 Windows 系统录音设备中的禁用设备——立体声混响（Stereo Mix）功能，然后使用立体声混响将系统内部声音和麦克风声音混在一起，交付给 CamStudio 进行录制。</p>
<p>这个方案无疑帮很多用户解决了问题，但在许多 ThinkPad 机型上却不行。原因是部分 ThinkPad 安装的声卡并不支持 Stereo Mix 功能，故而上述关键步骤无法执行。</p>
<p>经过一番研究之后，决定使用 Virtual Audio Cable 来解决问题。</p>
<a id="more"></a>

<h2 id=" 需求分析 ">需求分析</h2>
<ul>
<li>将计算机扬声器 / 耳机音频信号直接输入计算机麦克风</li>
<li>在内录进行时，保证计算机扬声器的正常工作（不能静音）</li>
</ul>
<h2 id=" 解决思路 ">解决思路</h2>
<p>大约是十年前，中国大陆地区流行 MP3 播放器的时候，部分播放器就提供了这种「内录」功能。这些 MP3 播放器大都随机提供了一只内录电缆（Line-in Cable）——类似常见的耳机，只不过正常耳机一头是插头另一头是耳机，而内陆电缆两头都是一模一样的插头，将电缆的一头插入朋友的 MP3 耳机插口中，一头插入自己 MP3 的麦克风插口中，开启录音模式就能录制朋友 MP3 中的歌曲了。当年可是用这个办法节省了不少上网费用（当年家里还是 56K 的拨号上网，一小时六块钱，可贵了）。</p>
<p>这种方式对我来说固然好，但是不免要浪费朋友的时间——内录进行过程中朋友是无法使用 MP3 听音乐的。作为一个爱动手的好孩子，我制作了一个音频分线器，起作用大约就相当于大家普遍使用的 USB 分线器（当计算机 USB 接口不够时，将它接到计算机的 USB 上，然后让其他设备，比如 U 盘，插入到分线器上）。当然，后来才知道这东西到处都有卖，也很便宜。</p>
<p><img src="http://liamsblog.qiniudn.com/post35mmhub.jpg" alt="3.5mm 音频分线器 "></p>
<p>今次我们要做的事情和十年前我曾经做过的事情如出一辙。我们当然也可以用一个分线器加一条内录电缆来达到目的，更好的办法无疑是在计算机内部使用软件来模拟分线器和内录电缆的效果来达到目的。为此，我们需要 Virtual Audio Cable.</p>
<h2 id=" 配置 _Virtual_Audio_Cable">配置 Virtual Audio Cable</h2>
<p>我将我使用的版本上传到了<a href="/attachment/soft/Virtual_Audio_Cable_4_10.zip">这里</a>，你可以下载安装。</p>
<p>接下来我们模拟「内录电缆」的效果。Virtual Audio Cable 在默认设置下，为计算机配置了一些新的输入输出设备。我们暂时不需要修改 Virtual Audio Cable 的设置，直接使用默认设置提供的这些设备即可。</p>
<p>右键 Windows 任务栏上的音量合成器按钮，选择「播放设备」，将「Line 1」设备设置为默认。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cableline1_input.png" alt=" 配置播放设备 "></p>
<p>然后切换到「录制」标签，同样，将「Line 1」设备设置为默认。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cableline1_output.png" alt=" 配置录制设备 "></p>
<p>这样 Virtual Audio Cable 就接管了操作系统音频的输入与输出，相当于将一条 Line-in 电缆接在了计算机耳机和麦克风的接口上。</p>
<p>这时，因为计算机的音频输出完全由 Virtual Audio Cable 的虚拟设备「Line 1」接管，计算机的扬声器 / 耳机中是没有音频信号的，因此我们听不到任何声音。为此，我们需要打开 Virtual Audio Cable 的中继器功能，来模拟前文所述的音频分线器。Virtual Audio Cable 提供了两个中继器模式，分别是 MME 和 KS, 你需要根据你的设备型号来选择。如果你不清楚你的设备型号，不知道选择哪一个的话，也不用担心。因为二者内部的配置完全相同；并且如果当前模式不支持你的硬件，Virtual Audio Cable 就会报错，这时候换另一个就行了。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_CableAudio_Repeater.png" alt="Virtual Audio Cable 的中继器 "></p>
<p>打开中继器窗口之后，将 Wave In 设置为「Line 1」，将 Wave Out 设置为你的系统扬声器。这样就相当于我们用音频分线器将「Line 1」中的信号分流到了系统扬声器之中，同时又输入到了麦克风信号当中。而这正是我们希望的效果。此时点击 Start 启动中继器，计算机的扬声器就会照常工作了。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_CableAudio_Repeater_in_n_out.png" alt=" 中继器窗口的设置 "></p>
<p>这样我们就成功模拟了「内录电缆」和「分线器」的功能，打开 CamStudio 开始录屏吧！</p>
]]></content>
    <summary type="html"><![CDATA[<p>最近因为一些缘故，需要在 Win7 上实现录屏和声音内录功能：前者记录计算机屏幕的内容变化，后者记录通过计算机扬声器或耳机线路发出的声音（Speaker 的声音）。在朋友圈中问了一圈，结合自己搜索之后，决定使用开源的 <a href="http://camstudio.org/" target="_blank">CamStudio</a> 来录屏。</p>
<p>CamStudio 十分优秀，视频上支持多种区域方式（全屏、区域、固定大小、窗口），声音上支持计算机内录和从麦克风输入录制，甚至可选鼠标和键盘操作的录制。但在实际操作中 CamStudio 的内录功能无法正常进行，提示 <code>WaveoutGetSelectControl() failed</code> 的错误，并且官方似乎也没有定位问题所在，导致在多个版本中都存在这个错误（见<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">官方论坛的讨论</a>）。</p>
<p>Woedge 在上述<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">讨论</a>中给出了一个解决方案，帮助一些用户解决了问题。这个方案的关键步骤，是打开 Windows 系统录音设备中的禁用设备——立体声混响（Stereo Mix）功能，然后使用立体声混响将系统内部声音和麦克风声音混在一起，交付给 CamStudio 进行录制。</p>
<p>这个方案无疑帮很多用户解决了问题，但在许多 ThinkPad 机型上却不行。原因是部分 ThinkPad 安装的声卡并不支持 Stereo Mix 功能，故而上述关键步骤无法执行。</p>
<p>经过一番研究之后，决定使用 Virtual Audio Cable 来解决问题。</p>
]]></summary>
    
      <category term="ThinkPad" scheme="http://liam0205.me/tags/ThinkPad/"/>
    
      <category term="CamStudio" scheme="http://liam0205.me/tags/CamStudio/"/>
    
      <category term="Virtual Audio Cable" scheme="http://liam0205.me/tags/Virtual%20Audio%20Cable/"/>
    
      <category term="虚拟声卡" scheme="http://liam0205.me/tags/%E8%99%9A%E6%8B%9F%E5%A3%B0%E5%8D%A1/"/>
    
      <category term="WaveoutGetSelectControl" scheme="http://liam0205.me/tags/WaveoutGetSelectControl/"/>
    
      <category term="CamStudio" scheme="http://liam0205.me/categories/CamStudio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Koreader 阅读 PDF 让 Kindle Paperwhite 如虎添翼]]></title>
    <link href="http://liam0205.me/2014/05/20/koreader-on-kindle-paperwhite/"/>
    <id>http://liam0205.me/2014/05/20/koreader-on-kindle-paperwhite/</id>
    <published>2014-05-20T03:53:38.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>和媳妇谈恋爱快一年了，远在大洋彼岸的媳妇托人带了份礼物给我，说是「知道我常看电子书，用电脑或者 iPad 看书对眼睛不好，所以送了一只『Kindle』给我」。这真是</p>
<blockquote>
<p>有妻如此，夫复何求。</p>
</blockquote>
<p>不过，也有「甜蜜的烦恼」。6 英寸的屏幕对付 A4 纸张大小的 PDF 文件，特别是扫描版的 PDF 文件总是让人不快；尤其 Kindle 原生的阅读器还要在 PDF 文件周边加上白边。好在经过一番搜索和折腾，终于找到了合适的解决方案——神器 Koreader.</p>
<a id="more"></a>

<h2 id="Koreader_ 简介 ">Koreader 简介</h2>
<p><a href="https://github.com/koreader/koreader" target="_blank">Koreader</a> 是用 <a href="http://www.lua.org/about.html" target="_blank">Lua</a> 这个脚本语言开发的 Kindle 插件，它基于 GPLv3 协议发布，可以运行在 Kindle 原生系统上，并支持 PDF, DJVU, EPUB 等格式。</p>
<p>Koreader 通过 <a href="https://github.com/koreader/kpvbooklet/" target="_blank">KPVBooklet</a> 与原生系统集成。成功安装后，将会默认使用 Koreader 打开 PDF, EPUB, DJVU, FB2, CHM 和 DOC 文档，MOBI, AZW, TXT 等格式则会默认使用原生阅读器打开。如果希望通过原生阅读器打开 PDF 等（默认使用 Koreader 的）格式，可以长按文档图标 / 标题，在弹出的窗口中选择「GOTO…/ 前往…」。二者的切换十分方便。</p>
<p>Koreader 的重排（Text Reflow）功能实际上是对另一个开源项目 <a href="http://www.willus.com/k2pdfopt/" target="_blank">K2pdfopt</a> 的移植以及再开发。K2pdfopt 使用完全基于图像处理的方法对文字重新排版：把原始 PDF/DJVU 页面放大，而后再分割成以词为单位的像素区域，把这些像素区域重新排列到目标宽度的页面中（原理如下图）。所以理论上只要能够读取文档的页面像素就可以对其中的文字进行重新排版。</p>
<p><img src="http://vislab.bjmu.edu.cn/blog/hwangxin/wp-content/uploads/2012/10/k2pdfopt.png" alt="K2pdfopt 文字重排原理 "></p>
<p>对 K2pdfopt 的移植和再开发，使得在 Kindle 上实时重排、交互式地微调效果成为可能，而这几乎就完美地解决了 Kindle 用户对 PDF 阅读的全部需求。</p>
<p>Koreader 文字重排效果可以参见 <a href="http://vislab.bjmu.edu.cn/blog/hwangxin/2012/10/read-scanned-pdfs-with-kindlepdfviewer/#i-2" target="_blank">Huang Xin 博客上的一篇文章</a>。</p>
<h2 id=" 在 _Kindle_Paperwrite_ 上的安装 ">在 Kindle Paperwrite 上的安装</h2>
<p>要在 Kindle 上安装插件必须对设备进行越狱（Jailbreak）；而后需要安装 Koreader 依赖的 KPVBooklet；最后安装 Koreader。</p>
<h3 id=" 越狱 ">越狱</h3>
<p>不同于 iOS 系统越狱的极度困难，Kindle 的越狱相对简单许多。</p>
<ul>
<li>到 <a href="http://www.mobileread.com/" target="_blank">MobileRead 论坛</a>上的<a href="http://www.mobileread.com/forums/showthread.php?t=186645" target="_blank">这个帖子</a>中下载 <a href="http://www.mobileread.com/forums/attachment.php?attachmentid=121550&amp;d=1397223190" target="_blank">kindle-jailbreak-x.x.N.zip</a>（x.x.N 是版本号）。当前版本为 1.10.N, 能够胜任 Kindle 固件版本 5.0.x - 5.4.4.2 的越狱工作。</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有名为 <code>kindle-5.4-jailbreak.zip</code> 的文件，解压其中的三个文件到 Kindle 根目录。<ul>
<li><code>bridge.sh</code></li>
<li><code>jb.sh</code></li>
<li><code>Update_jb_$(cd mnt &amp;&amp; cd us &amp;&amp; sh jb.sh).bin</code></li>
</ul>
</li>
<li>断开 Kindle 与计算机的 USB 连接。</li>
<li>依次进行如下操作<ul>
<li>主页按钮（[Home]）</li>
<li>菜单按钮（[Menu]）</li>
<li>设置选项（Settings）</li>
<li>菜单按钮（[Menu]）</li>
<li>更新您的 Kindle（Update Your Kindle）</li>
</ul>
</li>
<li>几秒钟后屏幕下方出现「<strong>*</strong> JAILBREAK <strong>*</strong>」字样表示越狱成功。</li>
</ul>
<h3 id=" 安装 _KPVBooklet">安装 KPVBooklet</h3>
<ul>
<li>到<a href="https://github.com/koreader/kpvbooklet/releases" target="_blank">这里</a>下载 KPVBooklet 的安装包。</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有名为 <code>update_kpvbooklet_x.x.x_install.bin</code> 的文件，将其解压到 Kindle 根目录。</li>
<li>断开 Kindle 与计算机的 USB 连接。</li>
<li>依次进行如下操作<ul>
<li>主页按钮（[Home]）</li>
<li>菜单按钮（[Menu]）</li>
<li>设置选项（Settings）</li>
<li>菜单按钮（[Menu]）</li>
<li>更新您的 Kindle（Update Your Kindle）</li>
</ul>
</li>
</ul>
<h3 id=" 安装 _Koreader">安装 Koreader</h3>
<ul>
<li>到<a href="https://github.com/koreader/koreader/releases" target="_blank">这里</a>下载 Koreader 的安装包，其中最新的版本在最上方，依次向下可以回溯各个版本。<ul>
<li>对于使用 Kindle 原生系统的用户，应当下载名为 <code>koreader-kindle-arm-linux-gnueabi-*.zip</code> 的文件。</li>
</ul>
</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有三个目录，将它们全都解压到 Kindle 根目录。<ul>
<li><code>extensions</code></li>
<li><code>koreader</code></li>
<li><code>launchpad</code></li>
</ul>
</li>
<li>断开 Kindle 与计算机的 USB 连接。</li>
</ul>
<p>至此，安装完毕，在 Kindle 主界面即可直接用 Koreader 打开 PDF 和 EPUB 文档。</p>
<h3 id=" 关于原生系统固件升级 ">关于原生系统固件升级</h3>
<p>开启 WIFI 的情况下原生系统可能会在后台自动升级固件。不管手动固件升级还是自动固件升级都会擦除 KPVBooklet 启动器造成 Koreader 无法启动，解决这个问题只需要升级完成后重新安装 KPVBooklet 即可，Koreader 无需重新安装。</p>
]]></content>
    <summary type="html"><![CDATA[<p>和媳妇谈恋爱快一年了，远在大洋彼岸的媳妇托人带了份礼物给我，说是「知道我常看电子书，用电脑或者 iPad 看书对眼睛不好，所以送了一只『Kindle』给我」。这真是</p>
<blockquote>
<p>有妻如此，夫复何求。</p>
</blockquote>
<p>不过，也有「甜蜜的烦恼」。6 英寸的屏幕对付 A4 纸张大小的 PDF 文件，特别是扫描版的 PDF 文件总是让人不快；尤其 Kindle 原生的阅读器还要在 PDF 文件周边加上白边。好在经过一番搜索和折腾，终于找到了合适的解决方案——神器 Koreader.</p>
]]></summary>
    
      <category term="Kindle" scheme="http://liam0205.me/tags/Kindle/"/>
    
      <category term="PDF" scheme="http://liam0205.me/tags/PDF/"/>
    
      <category term="Koreader" scheme="http://liam0205.me/tags/Koreader/"/>
    
      <category term="Kindle" scheme="http://liam0205.me/categories/Kindle/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为什么一些种类的听力损失是不可逆转的？]]></title>
    <link href="http://liam0205.me/2014/05/10/hearing-impairment/"/>
    <id>http://liam0205.me/2014/05/10/hearing-impairment/</id>
    <published>2014-05-10T07:47:56.000Z</published>
    <updated>2014-05-23T07:42:45.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文发布在<a href="http://www.zhihu.com/people/LiamHuang" target="_blank">我</a>在<a href="http://www.zhihu.com/question/23714947/answer/25434444" target="_blank">知乎上的回答</a>，有节选。</p>
<p><strong>在未获得本人书面许可的情况下，禁止任何形式的「合理使用」、转载、分享以及将链接发至知乎主站外任何网站或 App （包括知乎日报），外泄斩立决。智商欠奉，中文阅读障碍或微博控患者, 请在监护人及医师协助下学习本段落，谢谢合作。</strong></p>
</blockquote>
<p>众所周知，声音是在空气中传播的机械波，简称声波；而人类产生听觉的过程，就是「接收声波」、「转化和传递声波信号」、「转化为神经信号」从而最终刺激大脑产生听觉的过程。三个步骤依次进行，其中任何一个步骤出现问题，都会影响听力。通常所说的「听力损失不可逆」是第三个步骤出现的问题。</p>
<a id="more"></a>

<p>接收声波的步骤，由通称「外耳」的「耳廓」和「外耳道」承担，它们的形状类似喇叭，从外而内截面逐渐减小，因此起到收集的作用。外耳道内的「耵聍腺」及「皮脂腺」的分泌物，就是我们俗称的「耳屎」，它的分泌量不同人有不同。分泌量大的人，若不经常清理，可能堵塞外耳道，从而干扰声波的接收，影响听力。这种情况的听力下降，是可以恢复的，只需清洁外耳道即可。大多数情况可以自行使用软质的棉签清理，如果阻塞严重，则需要到医院请医生处理。</p>
<p>转化和传递声波信号的步骤，由通称「中耳」的「鼓膜」、「鼓室」内的「听小骨」承担。机械波的本质是振动能量的传递。外耳接受的声波，引起鼓膜的振动，再通过听小骨传递到下一个步骤。如果鼓膜穿孔，则无法承担声波信号转化为振动的工作，导致失聪。鼓膜穿孔通常是由于气压剧变、暴力等引起的外伤和中耳炎等引起，大多数情况能通过手术治疗恢复。听小骨创伤也可能引起听力损失，但大多数情况也能够经治疗恢复。</p>
<p>转化为神经信号的步骤，主要由通称「内耳」中的「耳蜗」承担。耳蜗是由细小空管蜗旋形成的结构，空管内有被称为「毛细胞」的绒毛状结构。这些绒毛随中耳传来的振动而颤动，将振动信号转换为神经冲动，形成神经信号。长时间的大音量刺激，会引起这些绒毛的「倒伏」，从而影响听力。这些绒毛的「倒伏」，人体无法自行修复，医学界目前也没有好的办法。所以这部分引起的听力损伤是「不可逆」的。</p>
<p>额外的话：</p>
<p>内耳中的「半规管」是三个互相垂直的半规管组成的联通空管结构，内有淋巴液。淋巴液收到重力及加速度引起的「惯性力」影响，在半规管内流动。人体通过半规管内的淋巴液的状态，从而确定大脑所处的倾角和加速度的状态，影响人体的平衡感。各省市科技馆内常设的「魔屋」，就是利用半规管产生的平衡感与眼睛所接收的地形信息的不对应，产生「魔」的效果。「陀螺仪」也是通过类似的原理确定加速度状态的，不知是否收到耳朵里半规管结构的启发。</p>
<p>抛砖引玉，希望不要贻笑大方。</p>
]]></content>
    <summary type="html"><![CDATA[<blockquote>
<p>原文发布在<a href="http://www.zhihu.com/people/LiamHuang" target="_blank">我</a>在<a href="http://www.zhihu.com/question/23714947/answer/25434444" target="_blank">知乎上的回答</a>，有节选。</p>
<p><strong>在未获得本人书面许可的情况下，禁止任何形式的「合理使用」、转载、分享以及将链接发至知乎主站外任何网站或 App （包括知乎日报），外泄斩立决。智商欠奉，中文阅读障碍或微博控患者, 请在监护人及医师协助下学习本段落，谢谢合作。</strong></p>
</blockquote>
<p>众所周知，声音是在空气中传播的机械波，简称声波；而人类产生听觉的过程，就是「接收声波」、「转化和传递声波信号」、「转化为神经信号」从而最终刺激大脑产生听觉的过程。三个步骤依次进行，其中任何一个步骤出现问题，都会影响听力。通常所说的「听力损失不可逆」是第三个步骤出现的问题。</p>
]]></summary>
    
      <category term="听力" scheme="http://liam0205.me/tags/%E5%90%AC%E5%8A%9B/"/>
    
      <category term="损伤" scheme="http://liam0205.me/tags/%E6%8D%9F%E4%BC%A4/"/>
    
      <category term="life" scheme="http://liam0205.me/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】符合 GBT7714-2005 标准的 BibTeX Style]]></title>
    <link href="http://liam0205.me/2014/05/09/gbt7714-2005-bibtex-style/"/>
    <id>http://liam0205.me/2014/05/09/gbt7714-2005-bibtex-style/</id>
    <published>2014-05-08T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>这是一份符合国家标准<a href="https://github.com/Haixing-Hu/typesetting-standard/raw/master/%E5%9B%BE%E4%B9%A6%E3%80%81%E6%9C%9F%E5%88%8A%E3%80%81%E8%AE%BA%E6%96%87%E7%9A%84%E7%BC%96%E6%8E%92/%E3%80%90GB:T%207714-2005%E3%80%91%E6%96%87%E5%90%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99.pdf" target="_blank">《GB/T 7714-2005: 文后参考文献著录规则》</a>的 BibTeX 样式文件，项目托管在 <a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style" target="_blank">GitHub</a> 上。具体的排版效果请参见<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/test/test.pdf" target="_blank">测试文档</a>。</p>
<a id="more"></a>

<h2 id=" 特色 ">特色</h2>
<ul>
<li>严格遵循中国国家标准<a href="https://github.com/Haixing-Hu/typesetting-standard/raw/master/%E5%9B%BE%E4%B9%A6%E3%80%81%E6%9C%9F%E5%88%8A%E3%80%81%E8%AE%BA%E6%96%87%E7%9A%84%E7%BC%96%E6%8E%92/%E3%80%90GB:T%207714-2005%E3%80%91%E6%96%87%E5%90%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99.pdf" target="_blank">《GB/T 7714-2005: 文后参考文献著录规则》</a>，适合中文书籍排版和中文论文排版；</li>
<li>代码完全手写生成，每行 BAFLL 代码都有对应的 Java 伪代码翻译，方便使用者学习和修改；</li>
<li>有<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/test/test.pdf" target="_blank">测试文档</a>，经过了详细的测试；</li>
<li>有详细的<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/manual/manual.pdf" target="_blank">用户手册</a>。</li>
</ul>
<h2 id=" 支持的文献类型 ">支持的文献类型</h2>
<ul>
<li>书籍：<code>book</code></li>
<li>汇编：<code>collection</code></li>
<li>会议录：<code>proceedings</code>或<code>conference</code></li>
<li>学位论文：<code>phdthesis</code>、<code>masterthesis</code>或<code>bachelorthesis</code></li>
<li>科技报告：<code>techreport</code></li>
<li>技术标准：<code>standard</code></li>
<li>参考工具：<code>reference</code></li>
<li>手册：<code>manual</code></li>
<li>未发表文献：<code>unpublished</code>或<code>manuscript</code></li>
<li>期刊：<code>periodical</code></li>
<li>报纸：<code>newspaper</code></li>
<li>专利：<code>patent</code></li>
<li>网页：<code>online</code></li>
<li>计算机程序：<code>program</code></li>
<li>数据库：<code>database</code></li>
<li>书籍中的析出文献：<code>inbook</code></li>
<li>汇编中的析出文献：<code>incollection</code></li>
<li>会议录中的析出文献（会议论文）：<code>inproceedings</code></li>
<li>期刊中的析出文献（期刊论文）：<code>article</code></li>
<li>新闻报道：<code>news</code></li>
</ul>
<h2 id=" 下载 ">下载</h2>
<ul>
<li><a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/tarball/master" target="_blank">下载 tar.gz 压缩包</a>，适合 Linux/Mac 用户</li>
<li><a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/zipball/master" target="_blank">下载 zip 压缩包</a>，适合 Windows 用户</li>
</ul>
<h2 id=" 安装 ">安装</h2>
<ol>
<li>下载<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/gbt7714-2005.bst" target="_blank">BST 文件</a></li>
<li>将其复制到<code>$(TEXMFLOCAL)/bibtex/bst/</code>，其中<code>$(TEXMFLOCAL)</code>是你的机器上的本地的<code>texmf</code>目录，您可以通过执行<code>kpsewhich --show-path=ls-R</code>获得该目录路径；</li>
<li>通过执行<code>texhash</code>刷新<code>texmf</code>目录索引，注意执行该命令可能需要系统管理员权限；</li>
<li>如果您使用 Linux 或 Mac OS X 操作系统，您也可以通过项目所提供的<code>Makefile</code>脚本进行安装，只需在项目所在目录下运行以下命令：<code>sudo make</code>，注意需要通过<code>sudo</code>切换 root 权限。</li>
</ol>
<h2 id=" 使用 ">使用</h2>
<p>您只需在您的 LaTeX 源码中使用<code>gbt7714-2005</code>参考文献样式即可：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="command">\bibliographystyle</span><span class="special">{</span>gbt7714-2005<span class="special">}</span>
</pre></td></tr></table></figure>

<p>更加具体的使用说明可参见<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/manual/manual.pdf" target="_blank">用户手册</a>。</p>
<h2 id="TODO">TODO</h2>
<ul class="task-list"><br><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked disabled> 完成 BibTeX 样式文件</li><br><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked disabled> 完成测试文档</li><br><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled> 撰写用户手册</li><br></ul>

<h2 id=" 相关项目 ">相关项目</h2>
<ul>
<li><a href="https://github.com/Haixing-Hu/nju-thesis" target="_blank">南京大学学位论文 XeLaTeX 模板</a></li>
<li><a href="https://github.com/Haixing-Hu/typesetting-standard" target="_blank">中文书刊排版相关标准和规范</a></li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>这是一份符合国家标准<a href="https://github.com/Haixing-Hu/typesetting-standard/raw/master/%E5%9B%BE%E4%B9%A6%E3%80%81%E6%9C%9F%E5%88%8A%E3%80%81%E8%AE%BA%E6%96%87%E7%9A%84%E7%BC%96%E6%8E%92/%E3%80%90GB:T%207714-2005%E3%80%91%E6%96%87%E5%90%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99.pdf" target="_blank">《GB/T 7714-2005: 文后参考文献著录规则》</a>的 BibTeX 样式文件，项目托管在 <a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style" target="_blank">GitHub</a> 上。具体的排版效果请参见<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/test/test.pdf" target="_blank">测试文档</a>。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="BibTeX" scheme="http://liam0205.me/tags/BibTeX/"/>
    
      <category term="bst" scheme="http://liam0205.me/tags/bst/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】为所有的浮动体一次性设置浮动选项]]></title>
    <link href="http://liam0205.me/2014/05/08/float-setting/"/>
    <id>http://liam0205.me/2014/05/08/float-setting/</id>
    <published>2014-05-07T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>节选自 <a href="http://elegantlatex.tk/2014/04/02/float-setting/" target="_blank">elegantlatex</a>.</p>
<p>在我们插图或者插入表格到 LaTeX 文档中，我们会碰到一个概念——浮动体，有时候，我们在文中用到的 table 或者 figure 环境的浮动选项都是相同的，比如 htbp，并且对 table 内、或者 figure 中的内容居中对齐（\centering），本文将介绍如何统一设置浮动体的浮动选项，以及居中设置。本文以 table 环境为例，figure 类似。</p>
<a id="more"></a>

<p>可以借助 <code>floatrow</code> 宏包来达到目的。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>floatrow<span class="special">}</span>        <span class="comment">% this automatically centers all floats</span>
<span class="command">\floatplacement</span><span class="special">{</span>table<span class="special">}</span><span class="special">{</span>hbtp<span class="special">}</span> <span class="comment">% all tables are given the [hbtp] option</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>table<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>tabular<span class="special">}</span><span class="special">{</span>lll<span class="special">}</span>
1 <span class="special">&amp;</span> 2 <span class="special">&amp;</span> 3<span class="command">\\</span>
a <span class="special">&amp;</span> b <span class="special">&amp;</span> c<span class="command">\\</span>
<span class="command">\end</span><span class="special">{</span>tabular<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>table<span class="special">}</span>

<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>

]]></content>
    <summary type="html"><![CDATA[<p>节选自 <a href="http://elegantlatex.tk/2014/04/02/float-setting/" target="_blank">elegantlatex</a>.</p>
<p>在我们插图或者插入表格到 LaTeX 文档中，我们会碰到一个概念——浮动体，有时候，我们在文中用到的 table 或者 figure 环境的浮动选项都是相同的，比如 htbp，并且对 table 内、或者 figure 中的内容居中对齐（\centering），本文将介绍如何统一设置浮动体的浮动选项，以及居中设置。本文以 table 环境为例，figure 类似。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="float" scheme="http://liam0205.me/tags/float/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】带圈数字与带圈数字列表]]></title>
    <link href="http://liam0205.me/2014/05/08/latex-circled-numbers/"/>
    <id>http://liam0205.me/2014/05/08/latex-circled-numbers/</id>
    <published>2014-05-07T16:00:00.000Z</published>
    <updated>2014-05-23T07:43:40.000Z</updated>
    <content type="html"><![CDATA[<p>在许多文章中，特别是中文文章中，我们会见到带有圆圈的数字。它们有点是单独出现的，有点作为列表的计数出现。</p>
<p>LaTeX 提供了 <code>\textcircled</code> 命令，但<a href="http://tex.stackexchange.com/questions/7032/good-way-to-make-textcircled-numbers" target="_blank">效果并不好</a>。<a href="http://www.latexstudio.net/latex-tips-768-defined-for-the-enclosed-list-of-environment/" target="_blank">LaTeX studio</a> 曾经提供了一个方法，但缺乏通用性。</p>
<p>这里给出一个利用 Ti<em>k</em>Z 绘制的方法，能较好地解决这个问题，但仍需完善。</p>
<a id="more"></a>

<p>基本的思路是定义一个新命令，接受一个数字参数，用 Ti<em>k</em>Z 在它周围画圈。同时要考虑基线和对齐的问题。一个尝试如下：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="command">\usepackage</span><span class="special">{</span>tikz<span class="special">}</span>
<span class="command">\newcommand*</span><span class="special">{</span><span class="command">\circled</span><span class="special">}</span><span class="special">[</span>1<span class="special">]</span><span class="special">{</span><span class="command">\lower</span>.7ex<span class="command">\hbox</span><span class="special">{</span><span class="command">\tikz</span><span class="command">\draw</span> (0pt, 0pt)<span class="comment">%</span>
    circle (.5em) node <span class="special">{</span><span class="command">\makebox</span><span class="special">[</span>1em<span class="special">]</span><span class="special">[</span>c<span class="special">]</span><span class="special">{</span><span class="command">\small</span> <span class="special">#</span>1<span class="special">}</span><span class="special">}</span>;<span class="special">}</span><span class="special">}</span>
</pre></td></tr></table></figure>


<p>这个新定义的命令可以按照 <code>\textcircled</code> 方法在正文中使用，如果需要用在列表中，则因为「脆弱命令」的问题，需要处理一下。这里我们选择使用 <code>etoolbox</code> 宏包提供的 <code>\robustify</code> 来处理一下，同时结合 <code>enumitem</code> 宏包，给出示例用法如下：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>tikz<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>etoolbox<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>enumitem<span class="special">}</span>
<span class="command">\newcommand*</span><span class="special">{</span><span class="command">\circled</span><span class="special">}</span><span class="special">[</span>1<span class="special">]</span><span class="special">{</span><span class="command">\lower</span>.7ex<span class="command">\hbox</span><span class="special">{</span><span class="command">\tikz</span><span class="command">\draw</span> (0pt, 0pt)<span class="comment">%</span>
    circle (.5em) node <span class="special">{</span><span class="command">\makebox</span><span class="special">[</span>1em<span class="special">]</span><span class="special">[</span>c<span class="special">]</span><span class="special">{</span><span class="command">\small</span> <span class="special">#</span>1<span class="special">}</span><span class="special">}</span>;<span class="special">}</span><span class="special">}</span>
<span class="command">\robustify</span><span class="special">{</span><span class="command">\circled</span><span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\mbox</span><span class="special">{</span><span class="special">}</span><span class="command">\rlap</span><span class="special">{</span><span class="command">\rule</span><span class="special">{</span>.7<span class="command">\linewidth</span><span class="special">}</span><span class="special">{</span>.4pt<span class="special">}</span><span class="special">}</span><span class="comment">%</span>
This is the circled number <span class="command">\circled</span><span class="special">{</span>20<span class="special">}</span>.

<span class="command">\begin</span><span class="special">{</span>enumerate<span class="special">}</span><span class="special">[</span>label=<span class="command">\circled</span><span class="special">{</span><span class="command">\arabic*</span><span class="special">}</span><span class="special">]</span>
<span class="command">\item</span> I
<span class="command">\item</span> am
<span class="command">\item</span> happy
<span class="command">\item</span> to
<span class="command">\item</span> join
<span class="command">\item</span> with
<span class="command">\item</span> you
<span class="command">\item</span> today
<span class="command">\item</span> in
<span class="command">\item</span> what
<span class="command">\item</span> will
<span class="command">\item</span> go
<span class="command">\item</span> down
<span class="command">\item</span> in
<span class="command">\item</span> history
<span class="command">\item</span> as
<span class="command">\item</span> the
<span class="command">\item</span> greatest
<span class="command">\item</span> demonstration
<span class="command">\item</span> for
<span class="command">\item</span> freedom
<span class="command">\item</span> in
<span class="command">\item</span> the
<span class="command">\item</span> history
<span class="command">\item</span> of
<span class="command">\item</span> our
<span class="command">\item</span> nation.
<span class="command">\end</span><span class="special">{</span>enumerate<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<hr>
<p>转载请注明作者，并保留原文链接。</p>
]]></content>
    <summary type="html"><![CDATA[<p>在许多文章中，特别是中文文章中，我们会见到带有圆圈的数字。它们有点是单独出现的，有点作为列表的计数出现。</p>
<p>LaTeX 提供了 <code>\textcircled</code> 命令，但<a href="http://tex.stackexchange.com/questions/7032/good-way-to-make-textcircled-numbers" target="_blank">效果并不好</a>。<a href="http://www.latexstudio.net/latex-tips-768-defined-for-the-enclosed-list-of-environment/" target="_blank">LaTeX studio</a> 曾经提供了一个方法，但缺乏通用性。</p>
<p>这里给出一个利用 Ti<em>k</em>Z 绘制的方法，能较好地解决这个问题，但仍需完善。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="TikZ" scheme="http://liam0205.me/tags/TikZ/"/>
    
      <category term="circled" scheme="http://liam0205.me/tags/circled/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】利用 TikZ 在 LaTeX 文档中制作水印效果]]></title>
    <link href="http://liam0205.me/2014/04/22/LaTeX-watermark/"/>
    <id>http://liam0205.me/2014/04/22/LaTeX-watermark/</id>
    <published>2014-04-21T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>本文最早发布于<a href="http://zhuanlan.zhihu.com/LaTeX/19734756" target="_blank">知乎专栏</a>，略有修改.</p>
<p><strong>在未获得本人书面许可的情况下，禁止任何形式的「合理使用」、转载、分享以及将链接发至知乎主站外任何网站或 App （包括知乎日报），外泄斩立决。智商欠奉，中文阅读障碍或微博控患者, 请在监护人及医师协助下学习本段落，谢谢合作。</strong></p>
<p>制作水印基本上需要解决下面几个问题：</p>
<ul>
<li>水印应该叠放在正文的下面，不得覆盖文字</li>
<li>水印应该放置在合适的位置</li>
<li>水印的颜色应该足够淡，因此不会影响（太多）文章正文的阅读</li>
</ul>
<a id="more"></a>

<p>在 LaTeX 中，可以用 <a href="http://www.ctan.org/pkg/eso-pic" target="_blank">eso-pic 宏包</a>提供的 \AddToShipoutPictureBG 命令，来将内容叠放在正文的下面；使用 <a href="http://www.ctan.org/pkg/pgf" target="_blank">Ti<em>k</em>Z 宏包</a>（这是绘图工具 PGF 的前端）来为水印文字定位；使用 <a href="http://www.ctan.org/pkg/xcolor" target="_blank">xcolor 宏包</a>设置水印的颜色。</p>
<p>同时，我们会希望：</p>
<ul>
<li>设定水印文字内容</li>
<li>设定水印文字大小</li>
<li>设定水印文字偏转角度</li>
<li>能够在合适的位置开启水印效果</li>
</ul>
<p>于是我们有了下面这样的实现：</p>
<pre><code><span class="command">\newcommand</span><span class="special">{</span><span class="command">\watermark</span><span class="special">}</span><span class="special">[</span>3<span class="special">]</span><span class="special">{</span><span class="command">\AddToShipoutPictureBG</span><span class="special">{</span>
<span class="command">\parbox</span><span class="special">[</span>b<span class="special">]</span><span class="special">[</span><span class="command">\paperheight</span><span class="special">]</span><span class="special">{</span><span class="command">\paperwidth</span><span class="special">}</span><span class="special">{</span>
<span class="command">\vfill</span><span class="comment">%</span>
<span class="command">\centering</span><span class="comment">%</span>
<span class="command">\tikz</span><span class="special">[</span>remember picture, overlay<span class="special">]</span><span class="comment">%</span>
  <span class="command">\node</span> <span class="special">[</span>rotate = <span class="special">#</span>1, scale = <span class="special">#</span>2<span class="special">]</span> at (current page.center)<span class="comment">%</span>
    <span class="special">{</span><span class="command">\textcolor</span><span class="special">{</span>gray!80!cyan!30<span class="special">}</span><span class="special">{</span><span class="special">#</span>3<span class="special">}</span><span class="special">}</span>;
<span class="command">\vfill</span><span class="special">}</span><span class="special">}</span><span class="special">}</span>
<span class="command">\newcommand</span><span class="special">{</span><span class="command">\watermarkoff</span><span class="special">}</span><span class="special">{</span><span class="command">\ClearShipoutPictureBG</span><span class="special">}</span>
</code></pre><p>一个可供测试的完整例子是：</p>
<pre><code><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>tikz<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>xcolor<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>eso-pic<span class="special">}</span>

<span class="command">\newcommand</span><span class="special">{</span><span class="command">\watermark</span><span class="special">}</span><span class="special">[</span>3<span class="special">]</span><span class="special">{</span><span class="command">\AddToShipoutPictureBG</span><span class="special">{</span>
<span class="command">\parbox</span><span class="special">[</span>b<span class="special">]</span><span class="special">[</span><span class="command">\paperheight</span><span class="special">]</span><span class="special">{</span><span class="command">\paperwidth</span><span class="special">}</span><span class="special">{</span>
<span class="command">\vfill</span><span class="comment">%</span>
<span class="command">\centering</span><span class="comment">%</span>
<span class="command">\tikz</span><span class="special">[</span>remember picture, overlay<span class="special">]</span><span class="comment">%</span>
  <span class="command">\node</span> <span class="special">[</span>rotate = <span class="special">#</span>1, scale = <span class="special">#</span>2<span class="special">]</span> at (current page.center)<span class="comment">%</span>
    <span class="special">{</span><span class="command">\textcolor</span><span class="special">{</span>gray!80!cyan!30<span class="special">}</span><span class="special">{</span><span class="special">#</span>3<span class="special">}</span><span class="special">}</span>;
<span class="command">\vfill</span><span class="special">}</span><span class="special">}</span><span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>blindtext<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\watermark</span><span class="special">{</span>60<span class="special">}</span><span class="special">{</span>10<span class="special">}</span><span class="special">{</span>DRAFT<span class="special">}</span>
<span class="command">\blinddocument</span>
<span class="command">\clearpage</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</code></pre><p>以上。</p>
]]></content>
    <summary type="html"><![CDATA[<p>本文最早发布于<a href="http://zhuanlan.zhihu.com/LaTeX/19734756" target="_blank">知乎专栏</a>，略有修改.</p>
<p><strong>在未获得本人书面许可的情况下，禁止任何形式的「合理使用」、转载、分享以及将链接发至知乎主站外任何网站或 App （包括知乎日报），外泄斩立决。智商欠奉，中文阅读障碍或微博控患者, 请在监护人及医师协助下学习本段落，谢谢合作。</strong></p>
<p>制作水印基本上需要解决下面几个问题：</p>
<ul>
<li>水印应该叠放在正文的下面，不得覆盖文字</li>
<li>水印应该放置在合适的位置</li>
<li>水印的颜色应该足够淡，因此不会影响（太多）文章正文的阅读</li>
</ul>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="watermark" scheme="http://liam0205.me/tags/watermark/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX】Pro Git 中文版]]></title>
    <link href="http://liam0205.me/2014/04/01/LaTeX-Pro-Git-zh/"/>
    <id>http://liam0205.me/2014/04/01/LaTeX-Pro-Git-zh/</id>
    <published>2014-03-31T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>Pro Git 是 Git Hub 员工 Scott Chacon 撰写的关于 Git 版本控制系统的书籍，其源码开源，托管在 <a href="https://github.com/progit/progit" target="_blank">Git Hub</a> 上。</p>
<p>我将当前（2014-4-2）的仓库克隆到本地，并将其中的 markdown 文件转换成了 LaTeX 文件，编译得到 PDF 档案。</p>
<a id="more"></a>

<hr>
<p>下载：</p>
<p>中文版：<a href="/attachment/Git/progit.zh.pdf">/attachment/Git/progit.zh.pdf</a></p>
<p>日文版：<a href="/attachment/Git/progit.ja.pdf">/attachment/Git/progit.ja.pdf</a></p>
<p>英文版：<a href="/attachment/Git/progit.en.pdf">/attachment/Git/progit.en.pdf</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>Pro Git 是 Git Hub 员工 Scott Chacon 撰写的关于 Git 版本控制系统的书籍，其源码开源，托管在 <a href="https://github.com/progit/progit" target="_blank">Git Hub</a> 上。</p>
<p>我将当前（2014-4-2）的仓库克隆到本地，并将其中的 markdown 文件转换成了 LaTeX 文件，编译得到 PDF 档案。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="Git" scheme="http://liam0205.me/tags/Git/"/>
    
      <category term="GitPro" scheme="http://liam0205.me/tags/GitPro/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Life on Python】一个简易的通讯录]]></title>
    <link href="http://liam0205.me/2014/01/29/Py-Contacts/"/>
    <id>http://liam0205.me/2014/01/29/Py-Contacts/</id>
    <published>2014-01-28T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>提供了 add, remove, find, view 和 exit 几个命令行接口，意义很明确了，所以 help 选项没空写内容也无所谓了。第一次自己思考结构写的 Python 程序，有点小爽。XD</p>
<pre><code><span class="keyword">import</span> os
<span class="keyword">import</span> cPickle <span class="keyword">as</span> pickle
<span class="class"><span class="keyword">class</span> <span class="title">Persion</span>:</span>
    <span class="string">'''\
    Describe a nature persion, his/her name, sex, and \
    age.'''</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, info)</span>:</span>
        <span class="string">'''Initializes the person's data.'''</span>
        self.name = info[<span class="number">0</span>]
        self.sex  = info[<span class="number">1</span>]
        self.age  = info[<span class="number">2</span>]
        <span class="keyword">print</span> <span class="string">'(Initializing %s)'</span> % self.name
<span class="class"><span class="keyword">class</span> <span class="title">Contact</span><span class="params">(Persion)</span>:</span>
    <span class="string">'''\
    Describe a contact that is a nature persion, and \
    has his/her Tel., Addr., and Email.'''</span>
    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, info)</span>:</span>
        Persion.__init__(self, info)
        self.tel   = info[<span class="number">3</span>]
        self.addr  = info[<span class="number">4</span>]
        self.email = info[<span class="number">5</span>]
        self.info  = {self.name : (self.sex, self.age, self.tel, self.addr,\
            self.email)}
    <span class="function"><span class="keyword">def</span> <span class="title">tell</span><span class="params">(self)</span>:</span>
        <span class="keyword">print</span> self.info

<span class="function"><span class="keyword">def</span> <span class="title">command_line_interface</span><span class="params">()</span>:</span>
    prompt = <span class="string">'--&gt; '</span>
    workingDict = {}
    <span class="keyword">if</span> os.path.exists(<span class="string">r'.\Contact.data'</span>):
        workingDict = pickle.load(open(<span class="string">r'.\Contact.data'</span>, <span class="string">'r'</span>))
    <span class="keyword">else</span>:
        <span class="keyword">pass</span>
    <span class="keyword">while</span> <span class="keyword">True</span>:
        getInput = raw_input(prompt)
        <span class="keyword">if</span> getInput == <span class="string">'exit'</span>:
            pickle.dump(workingDict, open(<span class="string">r'.\Contact.data'</span>, <span class="string">'w'</span>))
            <span class="keyword">break</span>
        <span class="keyword">elif</span> getInput == <span class="string">'add'</span>:
            newContact = generate_new_contact(get_info_from_raw_input())
            workingDict[newContact.name] = newContact.info[newContact.name]
            <span class="keyword">pass</span>
        <span class="keyword">elif</span> getInput == <span class="string">'find'</span>:
            pattern = raw_input(<span class="string">'Enter the name:'</span>)
            <span class="keyword">if</span> pattern <span class="keyword">in</span> workingDict:
                <span class="keyword">print</span> <span class="string">'-'</span> * <span class="number">45</span>
                <span class="keyword">print</span> <span class="string">'Name:  %s\nSex:   %s\nAge:   %s\nTel.:  %s\nAddr.: %s\nEmail: %s'</span> % (pattern, workingDict[pattern][<span class="number">0</span>], workingDict[pattern][<span class="number">1</span>], workingDict[pattern][<span class="number">2</span>], workingDict[pattern][<span class="number">3</span>], workingDict[pattern][<span class="number">4</span>])
                <span class="keyword">print</span> <span class="string">'-'</span> * <span class="number">45</span>
            <span class="keyword">else</span>:
                <span class="keyword">print</span> <span class="string">'Sorry, but "%s" is not in your contacts list.'</span> % pattern
        <span class="keyword">elif</span> getInput == <span class="string">'remove'</span>:
            pattern = raw_input(<span class="string">'Enter the name:'</span>)
            <span class="keyword">if</span> pattern <span class="keyword">in</span> workingDict:
                workingDict.pop(pattern)
                <span class="keyword">print</span> <span class="string">'Contact "%s" has been removed.'</span> % pattern
            <span class="keyword">else</span>:
                <span class="keyword">print</span> <span class="string">'Sorry, but "%s" is not in your contacts list.'</span> % pattern
        <span class="keyword">elif</span> getInput == <span class="string">'view'</span>:
            population = len(workingDict)
            <span class="keyword">if</span> population == <span class="number">1</span>:
                <span class="keyword">print</span> <span class="string">'There is only one contact:'</span>
            <span class="keyword">elif</span> population == <span class="number">0</span>:
                <span class="keyword">print</span> <span class="string">'There is no contact.'</span>
                <span class="keyword">continue</span>
            <span class="keyword">else</span>:
                <span class="keyword">print</span> <span class="string">'There are %d contacts:'</span> % population
            <span class="keyword">for</span> name, info <span class="keyword">in</span> workingDict.items():
                <span class="keyword">print</span> <span class="string">'-'</span> * <span class="number">45</span>
                <span class="keyword">print</span> <span class="string">'Name:  %s\nSex:   %s\nAge:   %s\nTel.:  %s\nAddr.: %s\nEmail: %s'</span> % (name, info[<span class="number">0</span>], info[<span class="number">1</span>], info[<span class="number">2</span>], info[<span class="number">3</span>], info[<span class="number">4</span>])
            <span class="keyword">pass</span>
        <span class="keyword">elif</span> getInput == <span class="string">'help'</span>:
            <span class="keyword">print</span> getInput
        <span class="keyword">else</span>:
            exec(getInput)
            <span class="keyword">pass</span>

<span class="function"><span class="keyword">def</span> <span class="title">get_info_from_raw_input</span><span class="params">()</span>:</span>
    info = []
    info.append(raw_input(<span class="string">'Name:  '</span>))
    info.append(raw_input(<span class="string">'Sex:   '</span>))
    info.append(raw_input(<span class="string">'Age:   '</span>))
    info.append(raw_input(<span class="string">'Tel.:  '</span>))
    info.append(raw_input(<span class="string">'Addr.: '</span>))
    info.append(raw_input(<span class="string">'Email: '</span>))
    <span class="keyword">return</span> info
<span class="function"><span class="keyword">def</span> <span class="title">generate_new_contact</span><span class="params">(info)</span>:</span>
    <span class="keyword">return</span> Contact(info)

<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:
    command_line_interface()
</code></pre>]]></content>
    
    
      <category term="Python" scheme="http://liam0205.me/tags/Python/"/>
    
      <category term="Contact" scheme="http://liam0205.me/tags/Contact/"/>
    
      <category term="Python" scheme="http://liam0205.me/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Life on Python】批量切割图片]]></title>
    <link href="http://liam0205.me/2014/01/27/Py-Incise-Images/"/>
    <id>http://liam0205.me/2014/01/27/Py-Incise-Images/</id>
    <published>2014-01-26T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>按照 <code>horizon</code> 和 <code>vertic</code> 两个变量切割当前目录下所有图片（包括子目录）。</p>
<p>代码很简单，就不封装了。</p>
<pre><code>import Image <span class="keyword">as</span> img
import os

imgTypes = [<span class="string">'.png'</span>,<span class="string">'.jpg'</span>,<span class="string">'.bmp'</span>]

horizon = <span class="number">8</span>
vertic  = <span class="number">1</span>

<span class="keyword">for</span> root, dirs, <span class="built_in">files</span> <span class="operator">in</span> os.walk(<span class="string">'.'</span>):
    <span class="keyword">for</span> currentFile <span class="operator">in</span> <span class="built_in">files</span>:
        crtFile = root + <span class="string">'\\'</span> + currentFile
        <span class="keyword">if</span> crtFile[crtFile.rindex(<span class="string">'.'</span>):].<span class="built_in">lower</span>() <span class="operator">in</span> imgTypes:
            crtIm = img.<span class="built_in">open</span>(crtFile)
            crtW, crtH = crtIm.size
            hStep = crtW<span class="comment"> // horizon</span>
            vStep = crtH<span class="comment"> // vertic</span>
            <span class="keyword">for</span> i <span class="operator">in</span> range(vertic):
                <span class="keyword">for</span> j <span class="operator">in</span> range(horizon):
                    crtOutFileName = crtFile[:crtFile.rindex(<span class="string">'.'</span>)] + \
                        <span class="string">'_'</span> + str(i) + <span class="string">'_'</span> + str(j)\
                        + crtFile[crtFile.rindex(<span class="string">'.'</span>):].<span class="built_in">lower</span>()
                    box = (j * hStep, i * vStep, (j + <span class="number">1</span>) * hStep, (i + <span class="number">1</span>) * vStep)
                    cropped = crtIm.crop(box)
                    cropped.save(crtOutFileName)
</code></pre>]]></content>
    
    
      <category term="Python" scheme="http://liam0205.me/tags/Python/"/>
    
      <category term="Images" scheme="http://liam0205.me/tags/Images/"/>
    
      <category term="Python" scheme="http://liam0205.me/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Life on Python】一个古老闯关游戏]]></title>
    <link href="http://liam0205.me/2014/01/18/Py-challenge/"/>
    <id>http://liam0205.me/2014/01/18/Py-challenge/</id>
    <published>2014-01-17T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>Python 是一个很实用的脚本语言，学习 Python 无疑需要辅以大量的练习，才能把自己所学运用到实践中去。<a href="http://www.pythonchallenge.com/" target="_blank">PythonChallenge</a> 是国外的一款闯关游戏，在挑战关卡的同时学习如何运用 Python 解决问题。</p>
<a id="more"></a>

<h3 id=" 第〇关 ">第〇关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/0.html" target="_blank">http://www.pythonchallenge.com/pc/def/0.html</a></p>
<p><img src="http://www.pythonchallenge.com/pc/def/calc.jpg" alt=""></p>
<p>图片提示计算 2 的 38 次幂方的值。在 Python 解释器中输入</p>
<pre><code>2**38
</code></pre><p>即可得到答案 <code>274877906944L</code>. 这里最后的 L 表示这是一个长整形的数字。将 274877906944 填入页面地址进入下一关。</p>
<h3 id=" 第一关 ">第一关</h3>
<p>地址跳转到 <a href="http://www.pythonchallenge.com/pc/def/map.html" target="_blank">http://www.pythonchallenge.com/pc/def/map.html</a>, 继续我们的挑战游戏。</p>
<p><img src="http://www.pythonchallenge.com/pc/def/map.jpg" alt=""></p>
<p>图片提示将 K 对应到 M, O 对应到 Q, E 对应到 G. 这是古典密码学典型的移位密码，位移值为 2.</p>
<p><strong>算法</strong></p>
<ol>
<li>建立移位映射关系；</li>
<li>读入一个字符；</li>
<li>查找映射表；</li>
<li>根据映射关系输出一个字符；</li>
<li>返回步骤 2, 直至字串末尾。</li>
</ol>
<p>映射关系可以有多种方法可以建立，可以做一个类似 Python 内建的 dict 类型的 key-value 对应，也可基于 ASCII 码表做数值上的处理。</p>
<p>string 模块有 maketrans 函数，它接收两个等长的字符串，建立从第一个参数到第二个参数逐字符的对应关系，而后用 translate 函数将一个字符串根据这种对应关系转换，返回结果。</p>
<p><code>string.ascii_lowercase</code> 将返回顺序排放的 26 个小写英文字母。我们可以用切片来得到映射表。</p>
<pre><code><span class="keyword">import</span> string

<span class="function"><span class="keyword">def</span> <span class="title">Shift_Encrypt</span><span class="params">(puzzle,Shift)</span>:</span>
    ShiftMap = string.maketrans(string.ascii_lowercase,string.ascii_lowercase[Shift:] + string.ascii_lowercase[:Shift])
    <span class="keyword">return</span> puzzle.translate(ShiftMap)

<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:
    puzzle = <span class="string">'''g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr'q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.'''</span>
    <span class="keyword">print</span> Shift_Encrypt(puzzle,<span class="number">2</span>)
</code></pre><p>得到结果：i hope you didnt translate it by hand. thats what computers are for. doing it in by hand is inefficient and that’s why this text is so long. using string.maketrans() is recommended. now apply on the url.</p>
<p>内容提示我们，将位移密码作用在当前的 URL 上，即作用在 map 上。得到结果 ocr, 填入地址栏，进入下一关。</p>
<h3 id=" 第二关 ">第二关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/ocr.html" target="_blank">http://www.pythonchallenge.com/pc/def/ocr.html</a></p>
<p>页面提示说，要在网页源代码中寻找答案。打开源代码后发现有 HTML 注释说要寻找下面一堆乱码中罕见的字符。（我把需要测试的文件，保存在了<a href="/attachment/Python/PyChallenge/lv2.txt">这里</a>。）</p>
<p><strong>算法</strong></p>
<ol>
<li>建立一个字典，key 是字符，value 是字符出现的次数；</li>
<li>读入一个字符；</li>
<li>如果该字符已存在字典中，则对应的值加一；若不存在，则新建一个字典条目，设定值为一；</li>
<li>返回步骤 2, 直至字串末尾。</li>
<li>计算<code>字符平均出现次数 = 字符总数 / 字典长度</code>；</li>
<li>遍历字典，输出所有值小于<code>字符平均出现次数</code>的字符。</li>
</ol>
<p>算法如果正确，则所谓的「罕见字符」都将被输出。但是有一个问题，Python 中的字典是无序的，按照算法运行，则输出的字符顺序是不可预知的（因为输入的文本不可预知）。我们需要一个「按照输入顺序排序的字典」。所幸，Python 的 collections 模块为我们提供了 OrderedDict 类型。</p>
<pre><code>import collections
puzzle = <span class="string">''</span>.join([<span class="built_in">line</span>.rstrip() <span class="keyword">for</span> <span class="built_in">line</span> <span class="operator">in</span> <span class="built_in">open</span>(<span class="string">'lv2.txt'</span>)])
CharCnt = collections.OrderedDict()
<span class="keyword">for</span> Char <span class="operator">in</span> puzzle: CharCnt[Char] = CharCnt.<span class="built_in">get</span>(Char, <span class="number">0</span>) + <span class="number">1</span>
avgOC = <span class="built_in">len</span>(puzzle)<span class="comment"> // len(CharCnt)</span>
print <span class="string">''</span>.join([Char <span class="keyword">for</span> Char <span class="operator">in</span> CharCnt <span class="keyword">if</span> CharCnt[Char] &lt; avgOC])
</code></pre><p>得到结果 <code>equality</code>, 输入地址栏，进入下一关。</p>
<h3 id=" 第三关 ">第三关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/equality.html" target="_blank">http://www.pythonchallenge.com/pc/def/equality.html</a></p>
<p>网站提示说：One small letter, surrounded by <strong>EXACTLY</strong> three big bodyguards on each of its sides.</p>
<p>也就是说，需要找出所有 xXXXxXXXx 类型的结构，取中间那个小写的 x 出来。注意问题关键在于「恰好」二字，意味着不多不少都只能是三个字母，因此我们每次对比，都必须考虑前后一共九个字母。另外，实际上，前后的两个字符，不一定是字母，也可以是特殊符号。比如 <code>#ABCdEFG*</code> 也是满足要求的。（我把需要测试的文件，保存在了<a href="/attachment/Python/PyChallenge/lv3.txt">这里</a>。）</p>
<p><strong>算法</strong></p>
<ol>
<li>读入一个字符；</li>
<li>如果该字符不是小写字母，返回 1; 如果该字符是小写字母，去到 3；</li>
<li>检查它的前后各四个字符，是否满足条件，若满足，则记录该字母；</li>
<li>检查是否到达字符串尾，若是，则停止；若否，则返回步骤 1.</li>
</ol>
<p>最简单的方法，是使用 re 模块的正则表达式功能，其中的 findall 函数能够直接完成任务。</p>
<pre><code>import re
print ''.join(re.findall('[<span class="link_label">^A-Z</span>][<span class="link_reference">A-Z</span>]{3}([a-z])[A-Z]{3}[^A-Z]', ''.join([line.rstrip() for line in open('lv3.txt')])))
</code></pre><p>当然，也可以直接控制。</p>
<pre><code>puzzle = <span class="string">''</span>.join([<span class="built_in">line</span>.rstrip() <span class="keyword">for</span> <span class="built_in">line</span> <span class="operator">in</span> <span class="built_in">open</span>(<span class="string">'lv3.txt'</span>)])
Output = <span class="string">''</span>

<span class="keyword">for</span> CharIndex <span class="operator">in</span> range(<span class="built_in">len</span>(puzzle) - <span class="number">8</span>):
    <span class="keyword">if</span> <span class="operator">not</span> puzzle[CharIndex + <span class="number">0</span>].isupper() <span class="operator">and</span>\
           puzzle[CharIndex + <span class="number">1</span>].isupper() <span class="operator">and</span>\
           puzzle[CharIndex + <span class="number">2</span>].isupper() <span class="operator">and</span>\
           puzzle[CharIndex + <span class="number">3</span>].isupper() <span class="operator">and</span>\
           puzzle[CharIndex + <span class="number">4</span>].islower() <span class="operator">and</span>\
           puzzle[CharIndex + <span class="number">5</span>].isupper() <span class="operator">and</span>\
           puzzle[CharIndex + <span class="number">6</span>].isupper() <span class="operator">and</span>\
           puzzle[CharIndex + <span class="number">7</span>].isupper() <span class="operator">and</span>\
       <span class="operator">not</span> puzzle[CharIndex + <span class="number">8</span>].isupper():
       Output += puzzle[CharIndex + <span class="number">4</span>]

print Output
</code></pre><p>得到结果为 <code>linkedlist</code>, 输入地址栏则进入下一关。</p>
<h3 id=" 第四关 ">第四关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/linkedlist.html" target="_blank">http://www.pythonchallenge.com/pc/def/linkedlist.html</a></p>
<p>点进去之后，提示要把后缀改成 <code>php</code>, 改过之后打开一幅图片，点击图片提示说：</p>
<blockquote>
<p>and the next nothing is 44827</p>
</blockquote>
<p>把地址栏改成 <code>44827</code> 之后，有出现类似提示。于是我们知道这样类似的循环估计得要进行几百次了，手工一次次改肯定不现实，上 Python 吧。</p>
<p>手工点几次之后会发现，地址和页面内容是有规律的。页面内容中的 <code>nothing is</code> 后面接的数字，总是跟在地址栏的 <code>nothing=</code> 后面。利用这个规律，代码如下。</p>
<pre><code>import urllib, re
urlbase = <span class="string">"http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing="</span>
REsearchNUM = re.compile(<span class="string">"(\d+)"</span>).search
initNUM = <span class="string">'12345'</span>
<span class="keyword">while</span> True:
    webContents = urllib.urlopen(urlbase + initNUM).read()
    <span class="keyword">match</span> = REsearchNUM(webContents)
    <span class="keyword">if</span> <span class="keyword">match</span>:
        initNUM = <span class="keyword">match</span>.<span class="keyword">group</span>(<span class="number">1</span>)
        <span class="keyword">print</span> <span class="string">"We're now going to"</span>, initNUM
    <span class="keyword">else</span>:
        <span class="keyword">print</span> webContents
        <span class="keyword">break</span>
</code></pre><p>执行之后，会有一次停顿，需要你对某个数字除二然后重新开始，代码类似，这里就不想说了。</p>
<p>得到结果 <code>peak.html</code>, 进入下一关。</p>
<h3 id=" 第五关 ">第五关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/peak.html" target="_blank">http://www.pythonchallenge.com/pc/def/peak.html</a></p>
<p>进去之后发发现一幅图，图上有一座小山；图的下方有一行提示，让我们「读出它」。结合页面标题 <code>peak hell</code>, 知道它和 Python 的一个模块 <code>pickle</code> 音近。pickle 提供了两组函数，每组函数里面有各有两个互逆的操作。其中一组针对文件对象操作，另一组操作的则是 Python 的变量。针对文件对象的两个函数是 <code>dump</code> 和 <code>load</code>, 针对 Python 变量的则是 <code>dumps</code> 和 <code>loads</code>. 其中 <code>dump(s)</code> 将数据以某种方式存入文件（变量），而 <code>load(s)</code> 则将 <code>dump(s)</code> 存入的内容读出。</p>
<p>pickle 模块还有一个用 C 语言实现的版本，称为 cPickle。相对原本的 pickle 版本，cPickle 执行效率更高一些，但是无法被继承。</p>
<p>既然我们知道需要用 pickle 了，就要去找一个对象。按照这个小游戏的风格，右键查看源码，发现 <a href="http://www.pythonchallenge.com/pc/def/banner.p" target="_blank">http://www.pythonchallenge.com/pc/def/banner.p</a> 这个文件。我们用 urllib 把它读下来，然后用 pickle 处理。</p>
<pre><code><span class="keyword">import</span> urllib
<span class="keyword">import</span> cPickle
webContents = urllib.urlopen(<span class="string">'http://www.pythonchallenge.com/pc/def/banner.p'</span>).read()
pwc = cPickle.loads(webContents)
prints pwc
</code></pre><p>我们会发现，pwc 变量是一个复杂的结构。首先它是一个 list, 这个最外层的 list 里的数据是更小一层的 list; 小一层的 list 里的数据则是一个个 pairs. 如果你用过 *nix 系统，可能会对这种数据结构有些熟悉。仔细观察你会发现，每个小 list 里 pairs 里的数字之和正好都是 95, 而每个 pair 里都有一个长度为 1 的字符串。这意味着，整个大的 list 是一个文本块；每一个小的 list 是一行；每一个 pair 是重复若干次相应的字符。我们来输出它。</p>
<pre><code>print <span class="string">'\n'</span>.<span class="keyword">join</span>([<span class="string">''</span>.<span class="keyword">join</span>([p[<span class="number">0</span>] * p[<span class="number">1</span>] <span class="keyword">for</span> p <span class="keyword">in</span> row]) <span class="keyword">for</span> row <span class="keyword">in</span> pwc])
</code></pre><p>我们会发现如图所示的内容。</p>
<p><img src="/attachment/images/Python/channel.png" alt=""></p>
<p>其中显示的内容 <code>channel</code>, 正是我们的过关提示。</p>
<h3 id=" 第六关 ">第六关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/channel.html" target="_blank">http://www.pythonchallenge.com/pc/def/channel.html</a></p>
<p>打开网页后，出现的是一幅牛仔裤拉链的图。拉链的英文是 zip. 和 Python 相关的话，zip 可以是我们熟悉的 <code>.zip</code> 格式，也可以是 Python 内建的函数。考虑没有更多的提示信息，我们试试 <code>chennel.zip</code>.</p>
<pre><code><span class="keyword">import</span> urllib, StringIO, zipfile
unzipped = zipfile.ZipFile(StringIO.StringIO(urllib.urlopen(<span class="string">'http://www.pythonchallenge.com/pc/def/channel.zip'</span>).read()))
unzipped.namelist()
</code></pre><p>WOW! 好多…… len 看一下，居然有 910 个文件在里面，太可怕了。</p>
<p>等等！在刚才 namelist 的最后，有一个 <code>readme.txt</code>! 抓住救命稻草了有木有啊！</p>
<pre><code><span class="keyword">print</span> unzipped.<span class="keyword">read</span>(<span class="string">'readme.txt'</span>)
</code></pre><p>出现提示说，从 90052 开始搞起。难道说又要重复第四关那种情况？</p>
<pre><code>import urllib, re, StringIO, zipfile
unzipped = zipfile.ZipFile(StringIO.StringIO(urllib.urlopen(<span class="string">'http://www.pythonchallenge.com/pc/def/channel.zip'</span>).read()))
REsearchNUM = re.compile(<span class="string">"(\d+)"</span>).search
initNUM = <span class="string">'90052'</span>
<span class="keyword">while</span> True:
    webContents = unzipped.read(initNUM + <span class="string">'.txt'</span>)
    <span class="keyword">match</span> = REsearchNUM(webContents)
    <span class="keyword">if</span> <span class="keyword">match</span>:
        initNUM = <span class="keyword">match</span>.<span class="keyword">group</span>(<span class="number">1</span>)
        <span class="keyword">print</span> <span class="string">"We're now going to"</span>, initNUM
    <span class="keyword">else</span>:
        <span class="keyword">print</span> webContents
        <span class="keyword">break</span>
</code></pre><p>提示说：Collect the comments. 囧，原来遍历一遍还不够啊。再次修改代码，去拿 txt 的注释去。</p>
<pre><code>import urllib, re, StringIO, zipfile
unzipped = zipfile.ZipFile(StringIO.StringIO(urllib.urlopen(<span class="string">'http://www.pythonchallenge.com/pc/def/channel.zip'</span>).read()))
REsearchNUM = re.compile(<span class="string">"(\d+)"</span>).search
initNUM = <span class="string">'90052'</span>
StrOutput = <span class="string">''</span>
<span class="keyword">while</span> True:
    webContents = unzipped.read(initNUM + <span class="string">'.txt'</span>)
    <span class="keyword">match</span> = REsearchNUM(webContents)
    <span class="keyword">if</span> <span class="keyword">match</span>:
        initNUM = <span class="keyword">match</span>.<span class="keyword">group</span>(<span class="number">1</span>)
        StrOutput += unzipped.getinfo(initNUM + <span class="string">'.txt'</span>).comment
    <span class="keyword">else</span>:
        <span class="keyword">print</span> webContents
        <span class="keyword">break</span>

<span class="keyword">print</span> StrOutput
</code></pre><p>我们得到：</p>
<p><img src="/attachment/images/Python/HOCKEY.png" alt=""></p>
<p><code>HOCKEY</code> 就是我们的过关代码吗？太天真了！</p>
<p>进入 <a href="http://www.pythonchallenge.com/pc/def/hockey.html" target="_blank">http://www.pythonchallenge.com/pc/def/hockey.html</a> 之后得到提示「it’s in the air. look at the letters.」 提示说，空气里有这东西，并且让我们看看刚才那图案。我们发现 HOCKEY 分别由 oxygen 组成。看来 <code>oxygen</code> 才是下一级的入口！</p>
<h3 id=" 第七关 ">第七关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/oxygen.html" target="_blank">http://www.pythonchallenge.com/pc/def/oxygen.html</a></p>
<p>打开来只有一幅图片：</p>
<p><img src="http://www.pythonchallenge.com/pc/def/oxygen.png" alt=""></p>
<p>额，这是啥？信息隐藏在中间那个灰度条中嘛？好吧我们来处理图片好了。Python Imaging Library 提供了 <code>Image</code> 模块，可以用来处理图片。</p>
<p>我们需要先<a href="http://www.pythonware.com/products/pil/" target="_blank">下载</a>安装。Image 模块提供了 <code>getpixel</code> 来获得某个像素点上的 RGBA 值（RGB 是颜色，A 是不透明度）。对于灰度图片来说，RGB 三者的值应该相等，我们可以据此提出所需的灰度部分，然后进行判断。</p>
<pre><code><span class="keyword">import</span> urllib, Image, StringIO

<span class="function"><span class="keyword">def</span> <span class="title">if_grey_scale</span><span class="params">(RGBA)</span>:</span>
    <span class="keyword">if</span> RGBA[<span class="number">0</span>] == RGBA[<span class="number">1</span>] == RGBA[<span class="number">2</span>]:
        <span class="keyword">return</span> <span class="keyword">True</span>
    <span class="keyword">else</span>:
        <span class="keyword">return</span> <span class="keyword">False</span>

<span class="function"><span class="keyword">def</span> <span class="title">if_grey_scale_line</span><span class="params">(linePx)</span>:</span>
    <span class="keyword">for</span> px <span class="keyword">in</span> linePx[:<span class="number">10</span>]:
        <span class="keyword">if</span> <span class="keyword">not</span> if_grey_scale(px):
            <span class="keyword">return</span> <span class="keyword">False</span>
        <span class="keyword">else</span>:
            <span class="keyword">pass</span>
    <span class="keyword">return</span> <span class="keyword">True</span>

<span class="function"><span class="keyword">def</span> <span class="title">get_line_px</span><span class="params">(image, width, heightNum)</span>:</span>
    <span class="keyword">return</span> [image.getpixel((i, heightNum)) <span class="keyword">for</span> i <span class="keyword">in</span> range(width)]

imageWeb = Image.open(StringIO.StringIO(urllib.urlopen(<span class="string">'http://www.pythonchallenge.com/pc/def/oxygen.png'</span>).read()))

width, height = imageWeb.size

<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:
    <span class="keyword">for</span> i <span class="keyword">in</span> range(height):
        <span class="keyword">if</span> if_grey_scale_line(get_line_px(imageWeb, width, i)):
            <span class="keyword">print</span> i
            <span class="keyword">print</span> <span class="string">''</span>.join([chr(imageWeb.getpixel((j, i))[<span class="number">0</span>]) <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,width)])
        <span class="keyword">else</span>:
            <span class="keyword">pass</span>
</code></pre><p>我们发现最终的输出中，大部分字母都重复了 7 次。这说明图片中一个灰度小块的宽度是 7 个像素。我们可以取其中的一行（比如 47 行），然后将步长设置为 7:</p>
<pre><code><span class="keyword">print</span> <span class="string">''</span>.<span class="keyword">join</span>([<span class="keyword">chr</span>(imageWeb.getpixel((j, <span class="number">47</span>))[<span class="number">0</span>]) <span class="keyword">for</span> j in range(<span class="number">0</span>,width,<span class="number">8</span>)])
</code></pre><p>这样就能得到最终的结果了：”smart guy, you made it. the next level is [105, 110, 116, 101, 103, 114, 105, 116, 121]”. 再次转换这个结果：</p>
<pre><code><span class="keyword">print</span> <span class="string">''</span>.<span class="keyword">join</span>([<span class="keyword">chr</span>(j) <span class="keyword">for</span> j in [<span class="number">105</span>, <span class="number">110</span>, <span class="number">116</span>, <span class="number">101</span>, <span class="number">103</span>, <span class="number">114</span>, <span class="number">105</span>, <span class="number">116</span>, <span class="number">121</span>]])
</code></pre><p>得到：integrity. 这就是我们的通关密码！</p>
<h3 id=" 第八关 ">第八关</h3>
<p><a href="http://www.pythonchallenge.com/pc/def/integrity.html" target="_blank">http://www.pythonchallenge.com/pc/def/integrity.html</a></p>
<p>点开之后发现，有一幅图片，上面画着一只蜜蜂；图片下面是提示「隐藏的链接在哪里」。鼠标点击蜜蜂会进入到下一关的页面——不过没这么简单，要输入密码的。</p>
<p>输入密码提示单词 <code>inflate</code>, 意为膨胀。</p>
<p>至此，线索已经断了，于是回到第八关页面，右键查看网页源代码，发现注释部分有</p>
<pre><code>un: 'BZh91AY<span class="special">&amp;</span>SYA<span class="command">\xaf</span><span class="command">\x</span>82<span class="command">\r</span><span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>01<span class="command">\x</span>01<span class="command">\x</span>80<span class="command">\x</span>02<span class="command">\xc</span>0<span class="command">\x</span>02<span class="command">\x</span>00 <span class="command">\x</span>00!<span class="command">\x</span>9ah3M<span class="command">\x</span>07&lt;<span class="special">]</span><span class="command">\xc</span>9<span class="command">\x</span>14<span class="command">\xe</span>1BA<span class="command">\x</span>06<span class="command">\xbe</span><span class="command">\x</span>084'
pw: 'BZh91AY<span class="special">&amp;</span>SY<span class="command">\x</span>94<span class="formula">$|<span class="command">\x</span>0e<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>81<span class="command">\x</span>00<span class="command">\x</span>03$</span> <span class="command">\x</span>00!<span class="command">\x</span>9ah3M<span class="command">\x</span>13&lt;<span class="special">]</span><span class="command">\xc</span>9<span class="command">\x</span>14<span class="command">\xe</span>1BBP<span class="command">\x</span>91<span class="command">\xf</span>08'
</code></pre><p><code>BZh9</code> 是 bz2 压缩的著名起始字符。结合 inflate, 不难联想到，我们的任务是通过 un 和 pw 后面的内容，用 bz2 解压得到 username 和 password.</p>
<pre><code>un = 'BZh91AY<span class="special">&amp;</span>SYA<span class="command">\xaf</span><span class="command">\x</span>82<span class="command">\r</span><span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>01<span class="command">\x</span>01<span class="command">\x</span>80<span class="command">\x</span>02<span class="command">\xc</span>0<span class="command">\x</span>02<span class="command">\x</span>00 <span class="command">\x</span>00!<span class="command">\x</span>9ah3M<span class="command">\x</span>07&lt;<span class="special">]</span><span class="command">\xc</span>9<span class="command">\x</span>14<span class="command">\xe</span>1BA<span class="command">\x</span>06<span class="command">\xbe</span><span class="command">\x</span>084'
pw = 'BZh91AY<span class="special">&amp;</span>SY<span class="command">\x</span>94<span class="formula">$|<span class="command">\x</span>0e<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>81<span class="command">\x</span>00<span class="command">\x</span>03$</span> <span class="command">\x</span>00!<span class="command">\x</span>9ah3M<span class="command">\x</span>13&lt;<span class="special">]</span><span class="command">\xc</span>9<span class="command">\x</span>14<span class="command">\xe</span>1BBP<span class="command">\x</span>91<span class="command">\xf</span>08'

import  bz2
print "user name:", bz2.decompress(un)
print "password:", bz2.decompress(pw)
</code></pre><p>得到结果 huge 和 file, 进入下一关，结束战斗。</p>
<h3 id=" 第九关 ">第九关</h3>
<p><a href="http://www.pythonchallenge.com/pc/return/good.html" target="_blank">http://www.pythonchallenge.com/pc/return/good.html</a></p>
<p>打开网页后见到图片：</p>
<p><img src="http://huge:file@www.pythonchallenge.com/pc/return/good.jpg" alt=""></p>
<p>网页标题提示我们，连点成线。可是图片中的黑色方块连起来啥也不是。打开网页源码发现里面有提示 first + second = ?, 以及两个很长的 list. 莫非是要我们将这两个 list 当作是坐标来连线？用 PIL 的 ImageDraw 模块可以搞定。</p>
<pre><code>import Image, ImageDraw

first = [ <span class="keyword">...</span> ]
second = [ <span class="keyword">...</span> ]

newImage = Image.new(<span class="string">'RGB'</span>, (<span class="number">640</span>,<span class="number">480</span>))
draw = ImageDraw.Draw(newImage)
draw.line(first)
draw.line(second)
del draw
newImage.save(<span class="string">'./good.png'</span>)
</code></pre><p>我们得到的结果是：</p>
<p><img src="/attachment/images/Python/good.png" alt=""></p>
<p>这是一头公牛——想想 NBA 里的公牛队——答案是 bull！</p>
<h3 id=" 第十关 ">第十关</h3>
<p><a href="http://www.pythonchallenge.com/pc/return/bull.html" target="_blank">http://www.pythonchallenge.com/pc/return/bull.html</a></p>
<p>图片提示是一头牛，要求计算  <code>len(a[30])</code>. 标题提示说「你看啥呢」，看样子又是故技重施。我们点击图片上的牛，进入 <a href="http://www.pythonchallenge.com/pc/return/sequence.txt" target="_blank">http://www.pythonchallenge.com/pc/return/sequence.txt</a>, 发现了一个不完整的数字序列：<code>a = [1, 11, 21, 1211, 111221,</code>. 所以我们的任务是找这个序列的规律，然后找到它的第 30 项然后返回长度。</p>
<p>乍一看，这是什么情况，小学奥数嘛？把序列放 Google 里搜索，发现这是一个叫做「外观序列」的东西，参见<a href="http://zh.wikipedia.org/zh/%E5%A4%96%E8%A7%80%E6%95%B8%E5%88%97" target="_blank">维基百科</a>。意思是，序列的后一项是对前一项的描述。比如 <code>11</code> 表示「一个 1」，也就是前一项的 1；又比如 <code>111221</code> 表示「一个 1, 一个 2, 两个 1」，也就是前一项的 1211.</p>
<pre><code><span class="keyword">import</span> re
initNum = <span class="string">'1'</span>
<span class="keyword">for</span> each <span class="keyword">in</span> range(<span class="number">30</span>):
    initNum = <span class="string">""</span>.join([str(len(i + j)) + i <span class="keyword">for</span> i, j <span class="keyword">in</span> re.findall(<span class="string">r"(\d)(\1*)"</span>, initNum)])
<span class="keyword">print</span> len(initNum)
</code></pre><p>这里写了一个用正则表达式处理的代码。其中的 <code>(\d)(\1*)</code> 表示匹配任意数字的连续，也就是匹配 111, 22 这样的序列。这样我们就能得到答案了。返回 <code>5808</code>.</p>
<h3 id=" 第十一关 ">第十一关</h3>
<p><a href="http://www.pythonchallenge.com/pc/return/5808.html" target="_blank">http://www.pythonchallenge.com/pc/return/5808.html</a></p>
<p>打开页面后，是一幅图片：</p>
<p><img src="http://huge:file@www.pythonchallenge.com/pc/return/cave.jpg" alt=""></p>
<p>唯一的提示是页面标题的”odd even”（奇偶）。</p>
<p>仔细查看图片，会发现图片的「颗粒化」现象很严重——几乎每一个像素点的旁边，都有黑色的颗粒。再结合「奇偶」这个提示，我们有理由猜想，图片是两张图拼接起来的，像素坐标的奇偶分别对应着一张图。</p>
<p>现在我们可以对图片的横纵坐标，分别取出奇数序列和偶数序列，然后生成四幅图片：</p>
<ul>
<li>x-odd, y-odd</li>
<li>x-odd, y-even</li>
<li>x-even, y-even</li>
<li>x-even, y-odd</li>
</ul>
<p>代码：</p>
<pre><code><span class="reserved">import</span> Image
<span class="reserved">import</span> urllib
<span class="reserved">import</span> StringIO
im = Image.open(StringIO.StringIO(urllib.urlopen(<span class="string">'http://huge:file@www.pythonchallenge.com/pc/return/cave.jpg'</span>).read()))
w, h = im.size

imgs = [Image.<span class="keyword">new</span>(im.mode, (w / <span class="number">2</span>, h / <span class="number">2</span>)) <span class="keyword">for</span> dummy <span class="keyword">in</span> xrange(<span class="number">4</span>)]
imgs_load = [i.load() <span class="keyword">for</span> i <span class="keyword">in</span> imgs]
org = im.load()


<span class="keyword">for</span> i <span class="keyword">in</span> xrange(w):
    <span class="keyword">for</span> j <span class="keyword">in</span> xrange(h):
        org_pos = (i, j)
        new_pos = (i <span class="regexp">//</span> <span class="number">2</span>, j <span class="regexp">//</span> <span class="number">2</span>)
        imgs_load[i % <span class="number">2</span> + j % <span class="number">2</span> * <span class="number">2</span> ][new_pos] = org[org_pos]


[imgs[i].save(<span class="string">'%d.png'</span> % i) <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">4</span>)]
</code></pre><p>这样我们生成了四幅图片：</p>
<p><img src="/attachment/images/Python/oddeven/0.png" alt=""><img src="/attachment/images/Python/oddeven/1.png" alt=""><img src="/attachment/images/Python/oddeven/2.png" alt=""><img src="/attachment/images/Python/oddeven/3.png" alt=""></p>
<p>可以看到图中的 evil 字样。这就是下一关的钥匙。</p>
<h3 id=" 第十二关 ">第十二关</h3>
<p><a href="http://huge:file@www.pythonchallenge.com/pc/return/evil.html" target="_blank">http://www.pythonchallenge.com/pc/return/evil.html</a></p>
<p>打开网页后发现只有一张图片，看图片那样子似乎又要处理？网页标题提示 dealing evil, 即处理 evil. 打开网页源代码，没啥特别的信息。</p>
<p>等等！</p>
<p>图片的名字是 <a href="http://huge:file@www.pythonchallenge.com/pc/return/evil1.jpg" target="_blank">http://www.pythonchallenge.com/pc/return/evil1.jpg</a>, 那么有 evil1 的话，会不会还有 evil2, evil3, evil4 … 呢？</p>
<p>在地址栏中把地址改成 evil2.jpg, 得到一张图片，上面歪歪曲曲地写着</p>
<blockquote>
<p>not .jpg .gfx</p>
</blockquote>
<p>于是把 evil2.jpg 改成 evil2.gfx, 得到一个十六进制文件。继续改 evil3.jpg, 得到图片说</p>
<blockquote>
<p>no more evils…</p>
</blockquote>
<p>嗯，提示说没有恶魔（复数）了，那么就是还有一个？继续改 evil4.jpg, 页面提示</p>
<blockquote>
<p>Bert is evil! go back!</p>
</blockquote>
<p>答案和 bert 有关嘛？进入地址 <a href="http://huge:file@www.pythonchallenge.com/pc/return/bert.html" target="_blank">http://www.pythonchallenge.com/pc/return/bert.html</a>, 页面提示说</p>
<blockquote>
<p>Yes! Bert is evil!</p>
</blockquote>
<p>看来答案果然和 bert 有关。Google 搜索发现 BERT 是 Bit Error Ratio Test 的缩写（比特误码率测试）。我们先前得到的 gfx 文件是一个十六进制的文件（换言之，可以很简单地转换成二进制文件），这就和所谓的比特误码率很相关了。所以难道信息隐藏在 BERT 里面吗？Google 许久未果，没发现和题目有什么有什么关系。看样子又要卡几天了。</p>
]]></content>
    <summary type="html"><![CDATA[<p>Python 是一个很实用的脚本语言，学习 Python 无疑需要辅以大量的练习，才能把自己所学运用到实践中去。<a href="http://www.pythonchallenge.com/" target="_blank">PythonChallenge</a> 是国外的一款闯关游戏，在挑战关卡的同时学习如何运用 Python 解决问题。</p>
]]></summary>
    
      <category term="Python" scheme="http://liam0205.me/tags/Python/"/>
    
      <category term="Game" scheme="http://liam0205.me/tags/Game/"/>
    
      <category term="Python" scheme="http://liam0205.me/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】选择加载的图片类型]]></title>
    <link href="http://liam0205.me/2013/12/07/LaTeX-Choose-picture-format/"/>
    <id>http://liam0205.me/2013/12/07/LaTeX-Choose-picture-format/</id>
    <published>2013-12-06T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>我们在排版很长的文章或者书籍的时候，编译一次通常需要花费很长时间，并且生成文件的体积也会比较大。而通常我们会希望文档中的图片足够高清，但在写文章的时候又希望能节省时间（同时声称小体积的文件供预览）。因此有一个快速选择图片类型的方法就变得很有必要了。</p>
<a id="more"></a>

<p>在 LaTeX 中，相同文件名加载图片的顺序是：</p>
<pre><code><span class="preprocessor">.png</span> <span class="preprocessor">.pdf</span> <span class="preprocessor">.jpg</span> <span class="preprocessor">.mps</span> <span class="preprocessor">.jpeg</span> <span class="preprocessor">.jbig</span>2 <span class="preprocessor">.jb</span>2 <span class="preprocessor">.PNG</span> <span class="preprocessor">.PDF</span> <span class="preprocessor">.JPG</span> <span class="preprocessor">.JPEG</span> <span class="preprocessor">.JBIG</span>2 <span class="preprocessor">.JB</span>2
</code></pre><p>而这一顺序存储在宏 <code>\Gin@extensions</code> 之中。因此，若是在相同目录下同时含有 <code>dummy.png</code> 和 <code>dummy.pdf</code>, 编译引擎将会选择前者（假设支持）。你可以用 <code>\DeclareGraphicsExtensions</code> 命令来声明并改变这些扩展名的顺序，比如：</p>
<pre><code>\DeclareGraphicsExtensions{
    <span class="preprocessor">.png</span>,<span class="preprocessor">.PNG</span>,%
    <span class="preprocessor">.pdf</span>,<span class="preprocessor">.PDF</span>,%
    <span class="preprocessor">.jpg</span>,<span class="preprocessor">.mps</span>,<span class="preprocessor">.jpeg</span>,<span class="preprocessor">.jbig</span>2,<span class="preprocessor">.jb</span>2,<span class="preprocessor">.JPG</span>,<span class="preprocessor">.JPEG</span>,<span class="preprocessor">.JBIG</span>2,<span class="preprocessor">.JB</span>2}
</code></pre><p>这样就能确保 <code>png</code> 文件在 <code>pdf</code> 文件之前被载入了——在最终输出之时只需要交换两行的顺序即可。</p>
<p>另外 <code>grfext</code> 宏包提供了 <code>\PrependGraphicsExtensions</code> 命令实现同样的效果：</p>
<pre><code>\usepackage<span class="list">{grfext}</span>
\PrependGraphicsExtensions*<span class="list">{.png,.PNG}</span>
</code></pre><hr>
<p>选自 <a href="http://profs.scienze.univr.it/~gregorio/" target="_blank">egreg</a> 在 <a href="http://tex.stackexchange.com/a/45502/38350" target="_blank">TeX.SX</a> 上的回答。</p>
]]></content>
    <summary type="html"><![CDATA[<p>我们在排版很长的文章或者书籍的时候，编译一次通常需要花费很长时间，并且生成文件的体积也会比较大。而通常我们会希望文档中的图片足够高清，但在写文章的时候又希望能节省时间（同时声称小体积的文件供预览）。因此有一个快速选择图片类型的方法就变得很有必要了。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="graphicx" scheme="http://liam0205.me/tags/graphicx/"/>
    
      <category term="images" scheme="http://liam0205.me/tags/images/"/>
    
      <category term="format" scheme="http://liam0205.me/tags/format/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】listings 中高亮定界符内的文本而不高亮定界符本身]]></title>
    <link href="http://liam0205.me/2013/12/05/LaTeX-Emphasize-color-contents-between-two-delimiters-in-listings-but-not-the-delimiters-themselves/"/>
    <id>http://liam0205.me/2013/12/05/LaTeX-Emphasize-color-contents-between-two-delimiters-in-listings-but-not-the-delimiters-themselves/</id>
    <published>2013-12-04T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>背景图里的代码高亮十分漂亮，用 <code>listings</code> 宏包实现的难点在于如何高亮某种定界符内的内容，而定界符本身保留 <code>basicstyle</code> 设定的样式。</p>
<a id="more"></a>


<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>listings<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>xcolor<span class="special">}</span>
<span class="command">\lstset</span><span class="special">{</span>
    delim = <span class="special">[</span>s<span class="special">]</span><span class="special">[</span><span class="command">\ttfamily</span><span class="command">\color</span><span class="special">{</span>orange<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="formula">$<span class="special">}</span><span class="special">{</span>$</span><span class="special">}</span>
<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>amsmath<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="formula">$E = mc^2$</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>效果：</p>
<p><img src="http://i.stack.imgur.com/VFq3G.png" alt=""></p>
<p><code>$</code> 之间的公式随着 <code>$</code> 本身都变成了橘色。</p>
<p>解决问题的方法，可以参照 <a href="http://dpcarlisle.blogspot.com/" target="_blank">David Carlisle</a> 在 TeX.SX 上对<a href="http://tex.stackexchange.com/a/145661/38350" target="_blank">这个问题的回答</a>。</p>
<p>我们可以定义这样一个 listings 样式：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="command">\def</span><span class="command">\beginlstdelim</span><span class="special">#</span>1<span class="special">#</span>2<span class="special">#</span>3<span class="special">{</span>
    <span class="command">\def</span><span class="command">\endlstdelim</span><span class="special">{</span><span class="special">#</span>2<span class="command">\egroup</span><span class="special">}</span><span class="comment">%</span>
    <span class="command">\ttfamily</span><span class="special">#</span>1<span class="command">\bgroup</span><span class="command">\color</span><span class="special">{</span><span class="special">#</span>3<span class="special">}</span><span class="command">\aftergroup</span><span class="command">\endlstdelim</span><span class="comment">%</span>
<span class="special">}</span>
</pre></td></tr></table></figure>


<p>它有三个参数，第一个参数是定界符的左边，第二个是定界符的右边，第三个是高亮的颜色。我们可以这样使用：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">[</span>usenames,dvipsnames<span class="special">]</span><span class="special">{</span>xcolor<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>listings<span class="special">}</span>


<span class="command">\def</span><span class="command">\beginlstdelim</span><span class="special">#</span>1<span class="special">#</span>2<span class="special">#</span>3<span class="special">{</span>
    <span class="command">\def</span><span class="command">\endlstdelim</span><span class="special">{</span><span class="special">#</span>2<span class="command">\egroup</span><span class="special">}</span><span class="comment">%</span>
    <span class="command">\ttfamily</span><span class="special">#</span>1<span class="command">\bgroup</span><span class="command">\color</span><span class="special">{</span><span class="special">#</span>3<span class="special">}</span><span class="command">\aftergroup</span><span class="command">\endlstdelim</span><span class="comment">%</span>
<span class="special">}</span>
<span class="command">\lstset</span>
<span class="special">{</span>
    moredelim = **<span class="special">[</span>is<span class="special">]</span><span class="special">[</span><span class="command">\beginlstdelim</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span><span class="special">{</span>orange<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span>,
    moredelim = **<span class="special">[</span>is<span class="special">]</span><span class="special">[</span><span class="command">\beginlstdelim</span><span class="special">{</span><span class="command">\{</span><span class="special">}</span><span class="special">{</span><span class="command">\}</span><span class="special">}</span><span class="special">{</span>ForestGreen<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="command">\{</span><span class="special">}</span><span class="special">{</span><span class="command">\}</span><span class="special">}</span>,
    moredelim = **<span class="special">[</span>is<span class="special">]</span><span class="special">[</span><span class="command">\beginlstdelim</span><span class="special">{</span><span class="special">[</span><span class="special">}</span><span class="special">{</span><span class="special">]</span><span class="special">}</span><span class="special">{</span>red<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="special">[</span><span class="special">}</span><span class="special">{</span><span class="special">]</span><span class="special">}</span>,
<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>amsmath<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="formula">$E = mc^2$</span>
<span class="special">{</span>E = mc^2<span class="special">}</span>
<span class="special">[</span>E = mc^2<span class="special">]</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>效果是这样的：</p>
<figure><br>    <a href="http://i.stack.imgur.com/7nSib.png" target="_blank"><img src="http://i.stack.imgur.com/7nSib.png"></a><br>    <figcaption><a href="http://i.stack.imgur.com/7nSib.png" title=" 输出效果 " target="_blank">输出效果</a></figcaption><br></figure>

<hr>
<p>The code in the background figure is very pretty. In terms of using <code>listings</code> to reproduce this beautiful style, nodus turns out to be how to color contents between two delimiters but not the delimiters themselves (remain <code>basicstyle</code>).</p>
<p>If we have the code following:</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>listings<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>xcolor<span class="special">}</span>
<span class="command">\lstset</span><span class="special">{</span>
    delim = <span class="special">[</span>s<span class="special">]</span><span class="special">[</span><span class="command">\ttfamily</span><span class="command">\color</span><span class="special">{</span>orange<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="formula">$<span class="special">}</span><span class="special">{</span>$</span><span class="special">}</span>
<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>amsmath<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="formula">$E = mc^2$</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>we will get:</p>
<p><img src="http://i.stack.imgur.com/VFq3G.png" alt=""></p>
<p>The equation between <code>$</code>s was colored by orange, so did <code>$</code>s themselves.</p>
<p>Inspired by <a href="http://dpcarlisle.blogspot.com/" target="_blank">David Carlisle</a>‘s <a href="http://tex.stackexchange.com/a/145661/38350" target="_blank">answer to this question</a>, TeX.SX, Jubobs defined a new listings style:</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="command">\def</span><span class="command">\beginlstdelim</span><span class="special">#</span>1<span class="special">#</span>2<span class="special">#</span>3<span class="special">{</span>
    <span class="command">\def</span><span class="command">\endlstdelim</span><span class="special">{</span><span class="special">#</span>2<span class="command">\egroup</span><span class="special">}</span><span class="comment">%</span>
    <span class="command">\ttfamily</span><span class="special">#</span>1<span class="command">\bgroup</span><span class="command">\color</span><span class="special">{</span><span class="special">#</span>3<span class="special">}</span><span class="command">\aftergroup</span><span class="command">\endlstdelim</span><span class="comment">%</span>
<span class="special">}</span>
</pre></td></tr></table></figure>


<p>It has three arguments: the first one should be the left delimiter, the second one should be the right one, and the third one specifying the color. Let’s take a example:</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">[</span>usenames,dvipsnames<span class="special">]</span><span class="special">{</span>xcolor<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>listings<span class="special">}</span>


<span class="command">\def</span><span class="command">\beginlstdelim</span><span class="special">#</span>1<span class="special">#</span>2<span class="special">#</span>3<span class="special">{</span>
    <span class="command">\def</span><span class="command">\endlstdelim</span><span class="special">{</span><span class="special">#</span>2<span class="command">\egroup</span><span class="special">}</span><span class="comment">%</span>
    <span class="command">\ttfamily</span><span class="special">#</span>1<span class="command">\bgroup</span><span class="command">\color</span><span class="special">{</span><span class="special">#</span>3<span class="special">}</span><span class="command">\aftergroup</span><span class="command">\endlstdelim</span><span class="comment">%</span>
<span class="special">}</span>
<span class="command">\lstset</span>
<span class="special">{</span>
    moredelim = **<span class="special">[</span>is<span class="special">]</span><span class="special">[</span><span class="command">\beginlstdelim</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span><span class="special">{</span>orange<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span><span class="special">{</span><span class="command">\$</span><span class="special">}</span>,
    moredelim = **<span class="special">[</span>is<span class="special">]</span><span class="special">[</span><span class="command">\beginlstdelim</span><span class="special">{</span><span class="command">\{</span><span class="special">}</span><span class="special">{</span><span class="command">\}</span><span class="special">}</span><span class="special">{</span>ForestGreen<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="command">\{</span><span class="special">}</span><span class="special">{</span><span class="command">\}</span><span class="special">}</span>,
    moredelim = **<span class="special">[</span>is<span class="special">]</span><span class="special">[</span><span class="command">\beginlstdelim</span><span class="special">{</span><span class="special">[</span><span class="special">}</span><span class="special">{</span><span class="special">]</span><span class="special">}</span><span class="special">{</span>red<span class="special">}</span><span class="special">]</span><span class="special">{</span><span class="special">[</span><span class="special">}</span><span class="special">{</span><span class="special">]</span><span class="special">}</span>,
<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>amsmath<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="formula">$E = mc^2$</span>
<span class="special">{</span>E = mc^2<span class="special">}</span>
<span class="special">[</span>E = mc^2<span class="special">]</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>lstlisting<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>It’s output:</p>
<figure><br>    <a href="http://i.stack.imgur.com/7nSib.png" target="_blank"><img src="http://i.stack.imgur.com/7nSib.png"></a><br>    <figcaption><a href="http://i.stack.imgur.com/7nSib.png" title="The Output." target="_blank">The Output.</a></figcaption><br></figure>
]]></content>
    <summary type="html"><![CDATA[<p>背景图里的代码高亮十分漂亮，用 <code>listings</code> 宏包实现的难点在于如何高亮某种定界符内的内容，而定界符本身保留 <code>basicstyle</code> 设定的样式。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="listings" scheme="http://liam0205.me/tags/listings/"/>
    
      <category term="highlight" scheme="http://liam0205.me/tags/highlight/"/>
    
      <category term="delimiter" scheme="http://liam0205.me/tags/delimiter/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】如何复写定理]]></title>
    <link href="http://liam0205.me/2013/12/04/LaTeX-Recalling-a-theorem/"/>
    <id>http://liam0205.me/2013/12/04/LaTeX-Recalling-a-theorem/</id>
    <published>2013-12-03T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>在书写定理时，我们可能会将定理的结论写在前面，而后展开对它的讨论。定理复杂的证明过程，通常会放在后文的附录中。这时候，我们就需要复写这个定理。</p>
<p>下面这个来自 <a href="http://tex.stackexchange.com/a/51288/38350" target="_blank">TeX.SX</a> 的方法由 <a href="http://tex.stackexchange.com/users/510/lockstep" target="_blank">lockstep</a> 提供。</p>
<a id="more"></a>


<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>thmtools<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>thm-restate<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>hyperref<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>cleveref<span class="special">}</span>

<span class="command">\declaretheorem</span><span class="special">[</span>name=Theorem,numberwithin=section<span class="special">]</span><span class="special">{</span>thm<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>

<span class="command">\section</span><span class="special">{</span>First<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>restatable<span class="special">}</span><span class="special">[</span>Goldbach's conjecture<span class="special">]</span><span class="special">{</span>thm<span class="special">}</span><span class="special">{</span>goldbach<span class="special">}</span>
<span class="command">\label</span><span class="special">{</span>thm:goldbach<span class="special">}</span>
Every even integer greater than 2 can be expressed as the sum of two primes.
<span class="command">\end</span><span class="special">{</span>restatable<span class="special">}</span>

<span class="command">\section</span><span class="special">{</span>Second<span class="special">}</span>

We recall <span class="command">\cref</span><span class="special">{</span>thm:goldbach<span class="special">}</span>:

<span class="command">\goldbach*</span>

<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p><code>thmtools</code> 包里的 <code>thm-restate</code> 子包提供了 <code>restatable</code> 环境。下面的例子里，借用了 <code>hyperref</code> 宏包（超链接）和 <code>cleveref</code> 宏包（提供了 <code>\cref</code> 宏，可以加载正确的定理样式）。具体可以查看 <code>thmtools</code> 宏包文档的 1.4 节。</p>
<p>效果：</p>
<figure><br>    <a href="/images//LaTeX/recall-theorem.png"><img src="/images//LaTeX/recall-theorem.png"></a><br>    <figcaption><a href="/images//LaTeX/recall-theorem.png" title=" 复写定理的效果展示 ">复写定理的效果展示</a></figcaption><br></figure>

<hr>
<p>We sometimes hope that we could show and discuss a theorem, without proof it. However, in appendix, we mey need to recall that theorem and then write down the details of proof.</p>
<p>The following context comes from <a href="http://tex.stackexchange.com/a/51288/38350" target="_blank">TeX.SX</a> that is provided by <a href="http://tex.stackexchange.com/users/510/lockstep" target="_blank">lockstep</a>.</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>thmtools<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>thm-restate<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>hyperref<span class="special">}</span>

<span class="command">\usepackage</span><span class="special">{</span>cleveref<span class="special">}</span>

<span class="command">\declaretheorem</span><span class="special">[</span>name=Theorem,numberwithin=section<span class="special">]</span><span class="special">{</span>thm<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>

<span class="command">\section</span><span class="special">{</span>First<span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>restatable<span class="special">}</span><span class="special">[</span>Goldbach's conjecture<span class="special">]</span><span class="special">{</span>thm<span class="special">}</span><span class="special">{</span>goldbach<span class="special">}</span>
<span class="command">\label</span><span class="special">{</span>thm:goldbach<span class="special">}</span>
Every even integer greater than 2 can be expressed as the sum of two primes.
<span class="command">\end</span><span class="special">{</span>restatable<span class="special">}</span>

<span class="command">\section</span><span class="special">{</span>Second<span class="special">}</span>

We recall <span class="command">\cref</span><span class="special">{</span>thm:goldbach<span class="special">}</span>:

<span class="command">\goldbach*</span>

<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>The <code>thm-restate</code> package which is part of <code>thmtools</code> offers a <code>restatable</code> environment. In the following example, I also use <code>hyperref</code> and <code>cleveref</code> (its <code>\cref</code> macro automatically adds the correct theorem type). See section 1.4 of the thmtools manual for details.</p>
<p>效果：</p>
<figure><br>    <a href="/images//LaTeX/recall-theorem.png"><img src="/images//LaTeX/recall-theorem.png"></a><br>    <figcaption><a href="/images//LaTeX/recall-theorem.png" title="Recalling a theorem.">Recalling a theorem.</a></figcaption><br></figure>
]]></content>
    <summary type="html"><![CDATA[<p>在书写定理时，我们可能会将定理的结论写在前面，而后展开对它的讨论。定理复杂的证明过程，通常会放在后文的附录中。这时候，我们就需要复写这个定理。</p>
<p>下面这个来自 <a href="http://tex.stackexchange.com/a/51288/38350" target="_blank">TeX.SX</a> 的方法由 <a href="http://tex.stackexchange.com/users/510/lockstep" target="_blank">lockstep</a> 提供。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="theorem" scheme="http://liam0205.me/tags/theorem/"/>
    
      <category term="recall" scheme="http://liam0205.me/tags/recall/"/>
    
      <category term="thm-restate" scheme="http://liam0205.me/tags/thm-restate/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】在文本的同一行开始一个列表环境]]></title>
    <link href="http://liam0205.me/2013/12/02/LaTeX-How-to-start-itemize-on-same-line-as-text/"/>
    <id>http://liam0205.me/2013/12/02/LaTeX-How-to-start-itemize-on-same-line-as-text/</id>
    <published>2013-12-01T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>有时我们会希望在文本的同一行开始一个列表环境，而非是使用默认的在下一行开始。同时，我们会希望列表环境的标签仍旧在垂直方向上对齐。</p>
<p>LaTeX 提供的 itemize 环境和 enumerate 环境事实上都是 list 环境的一种，但 itemize 和 enumerate 不允许修改 <code>\labelsep</code> 等距离。因此，要达到我们的目的，我们要么使用原始的 list 环境，要么使用 description 环境——它允许修改这些距离。</p>
<a id="more"></a>

<p>代码：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>enumitem<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>lipsum<span class="special">}</span> <span class="comment">% just for the example</span>

<span class="command">\newlength</span><span class="special">{</span><span class="command">\jeroenlen</span><span class="special">}</span>
<span class="command">\newenvironment</span><span class="special">{</span>example<span class="special">}</span>
 <span class="special">{</span><span class="command">\settowidth</span><span class="special">{</span><span class="command">\jeroenlen</span><span class="special">}</span><span class="special">{</span><span class="command">\textbf</span><span class="special">{</span>Example:<span class="special">}</span><span class="special">}</span><span class="comment">%</span>
  <span class="command">\begin</span><span class="special">{</span>description<span class="special">}</span><span class="special">[</span>leftmargin=<span class="command">\jeroenlen</span>,labelwidth=0pt,labelsep=0pt<span class="special">]</span>
  <span class="command">\item</span><span class="special">[</span><span class="command">\textbf</span><span class="special">{</span>Example:<span class="special">}</span><span class="special">]</span><span class="comment">%</span>
  <span class="command">\begin</span><span class="special">{</span>itemize<span class="special">}</span><span class="special">[</span>leftmargin=1.5em,labelsep=.5em<span class="special">]</span><span class="special">}</span>
 <span class="special">{</span><span class="command">\end</span><span class="special">{</span>itemize<span class="special">}</span><span class="command">\end</span><span class="special">{</span>description<span class="special">}</span><span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\lipsum</span><span class="special">[</span>2<span class="special">]</span>
<span class="command">\begin</span><span class="special">{</span>example<span class="special">}</span>
<span class="command">\item</span> Such and such
<span class="command">\item</span> So and so
<span class="command">\item</span> Enough
<span class="command">\end</span><span class="special">{</span>example<span class="special">}</span>
<span class="command">\lipsum</span><span class="special">[</span>3<span class="special">]</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>效果：</p>
<p><img src="http://i.stack.imgur.com/xbCIc.png" alt=""></p>
<hr>
<p>Sometimes, we hope that an itemize environment could start at the same line of certain text, rather than start at the next line as the default does. Moreover, the labels should be vertically aligned.</p>
<p>The <code>itemize</code> and <code>enumerate</code> environment provided by the standard LaTeX are both descendant of <code>list</code> environment, however, length, such as <code>\labelsep</code>, are prevented from modifying. Thus, we have two choices: using <code>list</code> or using <code>description</code> whose length chould be modified.</p>
<p>Code:</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>enumitem<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>lipsum<span class="special">}</span> <span class="comment">% just for the example</span>

<span class="command">\newlength</span><span class="special">{</span><span class="command">\jeroenlen</span><span class="special">}</span>
<span class="command">\newenvironment</span><span class="special">{</span>example<span class="special">}</span>
 <span class="special">{</span><span class="command">\settowidth</span><span class="special">{</span><span class="command">\jeroenlen</span><span class="special">}</span><span class="special">{</span><span class="command">\textbf</span><span class="special">{</span>Example:<span class="special">}</span><span class="special">}</span><span class="comment">%</span>
  <span class="command">\begin</span><span class="special">{</span>description<span class="special">}</span><span class="special">[</span>leftmargin=<span class="command">\jeroenlen</span>,labelwidth=0pt,labelsep=0pt<span class="special">]</span>
  <span class="command">\item</span><span class="special">[</span><span class="command">\textbf</span><span class="special">{</span>Example:<span class="special">}</span><span class="special">]</span><span class="comment">%</span>
  <span class="command">\begin</span><span class="special">{</span>itemize<span class="special">}</span><span class="special">[</span>leftmargin=1.5em,labelsep=.5em<span class="special">]</span><span class="special">}</span>
 <span class="special">{</span><span class="command">\end</span><span class="special">{</span>itemize<span class="special">}</span><span class="command">\end</span><span class="special">{</span>description<span class="special">}</span><span class="special">}</span>

<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\lipsum</span><span class="special">[</span>2<span class="special">]</span>
<span class="command">\begin</span><span class="special">{</span>example<span class="special">}</span>
<span class="command">\item</span> Such and such
<span class="command">\item</span> So and so
<span class="command">\item</span> Enough
<span class="command">\end</span><span class="special">{</span>example<span class="special">}</span>
<span class="command">\lipsum</span><span class="special">[</span>3<span class="special">]</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>And the output:</p>
<p><img src="http://i.stack.imgur.com/xbCIc.png" alt=""></p>
]]></content>
    <summary type="html"><![CDATA[<p>有时我们会希望在文本的同一行开始一个列表环境，而非是使用默认的在下一行开始。同时，我们会希望列表环境的标签仍旧在垂直方向上对齐。</p>
<p>LaTeX 提供的 itemize 环境和 enumerate 环境事实上都是 list 环境的一种，但 itemize 和 enumerate 不允许修改 <code>\labelsep</code> 等距离。因此，要达到我们的目的，我们要么使用原始的 list 环境，要么使用 description 环境——它允许修改这些距离。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="listings" scheme="http://liam0205.me/tags/listings/"/>
    
      <category term="line number" scheme="http://liam0205.me/tags/line%20number/"/>
    
      <category term="copy" scheme="http://liam0205.me/tags/copy/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】如何确定某个宏定义的位置]]></title>
    <link href="http://liam0205.me/2013/11/20/LaTeX-How-to-find-out-where-a-macro-is-defined/"/>
    <id>http://liam0205.me/2013/11/20/LaTeX-How-to-find-out-where-a-macro-is-defined/</id>
    <published>2013-11-19T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>我们在排错的时候，经常希望知道出错的宏是在哪里定义的，然后通过比对定义和现有情况判断错误原因。</p>
<p>LeoLiu 在 <a href="http://tex.stackexchange.com/a/8523/38350" target="_blank">TeX.SX</a> 给出了一个利用 <code>filehook</code> 宏包实现的方法，效果拔群！当然，方法有些讨巧。</p>
<a id="more"></a>

<p>代码：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>filehook,currfile<span class="special">}</span>
<span class="command">\newwrite</span><span class="command">\finder</span>
<span class="command">\immediate</span><span class="command">\openout</span><span class="command">\finder</span>=<span class="command">\jobname</span>.fnd

<span class="command">\def</span><span class="command">\searchmacro</span><span class="special">#</span>1<span class="special">{</span>
  <span class="command">\AtBeginOfFiles</span><span class="special">{</span><span class="command">\ifdefined</span><span class="special">#</span>1
      <span class="command">\expandafter</span><span class="command">\def</span><span class="command">\csname</span> <span class="command">\currfilename</span>:found<span class="command">\endcsname</span><span class="special">{</span><span class="special">}</span><span class="comment">%</span>
    <span class="command">\fi</span><span class="special">}</span>
  <span class="command">\AtEndOfFiles</span><span class="special">{</span><span class="command">\ifdefined</span><span class="special">#</span>1
      <span class="command">\unless</span><span class="command">\ifcsname</span> <span class="command">\currfilename</span>:found<span class="command">\endcsname</span>
        <span class="command">\immediate</span><span class="command">\write</span><span class="command">\finder</span><span class="special">{</span>found in '<span class="command">\currfilename</span>'<span class="special">}</span><span class="comment">%</span>
    <span class="command">\fi</span><span class="command">\fi</span><span class="special">}</span><span class="special">}</span>

<span class="command">\searchmacro</span><span class="command">\url</span>

<span class="command">\usepackage</span><span class="special">{</span>hyperref<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
dummy
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>编译后，在 <code>\jobname.fnd</code> 里我们能找到</p>
<pre><code>found <span class="keyword">in</span> <span class="string">'url.sty'</span>
found <span class="keyword">in</span> <span class="string">'hyperref.sty'</span>
</code></pre><p>也就是说，<code>\url</code> 是在 <code>url.sty</code> 里定义的，而 <code>url.sty</code> 被 <code>hyperref.sty</code> 调用。</p>
<hr>
<p>We would be glad to know where a certain macro is defined, when we are debugging. LeoLiu provided a method by using the package <code>filehook</code>, on the website <a href="http://tex.stackexchange.com/a/8523/38350" target="_blank">TeX.SX</a>. It’s really great!</p>
<p>The code is somewhat tricky:</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>filehook,currfile<span class="special">}</span>
<span class="command">\newwrite</span><span class="command">\finder</span>
<span class="command">\immediate</span><span class="command">\openout</span><span class="command">\finder</span>=<span class="command">\jobname</span>.fnd

<span class="command">\def</span><span class="command">\searchmacro</span><span class="special">#</span>1<span class="special">{</span>
  <span class="command">\AtBeginOfFiles</span><span class="special">{</span><span class="command">\ifdefined</span><span class="special">#</span>1
      <span class="command">\expandafter</span><span class="command">\def</span><span class="command">\csname</span> <span class="command">\currfilename</span>:found<span class="command">\endcsname</span><span class="special">{</span><span class="special">}</span><span class="comment">%</span>
    <span class="command">\fi</span><span class="special">}</span>
  <span class="command">\AtEndOfFiles</span><span class="special">{</span><span class="command">\ifdefined</span><span class="special">#</span>1
      <span class="command">\unless</span><span class="command">\ifcsname</span> <span class="command">\currfilename</span>:found<span class="command">\endcsname</span>
        <span class="command">\immediate</span><span class="command">\write</span><span class="command">\finder</span><span class="special">{</span>found in '<span class="command">\currfilename</span>'<span class="special">}</span><span class="comment">%</span>
    <span class="command">\fi</span><span class="command">\fi</span><span class="special">}</span><span class="special">}</span>

<span class="command">\searchmacro</span><span class="command">\url</span>

<span class="command">\usepackage</span><span class="special">{</span>hyperref<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
dummy
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>


<p>After compiling, we will get</p>
<pre><code>found <span class="keyword">in</span> <span class="string">'url.sty'</span>
found <span class="keyword">in</span> <span class="string">'hyperref.sty'</span>
</code></pre><p>in <code>\jobname.fnd</code>. That is to say, <code>\url</code> is defined in <code>url.sty</code>, which is inputed by <code>hyperref.sty</code>.</p>
]]></content>
    <summary type="html"><![CDATA[<p>我们在排错的时候，经常希望知道出错的宏是在哪里定义的，然后通过比对定义和现有情况判断错误原因。</p>
<p>LeoLiu 在 <a href="http://tex.stackexchange.com/a/8523/38350" target="_blank">TeX.SX</a> 给出了一个利用 <code>filehook</code> 宏包实现的方法，效果拔群！当然，方法有些讨巧。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="macro" scheme="http://liam0205.me/tags/macro/"/>
    
      <category term="package" scheme="http://liam0205.me/tags/package/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[笨办法学 Python 中译版]]></title>
    <link href="http://liam0205.me/2013/11/18/pyhardway/"/>
    <id>http://liam0205.me/2013/11/18/pyhardway/</id>
    <published>2013-11-17T16:00:00.000Z</published>
    <updated>2014-05-23T07:40:03.000Z</updated>
    <content type="html"><![CDATA[<p>这是一本优秀的 Python 入门教材，作者为 Zed A. Shaw, 译者为 Wang<br>Dingwei。原文发布在 <a href="http://learnpythonthehardway.org/" target="_blank">http://learnpythonthehardway.org/</a>，译文发布在 <a href="https:
//learn-python-the-hard-way-zh_cn-translation.readthedocs.org/en/1.
0/index.html">https:<br>//learn-python-the-hard-way-zh_cn-translation.readthedocs.org/en/1.<br>0/index.html</a>. 因未能找到译本的 PDF 版，我使用 LaTeX 排版了这本书。</p>
<p>本书 PDF 版未经校对，翻译和排版漏洞在所难免，欢迎留言以便修正。</p>
<a id="more"></a>

<p>掀桌！刚排完发现这本书已经有第三版了，我排版的只是第一版……嘛，不过内容不算过时，之后可能会接着排第三版吧……</p>
<hr>
<p><a href="/attachment/Python/PyHardWay/Learn_Python_The_Hard_Way_zh-cn.pdf">PDF 文档下载</a></p>
<p><a href="/attachment/Python/PyHardWay/PyHardWay.zip">LaTeX 源码</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>这是一本优秀的 Python 入门教材，作者为 Zed A. Shaw, 译者为 Wang<br>Dingwei。原文发布在 <a href="http://learnpythonthehardway.org/" target="_blank">http://learnpythonthehardway.org/</a>，译文发布在 <a href="https:
//learn-python-the-hard-way-zh_cn-translation.readthedocs.org/en/1.
0/index.html">https:<br>//learn-python-the-hard-way-zh_cn-translation.readthedocs.org/en/1.<br>0/index.html</a>. 因未能找到译本的 PDF 版，我使用 LaTeX 排版了这本书。</p>
<p>本书 PDF 版未经校对，翻译和排版漏洞在所难免，欢迎留言以便修正。</p>
]]></summary>
    
      <category term="Python" scheme="http://liam0205.me/tags/Python/"/>
    
      <category term="PyHardWay" scheme="http://liam0205.me/tags/PyHardWay/"/>
    
      <category term="Translation" scheme="http://liam0205.me/tags/Translation/"/>
    
      <category term="Python" scheme="http://liam0205.me/categories/Python/"/>
    
  </entry>
  
</feed>
