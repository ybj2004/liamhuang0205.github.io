<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[始终]]></title>
  <subtitle><![CDATA[不忘初心]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://liam0205.me/"/>
  <updated>2014-12-11T06:21:10.362Z</updated>
  <id>http://liam0205.me/</id>
  
  <author>
    <name><![CDATA[Liam Huang]]></name>
    <email><![CDATA[liamhuang0205+blog@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[日文 LaTeX 系统介绍 - 最简示例]]></title>
    <link href="http://liam0205.me/2014/12/11/ptex-intro-and-tutorial-03/"/>
    <id>http://liam0205.me/2014/12/11/ptex-intro-and-tutorial-03/</id>
    <published>2014-12-11T04:13:13.000Z</published>
    <updated>2014-12-11T06:19:52.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>本文为译文，原文载于<a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-3-simple-documents/" target="_blank">这里</a>。欢迎关注本系列的文章。</p>
</blockquote>
<p><a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-2-characters-and-encodings/" target="_blank">上一篇文章</a>（<a href="http://liam0205.me/2014/12/08/ptex-intro-and-tutorial-02/">译文</a>）我们探讨了关于字符集和编码的一些细节，今次我们继续讨论如何在 LaTeX 中书写日文。今天的内容需要动手操作试试，要用不同的引擎和宏包写一些 Hello world 类型的文档。</p>
<p><img src="/images/pTeX-intro/nihongo-latex.jpg" alt=""></p>
<p>今天的内容同样会涉及到一些配置 TeX 环境的内容，会讲一讲如何在 <a href="http://tug.org/texlive/" target="_blank">TeX Live</a> 里配置书写日文的环境。</p>
<a id="more"></a>

<h2 id=" 配置日文 _TeX_ 环境 ">配置日文 TeX 环境</h2>
<p>我们假设，你已经在计算机上安装好了类似 TeX Live 2014 的 TeX 系统。你可以在下列 TeX 系统中选择其一安装。</p>
<ul>
<li>TeX Live 的原始版本 (Upstream TeX Live installation) - 完整的安装步骤，请参考 <a href="http://tug.org/texlive/doc/texlive-zh-cn/texlive-zh-cn.pdf" target="_blank">TeX Live 的文档（中文版）</a>的第三章。对于 <a href="http://tug.org/texlive/quickinstall.html" target="_blank">Linux</a> 和 <a href="http://tug.org/texlive/windows.html" target="_blank">Windows</a> 系统，也可以参照相应的快速安装教程。对于 Mac OS X 的用户，则建议安装基于 TeX Live 的 <a href="http://tug.org/mactex/" target="_blank">MacTeX</a>。</li>
<li>发行版里的 TeX Live (Distribution’s TeX Live) - 具体的安装取决于你使用的发行版。如果你用的是 Debian/jessie 或者 Debian/sid，那么你只需要运行 <code>apt-get install texlive-full</code> 即可。其他发行版 (Fedora, RedHat, SuSE) 的用户请注意检查发行版里当前的 TeX Live 版本。在老版本的环境下，后文中的例子可能无法得到预期的结果。</li>
<li>W32TeX - <a href="http://w32tex.org/index-zh.html" target="_blank">W32TeX</a> 是 Akira KAKUTO 针对 Windows 系统制作的 TeX 发行版，其中的宏包也专门为 Windows 系统筛选过。W32TeX 对日文的配置可能是最周全的，不过我没有亲身体验过。</li>
<li>其他 TeX 发行版 - <a href="http://miktex.org/" target="_blank">MiKTeX</a> 是另一个重要的 TeX 发行版。MiKTeX 是 Windows 平台上高度集成的优秀发行版。不过因为打包和依赖脚本的差异，特别是涉及到 <code>udpmap</code> 的部分与 TeX Live 完全不同，MiKTeX 在我手头的一些设备上并不能很好地运行。</li>
</ul>
<p>我的建议是，如果你的发行版足够新，那最好使用软件源里的 TeX Live；不然的话最好是使用 TUG 上的 TeX Live，包括 MacTeX。</p>
<h2 id=" 最简示例 ">最简示例</h2>
<p>言归正传。接下来我们来写几个「Hello world」文档。当然，「Hello world」这几个字母里并没有日文字，所以文章的正文部分看起来会是这个样子：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\LaTeX</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>在进行下一步之前，有必要说一下关于编码的问题。请按以下规则，在保存文件的时候选择正确的编码：</p>
<ul>
<li>Unix-like 系统以及 Mac OS X 系统：总是保存为 UTF-8 编码</li>
<li>Windows 系统：在测试 pLaTeX 的时候使用 ShiftJIS 编码，其他时候使用 UTF-8 编码</li>
</ul>
<p>这样做的原因在于：在 Windows 系统上，pTeX 以 ShiftJIS 编码作为默认编码；在其他系统上以 UTF-8 编码作为默认编码。当然，你也可以在 Windows 上把 pLaTeX 的测试文档以 UTF-8 编码保存，但是在编译的时候你得加上 <code>-kanji utf8</code> 这样的参数。</p>
<h3 id="pLaTeX_ 以及 _upLaTeX">pLaTeX 以及 upLaTeX</h3>
<p>这是最简单的情况，我们只需要加上 <code>\documentclass</code> 就好了。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\LaTeX</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>以正确的编码将其保存为 <code>hello-ptex.tex</code>，然后运行 <code>platex</code>，UTF-8 编码的控制台会有类似于如下的输出：</p>
<figure class="highlight text"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre>$ platex hello-ptex.tex
This <span class="keyword">is</span> e-pTeX, Version <span class="number">3.14159265</span>-p3<span class="number">.5</span>-<span class="number">130605</span>-<span class="number">2.6</span> (utf8.euc) (TeX Live <span class="number">2014</span>) (preloaded format=platex)
 restricted \write18 enabled.
entering extended mode
(./hello-ptex.tex
pLaTeX2e &lt;<span class="number">2006</span>/<span class="number">11</span>/<span class="number">10</span>&gt; (based <span class="function_start"><span class="keyword">on</span></span> LaTeX2e &lt;<span class="number">2014</span>/<span class="number">05</span>/<span class="number">01</span>&gt; patch level <span class="number">0</span>)
Babel &lt;<span class="number">3.9</span>k&gt; <span class="keyword">and</span> hyphenation patterns <span class="keyword">for</span> <span class="number">79</span> languages loaded.
(/home/norbert/tl/<span class="number">2014</span>/texmf-dist/tex/latex/base/article.cls
Document Class: article <span class="number">2007</span>/<span class="number">10</span>/<span class="number">19</span> v1<span class="number">.4</span>h Standard LaTeX document <span class="type">class</span>
(/home/norbert/tl/<span class="number">2014</span>/texmf-dist/tex/latex/base/size10.clo)) (./hello-ptex.aux
) [<span class="number">1</span>] (./hello-ptex.aux) )
Output written <span class="function_start"><span class="keyword">on</span></span> hello-ptex.dvi (<span class="number">1</span> page, <span class="number">384</span> bytes).
Transcript written <span class="function_start"><span class="keyword">on</span></span> hello-ptex.<span class="command">log</span>.
</pre></td></tr></table></figure>



<p>Windows 系统上的输出与此类似，只不过在版本号后面的不是 <code>utf8.euc</code> 而是 <code>sjis</code>。</p>
<p>如你所见，输出结果是一个 DVI 文件。注意，此处<strong>不要</strong>使用 <code>dvips</code> 将其转换为 PostScript 文件，<code>dvips</code> 也许能够工作，但是 PS 文件却无法正常显示；请总是使用 <code>dvipdfmx</code> 将 pTeX/upTeX 输出的 DVI 文件转换为 PDF 文件。</p>
<p>因此，我们输入命令</p>
<figure class="highlight text"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>$ dvipdfmx hello<span class="attribute">-ptex</span><span class="built_in">.</span>dvi
hello<span class="attribute">-ptex</span><span class="built_in">.</span>dvi <span class="subst">-&gt; </span>hello<span class="attribute">-ptex</span><span class="built_in">.</span>pdf
<span class="preprocessor">[</span><span class="number">1</span><span class="preprocessor">]</span><span class="markup">
7636 bytes written</span>
</pre></td></tr></table></figure>



<p>接下来，使用 PDF 阅读器打开得到的 PDF 文档，效果类似于下：</p>
<p><img src="/images/pTeX-intro/hello-ptex.jpg" alt=" 输出效果 "></p>
<p>如果觉得字体效果看起来稍有不同，也暂时不用担心，之后对此会有解释。但不论如何，你应该能看到日文字符，不然就说明有哪里错了。</p>
<p>类似的步骤在 upTeX 下同样奏效：</p>
<figure class="highlight text"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre>$ uplatex hello-ptex<span class="preprocessor">.tex</span>
This is e-upTeX, Version <span class="number">3.14159265</span>-p3<span class="number">.5</span>-u1<span class="number">.11</span>-<span class="number">130605</span>-<span class="number">2.6</span> (utf8<span class="preprocessor">.uptex</span>) (TeX Live <span class="number">2014</span>) (preloaded format=uplatex)
 restricted \write18 enabled.
entering extended mode
(./hello-ptex<span class="preprocessor">.tex</span>
pLaTeX2e &lt;<span class="number">2011</span>/<span class="number">05</span>/<span class="number">07</span>u00&gt;+<span class="number">0</span> (based on LaTeX2e &lt;<span class="number">2014</span>/<span class="number">05</span>/<span class="number">01</span>&gt; patch level <span class="number">0</span>)
Babel &lt;<span class="number">3.9</span>k&gt; <span class="keyword">and</span> hyphenation patterns for <span class="number">79</span> languages loaded.
(/home/norbert/tl/<span class="number">2014</span>/texmf-dist/tex/latex/base/article<span class="preprocessor">.cls</span>
Document Class: article <span class="number">2007</span>/<span class="number">10</span>/<span class="number">19</span> v1<span class="number">.4</span>h Standard LaTeX document class
(/home/norbert/tl/<span class="number">2014</span>/texmf-dist/tex/latex/base/size10<span class="preprocessor">.clo</span>)) (./hello-ptex<span class="preprocessor">.aux</span>
) [<span class="number">1</span>] (./hello-ptex<span class="preprocessor">.aux</span>) )
Output written on hello-ptex<span class="preprocessor">.dvi</span> (<span class="number">1</span> page, <span class="number">380</span> bytes).
Transcript written on hello-ptex<span class="preprocessor">.log</span>.
$ dvipdfmx hello-ptex<span class="preprocessor">.dvi</span>
hello-ptex<span class="preprocessor">.dvi</span> -&gt; hello-ptex<span class="preprocessor">.pdf</span>
[<span class="number">1</span>]
<span class="number">7638</span> bytes written
</pre></td></tr></table></figure>



<p>输出结果与之前应当完全相同。</p>
<p>多简单啊~</p>
<h3 id="XeLaTeX">XeLaTeX</h3>
<p>如果你用 XeLaTeX 编译同样的代码，输出结果里就不会有日文字符。这里我们要多写一点代码。这里我会展示使用 <a href="http://ctan.org/pkg/xecjk" target="_blank">xeCJK</a> 和 <a href="http://ctan.org/pkg/zxjatype" target="_blank">ZXjatype</a> 的最简示例。这两个宏包在 TeX Live 里都有，你可以选择其一。</p>
<p>不管你用哪个宏包，你都得选择一个日文字体，不然的话日文字符就不会输出。</p>
<h4 id="xeCJK">xeCJK</h4>
<p>对于 xeCJK 来说，你得这么写：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>xeCJK<span class="special">}</span>
<span class="command">\setCJKmainfont</span><span class="special">{</span>ipaexm.ttf<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\LaTeX</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>将其以 UTF-8 编码保存为 <code>hello-xetex.tex</code>，之后运行 <code>xelatex</code>:</p>
<figure class="highlight text"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="variable">$ </span>xelatex hello-xetex.tex
<span class="constant">This</span> is <span class="constant">XeTeX</span>, <span class="constant">Version</span> <span class="number">3.14159265</span>-<span class="number">2.6</span>-<span class="number">0</span>.<span class="number">99991</span> (<span class="constant">TeX</span> <span class="constant">Live</span> <span class="number">2014</span>) (preloaded format=xelatex)
 restricted \write18 enabled.
entering extended mode
(./hello-xetex.tex
<span class="constant">LaTeX2e</span> &lt;<span class="number">2014</span>/<span class="number">05</span>/<span class="number">01</span>&gt;
<span class="constant">Babel</span> &lt;<span class="number">3.9</span>k&gt; <span class="keyword">and</span> hyphenation patterns <span class="keyword">for</span> <span class="number">79</span> languages loaded.
(<span class="regexp">/home/norbert</span><span class="regexp">/tl/</span><span class="number">2014</span>/texmf-dist/tex/latex/base/article.cls
<span class="constant">Document</span> <span class="constant">Class</span><span class="symbol">:</span> article <span class="number">2007</span>/<span class="number">10</span>/<span class="number">19</span> v1.<span class="number">4</span>h <span class="constant">Standard</span> <span class="constant">LaTeX</span> document <span class="class"><span class="keyword">class</span></span>
(<span class="regexp">/home/norbert</span><span class="regexp">/tl/</span><span class="number">2014</span>/texmf-dist/tex/latex/base/size1<span class="number">0</span>.clo))
(<span class="regexp">/home/norbert</span><span class="regexp">/tl/</span><span class="number">2014</span>/texmf-dist/tex/xelatex/xecjk/xeCJK.sty
(<span class="regexp">/home/norbert</span><span class="regexp">/tl/</span><span class="number">2014</span>/texmf-dist/tex/latex/l3kernel/expl3.sty
.....
(./hello-xetex.aux) (<span class="regexp">/home/norbert</span><span class="regexp">/tl/</span><span class="number">2014</span>/texmf-dist/tex/latex/tipa/t3cmr.fd)
[<span class="number">1</span>] (./hello-xetex.aux) )
<span class="constant">Output</span> written on hello-xetex.pdf (<span class="number">1</span> page).
<span class="constant">Transcript</span> written on hello-xetex.log.
</pre></td></tr></table></figure>



<p>直接就能得到 PDF 文档。</p>
<h4 id="ZXjatype">ZXjatype</h4>
<p>对于 ZXjatype 来说，你得这么写：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>zxjatype<span class="special">}</span>
<span class="command">\setjamainfont</span><span class="special">{</span>ipaexm.ttf<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\LaTeX</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<h3 id="pdfLaTeX">pdfLaTeX</h3>
<p>接下来，我们看看在 pdfLaTeX 底下怎么使用。pdfTeX 引擎可能是全球范围内使用最广泛的引擎了。这里，我们也将讨论两个宏包的使用方法：Werner Lemberg 的 <a href="http://cjk.ffii.org/" target="_blank">CJK</a> 宏包和 Takayuki Yato 的 <a href="http://www.ctan.org/pkg/bxcjkjatype" target="_blank">BXcjkjatype</a>。</p>
<h4 id="CJK">CJK</h4>
<p>译注：这里作者用了一个很别扭的方式来构建文档，已改用通常习惯的方式。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>CJKutf8<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>CJK*<span class="special">}</span><span class="special">{</span>UTF8<span class="special">}</span><span class="special">{</span>min<span class="special">}</span>
<span class="command">\LaTeX</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>CJK*<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>将其以 UTF-8 编码保存为 <code>hello-cjk.tex</code>，之后运行 <code>pdflatex</code>:</p>
<figure class="highlight text"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre>$ pdflatex hello<span class="attribute">-cjk</span><span class="built_in">.</span>tex
This is pdfTeX, Version <span class="number">3.14159265</span><span class="subst">-</span><span class="number">2.6</span><span class="subst">-</span><span class="number">1.40</span><span class="number">.15</span> (TeX Live <span class="number">2014</span>) (preloaded format<span class="subst">=</span>pdflatex)
 restricted <span class="subst">\</span>write18 enabled<span class="built_in">.</span>
entering extended mode
(<span class="built_in">.</span>/hello<span class="attribute">-cjk</span><span class="built_in">.</span>tex
LaTeX2e <span class="subst">&lt;</span><span class="number">2014</span>/<span class="number">05</span>/<span class="number">01</span><span class="subst">&gt;</span>
Babel <span class="subst">&lt;</span><span class="number">3.9</span>k<span class="subst">&gt;</span> <span class="literal">and</span> hyphenation patterns for <span class="number">79</span> languages loaded<span class="built_in">.</span>
(/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/tex/latex/base/article<span class="built_in">.</span>cls
Document Class: article <span class="number">2007</span>/<span class="number">10</span>/<span class="number">19</span> v1<span class="number">.4</span>h Standard LaTeX document class
(/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/tex/latex/base/size10<span class="built_in">.</span>clo))
(/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/tex/latex/cjk/texinput/CJKutf8<span class="built_in">.</span>sty
<span class="attribute">...</span>
t/fonts/type1/wadalab/dmj/dmjkk<span class="built_in">.</span>pfb<span class="subst">&gt;&lt;</span>/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/fonts/typ
e1/wadalab/dmj/dmjsy<span class="built_in">.</span>pfb<span class="subst">&gt;</span>
Output written <span class="keyword">on</span> hello<span class="attribute">-cjk</span><span class="built_in">.</span>pdf (<span class="number">1</span> page, <span class="number">29574</span> <span class="built_in">bytes</span>)<span class="built_in">.</span>
Transcript written <span class="keyword">on</span> hello<span class="attribute">-cjk</span><span class="built_in">.</span><span class="keyword">log</span><span class="built_in">.</span>
</pre></td></tr></table></figure>



<p>如果你仔细观察的话，你会发现：LaTeX 几个字母后的空距和之前的输出不大一样。尽管代码看起来有些麻烦，不过，如果你只是想在非日文的文档里嵌入一小段日文，这仍然是个不错的方案。</p>
<p>译者注：实际上，用下面的代码，也能得到正确的 CJK-western 空距。这应该是原作者不熟悉 CJK 导致的。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>CJKutf8<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>CJKspace<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>CJK*<span class="special">}</span><span class="special">{</span>UTF8<span class="special">}</span><span class="special">{</span>min<span class="special">}</span>
<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>CJK*<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<h4 id="BXcjkjatype">BXcjkjatype</h4>
<p>如果上面的代码看起来十分冗长，那么 BXcjkjatype 则提供了一种更简洁也更好的封装。这里只需要用下面简单的代码就能得到输出了：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">[</span>whole<span class="special">]</span><span class="special">{</span>bxcjkjatype<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\LaTeX</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>输出结果和之前 CJK 方式的结果类似。不过，嵌入的字体和之前有所不同。BXcjkjatype 默认使用 IPAex 字体。使用此方式请注意：不要在文档中使用任何非 ASCII 字符。</p>
<h3 id="LuaLaTeX">LuaLaTeX</h3>
<p>LuaTeX 是一个嵌入了 Lua 解释器的新的 TeX 引擎，这使得我们可以使用 Lua 语言来控制和调整许多 TeX 内部的行为。尽管它还不能完全取代 pdfTeX，但是至少拿来输出文档还是可以的。一些日本 TeX 同好为其开发了 <a href="http://ctan.org/pkg/luatexja" target="_blank">LuaTeX-ja</a> 宏包，用以在 LuaTeX 里使用日文。最简示例是这样的：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>luatexja<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\LaTeX</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>运行 <code>lualatex</code> 之后，你可能要等上不少时间。这是因为第一次运行 LuaLaTeX 的时候，系统需要刷新字体，耐心等待就好。最终在控制台终端上，你大概会得到下面的输出内容：</p>
<figure class="highlight text"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre>$ lualatex hello<span class="attribute">-luatexja</span><span class="built_in">.</span>tex
This is LuaTeX, Version beta<span class="subst">-</span><span class="number">0.79</span><span class="number">.1</span> (TeX Live <span class="number">2014</span>) (rev <span class="number">4971</span>)
 restricted <span class="subst">\</span>write18 enabled<span class="built_in">.</span>
(<span class="built_in">.</span>/hello<span class="attribute">-luatexja</span><span class="built_in">.</span>tex
LaTeX2e <span class="subst">&lt;</span><span class="number">2014</span>/<span class="number">05</span>/<span class="number">01</span><span class="subst">&gt;</span>
Babel <span class="subst">&lt;</span><span class="number">3.9</span>k<span class="subst">&gt;</span> <span class="literal">and</span> hyphenation patterns for <span class="number">79</span> languages loaded<span class="built_in">.</span>
(/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/tex/latex/base/article<span class="built_in">.</span>cls
Document Class: article <span class="number">2007</span>/<span class="number">10</span>/<span class="number">19</span> v1<span class="number">.4</span>h Standard LaTeX document class
(/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/tex/latex/base/size10<span class="built_in">.</span>clo))
(/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/tex/luatex/luatexja/luatexja<span class="built_in">.</span>sty
<span class="attribute">...</span>
 <span class="number">1923</span> words of node memory still <span class="keyword">in</span> use:
   <span class="number">6</span> hlist, <span class="number">1</span> vlist, <span class="number">3</span> rule, <span class="number">3</span> glue, <span class="number">10</span> kern, <span class="number">1</span> glyph, <span class="number">241</span> attribute, <span class="number">299</span> glue_s
pec, <span class="number">16</span> attribute_list, <span class="number">1</span> write nodes
   avail lists: <span class="number">1</span>:<span class="number">1</span>,<span class="number">2</span>:<span class="number">888</span>,<span class="number">3</span>:<span class="number">5</span>,<span class="number">4</span>:<span class="number">40</span>,<span class="number">5</span>:<span class="number">4</span>,<span class="number">6</span>:<span class="number">25</span>,<span class="number">7</span>:<span class="number">3</span>,<span class="number">9</span>:<span class="number">12</span>
<span class="subst">&lt;&lt;</span>/home/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/fonts/type1/<span class="keyword">public</span>/amsfonts/cm/cmr10<span class="built_in">.</span>pfb<span class="subst">&gt;&lt;&lt;</span>/h
ome/norbert/tl/<span class="number">2014</span>/texmf<span class="attribute">-dist</span>/fonts/type1/<span class="keyword">public</span>/amsfonts/cm/cmr7<span class="built_in">.</span>pfb<span class="subst">&gt;</span>
Output written <span class="keyword">on</span> hello<span class="attribute">-luatexja</span><span class="built_in">.</span>pdf (<span class="number">1</span> page, <span class="number">17058</span> <span class="built_in">bytes</span>)<span class="built_in">.</span>
Transcript written <span class="keyword">on</span> hello<span class="attribute">-luatexja</span><span class="built_in">.</span><span class="keyword">log</span><span class="built_in">.</span>
</pre></td></tr></table></figure>



<p>输出结果同样取决于你系统里的默认字体，但和之前的截图应该差不多。</p>
<h2 id=" 总结 ">总结</h2>
<p>文章介绍了在不同 TeX 引擎和宏包下的最简日文示例。如果你能够运行这些示例，那么更复杂的文档你也应该能够运行，你的 TeX 系统完全可以进行日文排版。</p>
<p>不过，仍然还有不少问题需要讨论。比如：字体选择，插图，多语种混排以及非 ASCII 字符的使用。这些我们之后再讨论。</p>
<h2 id=" 译者续 ">译者续</h2>
<p>在 pdfLaTeX 编译的情况下，还有一种排版 CJK 文字的方法。可以使用刘海洋前辈的 <a href="http://www.ctan.org/tex-archive/language/chinese/zhmcjk" target="_blank">zhmCJK</a> 宏包。这个宏包因为一些原因暂时没有收录到 TeX Live 中，不过，这系列文章的作者正好是 TeX Live 的开发者之一，我最近正在和他沟通这件事情。</p>
<p>zhmCJK 宏包提供了类似于 xeCJK 宏包的接口，相应的功能也完全类似。因此可以看做是不能使用 XeLaTeX 而必须使用 pdfLaTeX 的情况下的一个替代。对应于文章中 xeCJK 的例子，最简示例是：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>zhmCJK<span class="special">}</span>
<span class="command">\setCJKmainfont</span><span class="special">{</span>ipaexm.ttf<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> で日本語を書きましょう！
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>LaTeX 新手可以将宏包内的文件解压，释放到和你的 <code>.tex</code> 文件同目录下；有经验的 LaTeX 使用者，可以按照宏包文档，将宏包文件放在 TEXMF 中的合适位置，然后刷新 TeX 系统。</p>
<p>另外，正如刘海洋前辈和李清前辈（他们是当前 xeCJK 宏包的维护者）<a href="http://www.zhihu.com/question/26705259" target="_blank">所言</a>，xeCJK 虽然取名如此，但实际上只是对中文的支持比较完善。因此用 xeCJK 来排版日文在细节上还是会有一些问题的，特别是对日文排版规则的处理。此外，原作者提到的 ZXjatype 宏包，实际上是在 xeCJK 基础上再开发的结果。由于 xeCJK 的局限，ZXjatype 也不可避免地会有一些问题。</p>
]]></content>
    <summary type="html"><![CDATA[<blockquote>
<p>本文为译文，原文载于<a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-3-simple-documents/" target="_blank">这里</a>。欢迎关注本系列的文章。</p>
</blockquote>
<p><a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-2-characters-and-encodings/" target="_blank">上一篇文章</a>（<a href="http://liam0205.me/2014/12/08/ptex-intro-and-tutorial-02/">译文</a>）我们探讨了关于字符集和编码的一些细节，今次我们继续讨论如何在 LaTeX 中书写日文。今天的内容需要动手操作试试，要用不同的引擎和宏包写一些 Hello world 类型的文档。</p>
<p><img src="/images/pTeX-intro/nihongo-latex.jpg" alt=""></p>
<p>今天的内容同样会涉及到一些配置 TeX 环境的内容，会讲一讲如何在 <a href="http://tug.org/texlive/" target="_blank">TeX Live</a> 里配置书写日文的环境。</p>
]]></summary>
    
      <category term="pTeX" scheme="http://liam0205.me/tags/pTeX/"/>
    
      <category term="Japanese" scheme="http://liam0205.me/tags/Japanese/"/>
    
      <category term="Demo" scheme="http://liam0205.me/tags/Demo/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[日文 LaTeX 系统介绍 - 字符与编码]]></title>
    <link href="http://liam0205.me/2014/12/08/ptex-intro-and-tutorial-02/"/>
    <id>http://liam0205.me/2014/12/08/ptex-intro-and-tutorial-02/</id>
    <published>2014-12-08T07:36:29.000Z</published>
    <updated>2014-12-09T03:29:41.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>本文为译文，原文载于<a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-2-characters-and-encodings/" target="_blank">这里</a>。欢迎关注本系列的文章。</p>
</blockquote>
<p><a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-1-introduction/" target="_blank">上一篇文章</a>（<a href="http://liam0205.me/2014/12/07/ptex-intro-and-tutorial-01/">译文</a>）简单介绍了在 LaTeX 中排版日文的一些情况，今次我们会探讨一些关于字符和编码的技术细节。</p>
<p><img src="/images/pTeX-intro/nihongo-latex.jpg" alt=""></p>
<a id="more"></a>

<p>这篇文章我们将讨论字符集和编码。在书写欧洲文字的时候，人们就已经需要用到非 ASCII 字符了；诸如日文这样的有成千上万个表义字符的书写系统，其字符数量更是远超 ASCII 所能涵盖的数量。同时我们也会琢磨一下为什么在日文文档里的转义字符为什么不是反斜线（\），而是日本货币标志（￥）。</p>
<p>首先，我并不精于此道。因此，文中讲解的内容十分简单，并且不可避免地会有谬误。如有发现请指出。</p>
<h2 id=" 字符集和编码 ">字符集和编码</h2>
<p>对于 ASCII 来说，这事儿很简单。比如，在计算机中表示「A」这个字母，我们只需要用 65 这个十进制数来表示即可。并且，65 对应的二进制数，也正是字母「A」在计算机中的样子。因此，对于 ASCII 来说，它既是字符集又是编码。</p>
<p>对于非 ASCII 字符来说，这事儿就变得复杂起来了。</p>
<p>对于欧洲的字符来说可能还好。比如常用的 Latin1 字符集中，字符「Ö」的码位是 214。由于一个字节可以表示 256 个不同的值，所以勉强能装下整个 Latin1 字符集。</p>
<p>但是对于成千上万的日文汉字 (Kanji) 来说，这就不行了。首先需要有一个统一的方式将字形 (glyph) 编号，每个字形对应一个 ID (数字)。然后再寻找一个合适的方式去编码这些字形。</p>
<h3 id=" 字符集标准 ">字符集标准</h3>
<ul>
<li><strong>JIS</strong> - 实践中有一些日本工业标准 (<a href="http://en.wikipedia.org/wiki/Japanese_Industrial_Standard" target="_blank">Japanese Industrial Standards</a>)。比如，JIS X 0201 在 ASCII 字符集的基础上，增加了 64 个半宽 (half-width) 的片假名；又比如，<a href="http://en.wikipedia.org/wiki/JIS_X_0208" target="_blank">JIS X 0208</a> 是最常见的汉字字符集，它包含 6879 个字符，其中有 6355 个汉字，另有 524 个其他类型的字符。</li>
<li><strong>UCS</strong> - 通用字符集 (<a href="http://zh.wikipedia.org/wiki/ 通用字符集 " target="_blank">Universal Character Set</a>) 中包含了近十万个抽象字符，它试图将有史以来所有的字符都包含进来。涉及到日语的部分有一些特殊，对应的标准是统一汉码 (<a href="http://en.wikipedia.org/wiki/Han_unification" target="_blank">Han Unification</a>)，这个字符集将中日韩表意相同的形近字统一映射到一个码位上。</li>
</ul>
<h3 id=" 编码 ">编码</h3>
<p>有了字符集标准，接下来需要考虑如何在计算机中用二进制和字节表示这些字符。编码和字符集是两个不同的概念，但因为总是一起提及，所以经常有人混淆。</p>
<p>对于现代计算机和 TeX 来说，有以下一些常见的编码。其中前三个编码了 JIS 字符集；最后一个编码了 Unicode 字符集。</p>
<ul>
<li>SJIS (<a href="http://zh.wikipedia.org/wiki/Shift_JIS" target="_blank">Shift JIS</a>) - SJIS 编码了 JIS X 0201 和 JIS X 0208 两个字符集。它很好地兼容了 ASCII 和 JIS X 0201，这使得它在老的计算机上工作正常；但是它也有一些奇怪的性质，并因此在一些通用解析器上工作不正常。</li>
<li>JIS X 0202 - 通称 JIS 的编码标准，它编码了 JIS X 0208。这个编码在诸如电子邮件的 7-bit 信道上的传输性能良好；老的 Emacs 也将其当做内部编码。</li>
<li>EUC(-JP) Extanded Unix Code - 实际上是符合 ISO 2022 标准的字符集的编码族。这种编码在日本的 Unix-affine 计算机上流行多年。</li>
<li><a href="http://en.wikipedia.org/wiki/UTF-8" target="_blank">UTF-8</a> - 编码了 UCS 字符集，是 <a href="http://en.wikipedia.org/wiki/Unicode" target="_blank">Unicode 标准</a>的一部分，先行与几乎所有现代计算机操作系统上。</li>
</ul>
<p>最后我们来看一个例子。</p>
<pre><code><span class="keyword">Language</span>
Ä á
日本語
ひらがな
</code></pre><p>注意观察他们在不同编码规则情况下对应的十六进制数据。</p>
<p><strong>UTF-8</strong></p>
<p>第一行的「Language」在 UTF-8 编码中对应的十六进制与 ASCII 完全相同，用一个字节表示一个字符；第二行的注音字母则用两个字节来编码，其中 0x20 是单字节的空格；第三行的日文汉字和第四行的平假名都用三个字符来编码。</p>
<pre><code>4c 61 6e 67 75 61 67 65
c3 84 20 c3 a1
e6 97 a5 e6 9c ac e8 aa 9e
e3 81 b2 e3 82 89 e3 81 8c e3 81 aa
</code></pre><p><strong>SJIS</strong></p>
<p>SJIS 编码就有点意思了。首先，第一行保持相同，与 ASCII 兼容。第二行的「Ä」并不在字符集当中，于是 SJIS 把它当做是「”A」，编码成「0x22 0x41」；另一方面，「á」在字符集当中，SJIS 用三个字节将它编码成「0x81 0x4c 0x61」。注意第一行的编码，「0x4c」是字母「L」，「0x61」是字母「a」。它们连在一起与「á」的第二和第三个字节完全相同。这样「La」的编码就出现了歧义，一些解析器就无法正常工作了。</p>
<p>接下来的日文汉字和平假名分别用两个字节来编码。</p>
<pre><code>4c 61 6e 67 75 61 67 65
22 41 20 81 4c 61
93 fa 96 7b 8c ea
82 d0 82 e7 82 aa 82 c8
</code></pre><p><strong>ISO2022-JP</strong></p>
<p>同样由于「Ä」不在字符集当中，ISO2022-JP 把它当做是「”A」来进行编码；但「á」却花了 9 个字节来编码。同时汉字和平假名的编码方式也是不固定的。</p>
<pre><code><span class="number">4</span>c <span class="number">61</span> <span class="number">6</span>e <span class="number">67</span> <span class="number">75</span> <span class="number">61</span> <span class="number">67</span> <span class="number">65</span>
<span class="number">22</span> <span class="number">41</span> <span class="number">20</span> <span class="number">1</span>b <span class="number">24</span> <span class="number">42</span> <span class="number">21</span> <span class="number">2</span>d <span class="number">1</span>b <span class="number">28</span> <span class="number">42</span> <span class="number">61</span>
<span class="number">1</span>b <span class="number">24</span> <span class="number">42</span> <span class="number">46</span> <span class="number">7</span>c <span class="number">4</span>b <span class="number">5</span>c <span class="number">38</span> <span class="number">6</span>c <span class="number">1</span>b <span class="number">28</span> <span class="number">42</span>
<span class="number">1</span>b <span class="number">24</span> <span class="number">42</span> <span class="number">24</span> <span class="number">52</span> <span class="number">24</span> <span class="number">69</span> <span class="number">24</span> <span class="number">2</span>c <span class="number">24</span> <span class="number">4</span><span class="operator">a</span> <span class="number">1</span>b <span class="number">28</span> <span class="number">42</span>
</code></pre><p><strong>EUC-JP</strong></p>
<p>EUC-JP 编码对应的字符集是 JIS X 0212，比之前的 JIS X 0201 和 JIS X 0208 大得多。这次「Ä」能够正确编码了。两个变音的拉丁字符被分别编码成三个字节；汉字和假名则是两个字节。</p>
<pre><code><span class="number">4</span>c <span class="number">61</span> <span class="number">6</span>e <span class="number">67</span> <span class="number">75</span> <span class="number">61</span> <span class="number">67</span> <span class="number">65</span>
<span class="number">8f</span> aa a3 <span class="number">20</span> <span class="number">8f</span> ab a1
c6 fc cb dc b8 ec
a4 d2 a4 e9 a4 ac a4 ca
</code></pre><p>从这里可以看到，UTF-8 编码汉字和假名需要用到三个字节。因此用 UTF-8 编码来处理文档，得到的文件体积要大上不少。同时，旧有的编码沿用多年，惯性很大。因此 UTF-8 编码在日本用了很多年才得以推广。</p>
<h2 id=" 我的计算机在用什么编码？">我的计算机在用什么编码？</h2>
<p>这取决于你的计算机操作系统。</p>
<ul>
<li>Linux: 大多数情况下，Linux 系统使用 UTF-8 编码。在终端里执行 <code>locale</code> 命令，输出结果中的 <code>LC_CTYPE</code> 字段里可以看到系统语言和使用编码的信息。比如，<code>en_US.utf8</code>。</li>
<li>Mac: 在 OS X 之前，Mac 使用的是苹果公司修改的 SJIS 版本，其名为 MacJapanese。从 OS X 开始，Mac 使用的是 UTF-8。</li>
<li>Windows: 老版本使用 M$ 家修改的 SJIS 版本，其名为 CP932 （代码页 932，简体中文系统则是 CP936)。不过，新版本的 Windows 也有可能使用 UTF-8。</li>
<li>BSD: 据我所知，用的是 UTF-8。</li>
</ul>
<h2 id=" 小结 ">小结</h2>
<p>在 LaTeX 里些日文文档之前，你先要确定你使用的是什么编码。不同的 TeX 引擎对编码支持的情况不同，你应该根据需要选择合适的编码和 TeX 引擎。目前被 TeX 引擎支持最好的编码（译注：原文是字符集）是 UTF-8。新版本的 pTeX 接受 UTF-8 编码；upTeX, XeTeX, LuaTeX 原生支持 UTF-8 编码；使用 BXcjkjatype 时，也应当使用 UTF-8 编码。</p>
<p>不过，不少老版本的文档使用 SJIS 编码。此时你应该使用 pTeX，用 pLaTeX 来编译；或者将他们转换为 UTF-8 编码后使用。</p>
<h2 id=" 关于 _\_ 和 _￥">关于 \ 和 ￥</h2>
<p>以下内容来自维基百科 <a href="http://en.wikipedia.org/wiki/Shift_JIS" target="_blank">ShiftJIS</a> 词条：</p>
<blockquote>
<p>The single-byte characters 0x00 to 0x7F match the ASCII encoding, except for a yen sign (U+00A5) at 0x5C and an overline (U+203E) at 0x7E in place of the ASCII character set’s backslash and tilde respectively.</p>
</blockquote>
<p>也就是说，在 SJIS 中，符号「¥」的编码与 ASCII 里的反斜线「\」的编码相同，都是 0x5C；与此同时，TeX 将 0x5C 当做是转义符。于是，在使用 SJIS 编码的计算机里，TeX 控制序列就都变成了类似 <code>¥hfill</code> 的样子。</p>
<p>下一篇文章，我们将正式开始编写 LaTeX 代码！</p>
<h2 id=" 译者续 ">译者续</h2>
<p>SJIS 在日本的地位和 GBK 在中国的地位差不多。在早期的 Windows 系统里，使用的 CP936 与 GBK 几乎相同。同时，中文 LaTeX 早期的支持方式也都是基于 GBK 编码的。</p>
<p>为了避免不必要的麻烦，我们的口号是：「<strong>珍爱生命，远离 GBK</strong>」。</p>
]]></content>
    <summary type="html"><![CDATA[<blockquote>
<p>本文为译文，原文载于<a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-2-characters-and-encodings/" target="_blank">这里</a>。欢迎关注本系列的文章。</p>
</blockquote>
<p><a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-1-introduction/" target="_blank">上一篇文章</a>（<a href="http://liam0205.me/2014/12/07/ptex-intro-and-tutorial-01/">译文</a>）简单介绍了在 LaTeX 中排版日文的一些情况，今次我们会探讨一些关于字符和编码的技术细节。</p>
<p><img src="/images/pTeX-intro/nihongo-latex.jpg" alt=""></p>
]]></summary>
    
      <category term="pTeX" scheme="http://liam0205.me/tags/pTeX/"/>
    
      <category term="Encoding" scheme="http://liam0205.me/tags/Encoding/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[日文 LaTeX 系统介绍 - 简介]]></title>
    <link href="http://liam0205.me/2014/12/07/ptex-intro-and-tutorial-01/"/>
    <id>http://liam0205.me/2014/12/07/ptex-intro-and-tutorial-01/</id>
    <published>2014-12-07T12:29:35.000Z</published>
    <updated>2014-12-07T14:29:59.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>本文为译文，原文载于<a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-1-introduction/" target="_blank">这里</a>。尽请关注本系列的文章。</p>
</blockquote>
<p>对于日本人来说，在 LaTeX 里面写日文很简单。但是由于文档的缺乏，外国人（相对日本）想要这样做就不容易了。更何况日语里面会混合罗马字母、假名、汉字。</p>
<p>这里我想总结一下我自己写日文 LaTeX 文档的经验。这些经验一方面来自我自己的实践，另一方面来自我的日本朋友的各种帮助。系列文章的第一部分简介了日文排版的一些情况，特别是关于 TeX 的介绍。在这里，我会对用于排版日文的 TeX 引擎和宏包做一个简单的比较。</p>
<a id="more"></a>

<h2 id=" 日文书写系统 ">日文书写系统</h2>
<p>日文中至少有四种书写系统：</p>
<ul>
<li>罗马字母</li>
<li>平假名：平假名共有 45 个，一般来说用于连接汉字。</li>
<li>片假名：片假名和平假名一一对应，一般用来音译外文。</li>
<li>日文汉字：来自中文的表意文字，书面语里有很多汉字。</li>
</ul>
<p>通常来说，日文文章里这四种书写系统会混杂在一起。下面的截图来自日文<a href="http://ja.wikipedia.org/wiki/ メインページ " target="_blank">维基百科</a>的「<a href="http://ja.wikipedia.org/wiki/ 日本 " target="_blank">日本</a>」词条。</p>
<p><img src="/images/pTeX-intro/Japanese-Text-Example.png" alt=" 截图：日文维基百科的「日本」词条 "></p>
<p>日文书写系统的的规则繁复。Haruhiko Okumura (奥村 晴彦) 先生对此有过一个不错的<a href="http://ajt.ktug.org/2008/0201okumura.pdf" target="_blank">介绍</a>；如果你想了解详细的规则，可以看<a href="http://www.w3.org/TR/jlreq/" target="_blank">这里</a>。TeX 本身并没有支持这些规则，于是 1987 年 NTT 的 Yasuki Saito (斉藤 康己) 先生编写了 NTT jTeX 这个引擎；1990 年，<a href="http://asciimw.jp/" target="_blank">ASCII 公司</a> 的 Shunji Ohno (大野 俊治) 先生和 Ryoichi Kurasawa (倉沢 良一) 先生修改了 NTT jTeX，增加了出版业所必须的竖排功能，命名为 pTeX (publishing TeX)。对此，Okumura 先生的文章里有详细的叙述。</p>
<h2 id=" 日文排版 ">日文排版</h2>
<p>日本自己开发了 pTeX，但这些年也有其他的一些 TeX 引擎可以用来排版日文。据我所知，有以下一些。</p>
<ul>
<li>e(p)(la)tex: 从原始的 pTeX 而来，增加了 e-TeX 的补丁以适应现代 LaTeX 的需要</li>
<li>up(la)tex: 同样从原始的 pTeX 发展而来，增加了 e-TeX 的补丁并增加了 UTF-8 编码支持</li>
<li>xe(la)tex: 另一个系统，同样支持 UTF-8 编码以及其他一些先进的技术</li>
<li>pdf(la)tex with CJK package: 支持中日韩文字，但已过时</li>
<li>pdf(la)tex with bxcjkjatype package: 一个易用的新宏包，有一些功能上的限制</li>
<li>lua(la)tex with luatex-ja package: 最新的日文支持方式，提供了不少优秀的特性</li>
</ul>
<h2 id=" 需求 ">需求</h2>
<p>在 LaTeX 里书写日文有以下需求。</p>
<ul>
<li>e-TeX 原语：e-TeX 是原始 TeX 的扩展，后逐渐成为主流，现在它的原语成为 LaTeX 强制要求的一部分</li>
<li>日文排版禁则：如前所述</li>
<li>竖排：许多非技术文本都会用到竖排</li>
<li>UTF-8 支持：pTeX 使用的编码不大好，有不少问题，现代计算机大都使用 UTF-8 编码</li>
<li>能够使用商业字体：在文章里能够自由切换字体</li>
<li>插图支持</li>
</ul>
<p>在这里，pTeX 不支持 e-TeX、UTF-8 编码，插图功能孱弱；e-pTeX 完善了 e-TeX 支持，但仍不支持 UTF-8 编码且插图功能依旧孱弱；upTeX 又克服了 UTF-8 编码支持的问题；XeTeX 对竖排的支持能力有限；pdfTeX + CJK 对日文禁则处理不好，也不支持竖排；pdfTeX + bxcjkjatype 对日文禁则处理不好，不支持竖排，也无法比较好地处理商业字体；LuaTeX + LuaTeX-ja 对竖排的支持不甚良好。</p>
<h2 id="（至今为止的）结论 ">（至今为止的）结论</h2>
<p>最近我都在使用 LuaTeX-ja，以下是<strong>我</strong>对此的一些总结。</p>
<ul>
<li>(u)ptex: 如果你想要竖排功能，这是唯一的选择；此外，由于 pTeX 系源自日本，它对日文排版禁则的支持最好</li>
<li>xe(la)tex: 目前功能相对完善的宏包是 <code>xeCJK</code>，但其实只是对中文支持良好；日本有同好对此做了扩展，效果一般</li>
<li>pdf(la)tex + CJK: 过时了，不推荐</li>
<li>pdf(la)tex + bxcjkjatype: 很好用，但是有一个很重要缺点：所有非 ASCII 字符都被当做汉字对待</li>
<li>luatexja: 最打动我的宏包，强烈推荐。</li>
</ul>
<p>下一篇文章里我会介绍一下各种方式底下的最简日文示例。</p>
<p>谢谢！</p>
<h2 id=" 译者续 ">译者续</h2>
<p>马起园 (Clerk Ma) 的 pTeX-ng 是下一代的 pTeX。pTeX-ng 从 Y&amp;Y TeX 发展而来，是纯 C 编写的 TeX 引擎。它带有 e-TeX, pTeX 的补丁，并原生支持 Unicode 编码，对字体支持良好，并且能够直接输出 PDF 文档。pTeX-ng 的前景十分喜人。</p>
]]></content>
    <summary type="html"><![CDATA[<blockquote>
<p>本文为译文，原文载于<a href="http://www.preining.info/blog/2014/12/writing-japanese-in-latex-part-1-introduction/" target="_blank">这里</a>。尽请关注本系列的文章。</p>
</blockquote>
<p>对于日本人来说，在 LaTeX 里面写日文很简单。但是由于文档的缺乏，外国人（相对日本）想要这样做就不容易了。更何况日语里面会混合罗马字母、假名、汉字。</p>
<p>这里我想总结一下我自己写日文 LaTeX 文档的经验。这些经验一方面来自我自己的实践，另一方面来自我的日本朋友的各种帮助。系列文章的第一部分简介了日文排版的一些情况，特别是关于 TeX 的介绍。在这里，我会对用于排版日文的 TeX 引擎和宏包做一个简单的比较。</p>
]]></summary>
    
      <category term="pTeX" scheme="http://liam0205.me/tags/pTeX/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 LaTeX 里定义一个类似 proof 的环境]]></title>
    <link href="http://liam0205.me/2014/12/03/how-to-define-a-proof-like-environment/"/>
    <id>http://liam0205.me/2014/12/03/how-to-define-a-proof-like-environment/</id>
    <published>2014-12-03T06:12:57.000Z</published>
    <updated>2014-12-03T06:44:12.000Z</updated>
    <content type="html"><![CDATA[<p>美国数学协会（AMS）是 TeX 发展中的一支重要的力量。AMS 定义的 <code>proof</code> 环境非常好用，能在证明结束的末尾，自动添加一个「证毕」的符号。</p>
<p>有时我们需要类似的环境，比如<a href="http://bbs.ctex.org/forum.php?mod=viewthread&amp;tid=79516" target="_blank">这里</a>的题主希望用两个环境区分「证明」和「解答」，并且都需要自动添加结束符号。这时我们可以仿照 <code>amsthm</code> 宏包的做法，自己定义一套环境。</p>
<a id="more"></a>

<p><code>proof</code> 环境的原始定义是这样的：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="command">\newenvironment</span><span class="special">{</span>proof<span class="special">}</span><span class="special">[</span>1<span class="special">]</span><span class="special">[</span><span class="command">\proofname</span><span class="special">]</span><span class="special">{</span><span class="command">\par</span>
  <span class="command">\pushQED</span><span class="special">{</span><span class="command">\qed</span><span class="special">}</span><span class="comment">%</span>
  <span class="command">\normalfont</span> <span class="command">\topsep</span>6<span class="command">\p</span>@<span class="command">\@</span>plus6<span class="command">\p</span>@<span class="command">\relax</span>
  <span class="command">\trivlist</span>
  <span class="command">\item</span><span class="special">[</span><span class="command">\hskip</span><span class="command">\labelsep</span>
        <span class="command">\itshape</span>
    <span class="special">#</span>1<span class="command">\@</span>addpunct<span class="special">{</span>.<span class="special">}</span><span class="special">]</span><span class="command">\ignorespaces</span>
<span class="special">}</span><span class="special">{</span><span class="command">\popQED</span><span class="command">\endtrivlist</span><span class="command">\@</span>endpefalse<span class="special">}</span>
</pre></td></tr></table></figure>



<p>这里 <code>\pushQED{\qed}</code> 把 <code>\qed</code> 压入了 QED 这个堆栈，然后在环境结束的地方，通过 <code>\popQED</code> 把压入堆栈的最后一个元素弹出来。这样的设计是非常合理的。比如，如果在证明的过程中，需要分别证明两个小的情形，这样就能按照次序依次给出证明的结束符号。此外，证明开始的标题通过 <code>\proofname</code> 来控制。</p>
<p>通过这些分析，我们知道定义一个新的环境，我们需要从两个方面入手。其一是 <code>\proofname</code> 的位置需要改变，其二是压入堆栈的内容需要更改。</p>
<p>下面的代码我们定义了一个名为 <code>\fooname</code> 的宏，来替代 <code>\proofname</code>。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="command">\providecommand</span><span class="special">{</span><span class="command">\fooname</span><span class="special">}</span><span class="special">{</span>Foo<span class="special">}</span>
</pre></td></tr></table></figure>



<p>下面的代码我们定义了名为 <code>\bxz</code> 的宏，来替换原本压入堆栈的 <code>\qed</code>。其中 <code>\bxz</code> 具体的符号内容用 <code>\bxzsymbol</code> 这个宏来控制。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="command">\DeclareRobustCommand</span><span class="special">{</span><span class="command">\bxz</span><span class="special">}</span><span class="special">{</span><span class="command">\ifmmode</span> <span class="command">\mathbxz</span>
  <span class="command">\else</span>
    <span class="command">\leavevmode</span><span class="command">\unskip</span><span class="command">\penalty</span>9999 <span class="command">\hbox</span><span class="special">{</span><span class="special">}</span><span class="command">\nobreak</span><span class="command">\hfill</span>
    <span class="command">\quad</span><span class="command">\hbox</span><span class="special">{</span><span class="command">\bxzsymbol</span><span class="special">}</span><span class="comment">%</span>
  <span class="command">\fi</span>
<span class="special">}</span>
<span class="command">\newcommand</span><span class="special">{</span><span class="command">\mathbxz</span><span class="special">}</span><span class="special">{</span><span class="command">\quad</span><span class="command">\hbox</span><span class="special">{</span><span class="command">\bxzsymbol</span><span class="special">}</span><span class="special">}</span>
<span class="command">\providecommand</span><span class="special">{</span><span class="command">\bxzsymbol</span><span class="special">}</span><span class="special">{</span><span class="command">\fbox</span><span class="special">{</span><span class="command">\footnotesize</span> B.X.Z<span class="special">}</span><span class="special">}</span>
</pre></td></tr></table></figure>



<p>最后，重新定义一个名为 <code>foo</code> 的环境。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="command">\newenvironment</span><span class="special">{</span>foo<span class="special">}</span><span class="special">[</span>1<span class="special">]</span><span class="special">[</span><span class="command">\fooname</span><span class="special">]</span><span class="special">{</span><span class="command">\par</span>
  <span class="command">\pushQED</span><span class="special">{</span><span class="command">\bxz</span><span class="special">}</span><span class="comment">%</span>
  <span class="command">\normalfont</span> <span class="command">\topsep</span>6<span class="command">\p</span>@<span class="command">\@</span>plus6<span class="command">\p</span>@<span class="command">\relax</span>
  <span class="command">\trivlist</span>
  <span class="command">\item</span><span class="special">[</span><span class="command">\hskip</span><span class="command">\labelsep</span>
        <span class="command">\itshape</span>
    <span class="special">#</span>1<span class="command">\@</span>addpunct<span class="special">{</span>.<span class="special">}</span><span class="special">]</span><span class="command">\ignorespaces</span>
<span class="special">}</span><span class="special">{</span><span class="command">\popQED</span><span class="command">\endtrivlist</span><span class="command">\@</span>endpefalse<span class="special">}</span>
</pre></td></tr></table></figure>



<p>完整的测试代码如下：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>amsthm<span class="special">}</span>
<span class="command">\makeatletter</span>
<span class="command">\DeclareRobustCommand</span><span class="special">{</span><span class="command">\bxz</span><span class="special">}</span><span class="special">{</span><span class="command">\ifmmode</span> <span class="command">\mathbxz</span>
  <span class="command">\else</span>
    <span class="command">\leavevmode</span><span class="command">\unskip</span><span class="command">\penalty</span>9999 <span class="command">\hbox</span><span class="special">{</span><span class="special">}</span><span class="command">\nobreak</span><span class="command">\hfill</span>
    <span class="command">\quad</span><span class="command">\hbox</span><span class="special">{</span><span class="command">\bxzsymbol</span><span class="special">}</span><span class="comment">%</span>
  <span class="command">\fi</span>
<span class="special">}</span>
<span class="command">\newcommand</span><span class="special">{</span><span class="command">\mathbxz</span><span class="special">}</span><span class="special">{</span><span class="command">\quad</span><span class="command">\hbox</span><span class="special">{</span><span class="command">\bxzsymbol</span><span class="special">}</span><span class="special">}</span>
<span class="command">\newenvironment</span><span class="special">{</span>foo<span class="special">}</span><span class="special">[</span>1<span class="special">]</span><span class="special">[</span><span class="command">\fooname</span><span class="special">]</span><span class="special">{</span><span class="command">\par</span>
  <span class="command">\pushQED</span><span class="special">{</span><span class="command">\bxz</span><span class="special">}</span><span class="comment">%</span>
  <span class="command">\normalfont</span> <span class="command">\topsep</span>6<span class="command">\p</span>@<span class="command">\@</span>plus6<span class="command">\p</span>@<span class="command">\relax</span>
  <span class="command">\trivlist</span>
  <span class="command">\item</span><span class="special">[</span><span class="command">\hskip</span><span class="command">\labelsep</span>
        <span class="command">\itshape</span>
    <span class="special">#</span>1<span class="command">\@</span>addpunct<span class="special">{</span>.<span class="special">}</span><span class="special">]</span><span class="command">\ignorespaces</span>
<span class="special">}</span><span class="special">{</span><span class="command">\popQED</span><span class="command">\endtrivlist</span><span class="command">\@</span>endpefalse<span class="special">}</span>
<span class="command">\providecommand</span><span class="special">{</span><span class="command">\bxzsymbol</span><span class="special">}</span><span class="special">{</span><span class="command">\fbox</span><span class="special">{</span><span class="command">\footnotesize</span> B.X.Z<span class="special">}</span><span class="special">}</span>
<span class="command">\providecommand</span><span class="special">{</span><span class="command">\fooname</span><span class="special">}</span><span class="special">{</span>Foo<span class="special">}</span>
<span class="command">\makeatother</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>proof<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>foo<span class="special">}</span>
  The foo goes here.
<span class="command">\end</span><span class="special">{</span>foo<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>foo<span class="special">}</span>
  <span class="command">\[</span>
    E = mc^<span class="special">{</span>2<span class="special">}</span>.<span class="command">\qedhere</span>
  <span class="command">\]</span>
<span class="command">\end</span><span class="special">{</span>foo<span class="special">}</span>
This is the conclusion that we need.
<span class="command">\end</span><span class="special">{</span>proof<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p><img src="/images/LaTeX/redefine-proof.png" alt=" 测试代码截图 "></p>
]]></content>
    <summary type="html"><![CDATA[<p>美国数学协会（AMS）是 TeX 发展中的一支重要的力量。AMS 定义的 <code>proof</code> 环境非常好用，能在证明结束的末尾，自动添加一个「证毕」的符号。</p>
<p>有时我们需要类似的环境，比如<a href="http://bbs.ctex.org/forum.php?mod=viewthread&amp;tid=79516" target="_blank">这里</a>的题主希望用两个环境区分「证明」和「解答」，并且都需要自动添加结束符号。这时我们可以仿照 <code>amsthm</code> 宏包的做法，自己定义一套环境。</p>
]]></summary>
    
      <category term="Proof" scheme="http://liam0205.me/tags/Proof/"/>
    
      <category term="Environment" scheme="http://liam0205.me/tags/Environment/"/>
    
      <category term="Macros" scheme="http://liam0205.me/tags/Macros/"/>
    
      <category term="AMS" scheme="http://liam0205.me/tags/AMS/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 LaTeX 中使用含有中文的 PDF 书签避免乱码的正确姿势]]></title>
    <link href="http://liam0205.me/2014/11/22/latex-pdf-cjk-bookmarks/"/>
    <id>http://liam0205.me/2014/11/22/latex-pdf-cjk-bookmarks/</id>
    <published>2014-11-22T08:57:54.000Z</published>
    <updated>2014-12-03T15:33:41.000Z</updated>
    <content type="html"><![CDATA[<p>LaTeX 的 <code>hyperref</code> 宏包能够在 PDF 文件里生成 PDF 书签，然而「书签乱码」是困扰很多 LaTeX 使用者的麻烦问题。</p>
<p>早年李树钧和张林波老师共同开发了名为 <a href="http://www.hooklee.com/tex/gbk2uni.zip" target="_blank">gbk2uni</a> 的小工具，用以将 <code>filename.out</code> 中的 GBK 编码的字符转换成八进制数据；刘海洋和李清在 <a href="https://code.google.com/p/ctex-kit/" target="_blank"><code>ctex</code></a> 宏包 / 文档类对此做了处理，使得 <code>ctex</code> 宏包 / 文档类能够正确处理大部分的情况；后来李清编写了 <a href="http://www.ctan.org/pkg/xcjk2uni" target="_blank"><code>xCJK2uni</code></a> 宏包，使得在 pdfLaTeX 编译方式下用 <code>CJK</code> 的 GBK 编码模式也能正确输出 PDF 书签，而不必借用额外的工具。</p>
<p>这里对全部正确的方式做一个总结。</p>
<a id="more"></a>

<h2 id=" 推荐的方式 ">推荐的方式</h2>
<p>最好的办法是将中文支持和版式处理都交给 <code>ctex</code> 宏包 / 文档类，只需要开启 <code>hyperref</code> 选项即可。</p>
<p>适用情况</p>
<ul>
<li>UTF-8 + XeLaTeX（目前<strong>最最最最最最最最</strong>推荐的方式，看到它请星星眼）</li>
<li>UTF-8 + pdfLaTeX</li>
<li>UTF-8 + LaTeX - DVIPDFMx</li>
</ul>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">[</span>hyperref, UTF8<span class="special">]</span><span class="special">{</span>ctexart<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
UTF-8 编码，Xe<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span>/pdf<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span>/<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> - DVIPDFMx 编译。
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>





<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">[</span>hyperref, UTF8<span class="special">]</span><span class="special">{</span>ctex<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
UTF-8 编码，Xe<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span>/pdf<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span>/<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> - DVIPDFMx 编译。
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>适用情况（除非必要，不要使用 GBK 编码）</p>
<ul>
<li>GBK + LaTeX - DVIPDFMx</li>
<li>GBK + pdfLaTeX （ctex 宏包 2.x 版本支持，当前的 1.x 版本暂不支持）</li>
</ul>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">[</span>hyperref, GBK<span class="special">]</span><span class="special">{</span>ctexart<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
GBK 编码，pdf<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span>/<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> - DVIPDFMx 编译。
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>





<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">[</span>hyperref, GBK<span class="special">]</span><span class="special">{</span>ctex<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
GBK 编码，pdf<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span>/<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> - DVIPDFMx 编译。
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<h2 id=" 折腾星人的方式 ">折腾星人的方式</h2>
<p>如果不想使用 <code>ctex</code> 宏包 / 文档类，也可以选择自己写代码进行中文支持。这时候需要做额外的代码配置，保证 PDF 书签不会乱码。</p>
<p>适用情况</p>
<ul>
<li>UTF-8 + XeLaTeX</li>
</ul>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>xeCJK<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>hyperref<span class="special">}</span>
<span class="command">\setCJKmainfont</span><span class="special">{</span>SimSun<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
UTF-8 编码，Xe<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> 编译。
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>适用情况</p>
<ul>
<li>UTF-8 + pdfLaTeX</li>
</ul>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>CJKutf8<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>hyperref<span class="special">}</span>
<span class="command">\hypersetup</span><span class="special">{</span>unicode<span class="special">}</span>
<span class="command">\AtBeginShipoutFirst</span><span class="special">{</span><span class="command">\input</span><span class="special">{</span>zhwinfonts.tex<span class="special">}</span><span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>CJK*<span class="special">}</span><span class="special">{</span>UTF8<span class="special">}</span><span class="special">{</span>song<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
UTF-8<span class="special">~</span>编码，pdf<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span><span class="special">~</span>编译。
<span class="command">\clearpage</span>
<span class="command">\end</span><span class="special">{</span>CJK*<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>适用情况</p>
<ul>
<li>UTF-8 + LaTeX - DVIPDFMx</li>
</ul>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>CJKutf8<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">[</span>dvipdfmx<span class="special">]</span><span class="special">{</span>hyperref<span class="special">}</span>
<span class="command">\hypersetup</span><span class="special">{</span>unicode<span class="special">}</span>
<span class="command">\AtBeginShipoutFirst</span><span class="special">{</span><span class="command">\input</span><span class="special">{</span>zhwinfonts.tex<span class="special">}</span><span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>CJK*<span class="special">}</span><span class="special">{</span>UTF8<span class="special">}</span><span class="special">{</span>song<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
UTF-8<span class="special">~</span>编码，<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> - DVIPDFMx<span class="special">~</span>编译。
<span class="command">\clearpage</span>
<span class="command">\end</span><span class="special">{</span>CJK*<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>适用情况</p>
<ul>
<li>GBK + pdfLaTeX （谁特么还在用 GBK 啊！摔！）</li>
</ul>
<p>请大家将感谢信发送至 <a href="http://www.zhihu.com/people/qinglee" target="_blank">李清</a> 的邮箱~</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>CJK<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>xCJK2uni<span class="special">}</span> <span class="comment">% 请大家将感谢信发送至 李清 的邮箱~ : )</span>
<span class="command">\usepackage</span><span class="special">{</span>hyperref<span class="special">}</span>
<span class="command">\AtBeginShipoutFirst</span><span class="special">{</span><span class="command">\input</span><span class="special">{</span>zhwinfonts.tex<span class="special">}</span><span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>CJK*<span class="special">}</span><span class="special">{</span>GBK<span class="special">}</span><span class="special">{</span>song<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
GBK<span class="special">~</span>编码，pdf<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span><span class="special">~</span>编译。
<span class="command">\clearpage</span>
<span class="command">\end</span><span class="special">{</span>CJK*<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<p>适用情况</p>
<ul>
<li>GBK + LaTeX - DVIPDFMx（谁特么还在用 GBK 啊！摔！）</li>
</ul>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>CJK<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">[</span>dvipdfmx<span class="special">]</span><span class="special">{</span>hyperref<span class="special">}</span>
<span class="command">\hypersetup</span><span class="special">{</span>CJKbookmarks<span class="special">}</span>
<span class="command">\AtBeginShipoutFirst</span><span class="special">{</span><span class="command">\input</span><span class="special">{</span>zhwinfonts.tex<span class="special">}</span><span class="special">}</span>
<span class="command">\AtBeginShipoutFirst</span><span class="special">{</span><span class="command">\special</span><span class="special">{</span>pdf:tounicode GBK-EUC-UCS2<span class="special">}</span><span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>CJK*<span class="special">}</span><span class="special">{</span>GBK<span class="special">}</span><span class="special">{</span>song<span class="special">}</span>
<span class="command">\section</span><span class="special">{</span>中文书签不会乱码<span class="special">}</span>
GBK<span class="special">~</span>编码，<span class="command">\LaTeX</span><span class="special">{</span><span class="special">}</span> - DVIPDFMx<span class="special">~</span>编译。
<span class="command">\clearpage</span>
<span class="command">\end</span><span class="special">{</span>CJK*<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>






]]></content>
    <summary type="html"><![CDATA[<p>LaTeX 的 <code>hyperref</code> 宏包能够在 PDF 文件里生成 PDF 书签，然而「书签乱码」是困扰很多 LaTeX 使用者的麻烦问题。</p>
<p>早年李树钧和张林波老师共同开发了名为 <a href="http://www.hooklee.com/tex/gbk2uni.zip" target="_blank">gbk2uni</a> 的小工具，用以将 <code>filename.out</code> 中的 GBK 编码的字符转换成八进制数据；刘海洋和李清在 <a href="https://code.google.com/p/ctex-kit/" target="_blank"><code>ctex</code></a> 宏包 / 文档类对此做了处理，使得 <code>ctex</code> 宏包 / 文档类能够正确处理大部分的情况；后来李清编写了 <a href="http://www.ctan.org/pkg/xcjk2uni" target="_blank"><code>xCJK2uni</code></a> 宏包，使得在 pdfLaTeX 编译方式下用 <code>CJK</code> 的 GBK 编码模式也能正确输出 PDF 书签，而不必借用额外的工具。</p>
<p>这里对全部正确的方式做一个总结。</p>
]]></summary>
    
      <category term="PDF" scheme="http://liam0205.me/tags/PDF/"/>
    
      <category term="Bookmarks" scheme="http://liam0205.me/tags/Bookmarks/"/>
    
      <category term="CJK" scheme="http://liam0205.me/tags/CJK/"/>
    
      <category term="Error Codes" scheme="http://liam0205.me/tags/Error%20Codes/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为 MacTeX 配置中文支持]]></title>
    <link href="http://liam0205.me/2014/11/02/latex-mactex-chinese-support/"/>
    <id>http://liam0205.me/2014/11/02/latex-mactex-chinese-support/</id>
    <published>2014-11-02T10:07:28.000Z</published>
    <updated>2014-11-25T11:47:39.000Z</updated>
    <content type="html"><![CDATA[<p>最近有人问到如何在 MacTeX 里配置中文支持，这里一并回答。</p>
<p>目前来说，结合 <code>xeCJK</code> 宏包使用 XeLaTeX 编译，应该是最方便的方式了。</p>
<p>XeLaTeX 要求 <code>.tex</code> 文档保存为 UTF-8 编码。所以要做的事情只有两件：</p>
<ul>
<li>配置一个 UTF-8 的编辑环境；</li>
<li>用 <code>xeCJK</code> 的语法选择合适的字体。</li>
</ul>
<a id="more"></a>

<h2 id=" 配置 _UTF-8_ 的编辑环境 ">配置 UTF-8 的编辑环境</h2>
<p>MacTeX 自带了名为 TeXshop 的编辑器，这里以它为例配置 UTF-8 的编辑环境。其他编辑器也有类似配置。</p>
<p>打开 TeXshop，按下 <code>cmd + ,</code> 打开偏好设置。在「源代码」标签下找到编码设置，调整为 UTF-8。然后单击「好」保存即可。</p>
<p><img src="/attachment/images/MacTeX_xeCJK/01.png" alt=" 调整 TeXshop 的编码 "></p>
<h2 id=" 查找字体信息 ">查找字体信息</h2>
<p>XeTeX 在 Mac OS X 下的行为和 Windows/Linux 下不大一样。Mac 底下，XeTeX 并不使用 <code>fontconfig</code> 库来搜索字体，所以我们没法在终端里通过 <code>fc-list</code> 命令来查看可用的字体列表。不过 Mac 里提供了名为「字体册」的程序，来列出系统中所有可用的字体信息。</p>
<p>其实这样的设计挺讨厌的，TeX Live 自带了许多开源字体，因此没有办法很好地使用。必须用字体名而不是字族名来调用这些字体，实在是不太方便。当然，如果又需要，我们可以把 TeX 里自带的这些开源字体用硬链接的方式，添加到 Mac 的字体目录下。</p>
<p>打开字体册程序，找到需要的字体信息：</p>
<p><img src="/attachment/images/MacTeX_xeCJK/02.png" alt=" 在字体册中查找字体信息 "></p>
<p>这里的 PostScript 名称就是我们需要的信息，我们记下华文宋体的名字：「STSong」。你还可以按需找到其他字体的名字，比如华文中宋、华文楷体、华文黑体等字体的名字。</p>
<h2 id=" 用 _xeCJK_ 的语法配置字体 ">用 xeCJK 的语法配置字体</h2>
<p>使用下列代码，配置中文字体。</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="command">\usepackage</span><span class="special">{</span>xeCJK<span class="special">}</span>
<span class="command">\setCJKmainfont</span><span class="special">[</span>BoldFont=STZhongsong, ItalicFont=STKaiti<span class="special">]</span><span class="special">{</span>STSong<span class="special">}</span>
<span class="command">\setCJKsansfont</span><span class="special">[</span>BoldFont=STHeiti<span class="special">]</span><span class="special">{</span>STXihei<span class="special">}</span>
<span class="command">\setCJKmonofont</span><span class="special">{</span>STFangsong<span class="special">}</span>
</pre></td></tr></table></figure>



<p>这里，</p>
<ul>
<li>文档中文主字体是华文宋体，对应的 bfseries 字体是华文中宋，对应的 itshape 字体是华文楷体；</li>
<li>文档的「无衬线」中文字体是华文新黑，对应的 bfseries 是华文黑体；</li>
<li>文档的「等宽」中文字体是华文仿宋。</li>
</ul>
<p>完整代码的编译效果截图如下：</p>
<p><img src="/attachment/images/MacTeX_xeCJK/03.png" alt=" 编译效果 "></p>
<h2 id=" 额外的工作 ">额外的工作</h2>
<p>尽管这一节的操作有些复杂，而且对于中文支持来说是可选的，但是依旧推荐按步骤操作。</p>
<p><code>xeCJK</code> 之解决了中文支持问题，以及一些关于标点的处理，并没有提供和中文版式相关的解决方案。<code>ctex</code> 宏包和文档类封装了 xeCJK，同时提供了中文版式的相关支持。不过 <code>ctex</code> 的默认配置是为 Windows 平台配置的，Mac 用户需要对默认配置做一些修改。具体如下。</p>
<p>打开终端，键入命令：</p>
<figure class="highlight shell"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="built_in">cd</span> /usr/local/texlive/texmf-local/tex/latex/
<span class="built_in">sudo</span> mkdir ./ctex/
<span class="built_in">sudo</span> mkdir ./ctex/cfg/
<span class="built_in">cd</span> ./ctex/cfg/
<span class="built_in">sudo</span> vim ctexopts.cfg
</pre></td></tr></table></figure>



<p>复制以下内容：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="command">\ExecuteOptions</span><span class="special">{</span>UTF8<span class="special">}</span>
<span class="command">\ExecuteOptions</span><span class="special">{</span>nofonts<span class="special">}</span>

<span class="command">\endinput</span>
</pre></td></tr></table></figure>



<p>切换回到终端窗口，按 <code>i</code> 进入编辑模式，按 <code>cmd + v</code> 粘贴，按 <code>esc</code> 退出编辑模式，输入 <code>:x</code> 保存退出（半角冒号紧接着 x）。<br>在终端窗口继续操作，键入命令：</p>
<figure class="highlight shell"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="built_in">sudo</span> vim ctex.cfg
</pre></td></tr></table></figure>



<p>复制以下内容：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="command">\RequirePackage</span><span class="special">{</span>ifxetex<span class="special">}</span>
<span class="command">\ifxetex</span>
  <span class="command">\setCJKmainfont</span><span class="special">[</span>BoldFont=STZhongsong, ItalicFont=STKaiti<span class="special">]</span><span class="special">{</span>STSong<span class="special">}</span>
  <span class="command">\setCJKsansfont</span><span class="special">[</span>BoldFont=STHeiti<span class="special">]</span><span class="special">{</span>STXihei<span class="special">}</span>
  <span class="command">\setCJKmonofont</span><span class="special">{</span>STFangsong<span class="special">}</span>

  <span class="command">\newCJKfontfamily</span><span class="special">[</span>stsong<span class="special">]</span><span class="command">\songti</span><span class="special">[</span>BoldFont=STZhongsong, ItalicFont=STKaiti<span class="special">]</span><span class="special">{</span>STSong<span class="special">}</span>
  <span class="command">\newCJKfontfamily</span><span class="special">[</span>sthei<span class="special">]</span><span class="command">\heiti</span><span class="special">[</span>BoldFont=STHeiti<span class="special">]</span><span class="special">{</span>STXihei<span class="special">}</span>
  <span class="command">\newCJKfontfamily</span><span class="special">[</span>stkai<span class="special">]</span><span class="command">\kaishu</span><span class="special">{</span>STKaiti<span class="special">}</span>
  <span class="command">\newCJKfontfamily</span><span class="special">[</span>stfang<span class="special">]</span><span class="command">\fangsong</span><span class="special">{</span>STFangsong<span class="special">}</span>
  <span class="command">\newCJKfontfamily</span><span class="special">[</span>stli<span class="special">]</span><span class="command">\lishu</span><span class="special">{</span>STLiti<span class="special">}</span>
<span class="command">\fi</span>
<span class="command">\endinput</span>
</pre></td></tr></table></figure>



<p>切换回到终端窗口，按 <code>i</code> 进入编辑模式，按 <code>cmd + v</code> 粘贴，按 <code>esc</code> 退出编辑模式，输入 <code>:x</code> 保存退出（半角冒号紧接着 x）。<br>在终端窗口继续操作，键入命令：</p>
<figure class="highlight shell"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="built_in">sudo</span> texhash
</pre></td></tr></table></figure>



<p>这里，</p>
<ul>
<li><code>ctexopts.cfg</code> 会在 <code>ctex</code> 宏包 / 文档类的选项定义之后被载入，我们启用了 <code>nofonts</code> 和 <code>UTF8</code> 这两个选项；</li>
<li><code>ctex.cfg</code> 则会在 <code>ctex</code> 宏包 / 文档类的结尾被载入，我们配置了字体；</li>
<li><code>texhash</code> 会刷新 TeX 的文件名数据库。</li>
</ul>
<p>至此，<code>ctex</code> 宏包 / 文档类在 Mac 里就可以正常工作了。测试截图如下：</p>
<p><img src="/attachment/images/MacTeX_xeCJK/04.png" alt=" 编译效果 "></p>
]]></content>
    <summary type="html"><![CDATA[<p>最近有人问到如何在 MacTeX 里配置中文支持，这里一并回答。</p>
<p>目前来说，结合 <code>xeCJK</code> 宏包使用 XeLaTeX 编译，应该是最方便的方式了。</p>
<p>XeLaTeX 要求 <code>.tex</code> 文档保存为 UTF-8 编码。所以要做的事情只有两件：</p>
<ul>
<li>配置一个 UTF-8 的编辑环境；</li>
<li>用 <code>xeCJK</code> 的语法选择合适的字体。</li>
</ul>
]]></summary>
    
      <category term="CJK" scheme="http://liam0205.me/tags/CJK/"/>
    
      <category term="MacTeX" scheme="http://liam0205.me/tags/MacTeX/"/>
    
      <category term="OS X" scheme="http://liam0205.me/tags/OS%20X/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[后会无期于后会有期的平凡之路]]></title>
    <link href="http://liam0205.me/2014/09/28/review-of-the-continent/"/>
    <id>http://liam0205.me/2014/09/28/review-of-the-continent/</id>
    <published>2014-09-28T14:04:12.000Z</published>
    <updated>2014-09-28T14:21:50.000Z</updated>
    <content type="html"><![CDATA[<p>我始终是认为，真正体会到的美好，不是一瞬间的事情，而是伴随美好到底的经历。于是我是很不喜欢「后会无期」这个词的，这种只能将美好放在记忆中的状态让我很不舒服。因为我总觉得记忆这种东西是带着一点悲凉和悲哀的色彩的。不论多么美好和美丽的事物，保存在记忆中都会随着时间慢慢被抹去。</p>
<p>我是第一次接触这种类型的电影，接触韩寒的作品是第二次（第一次是中学时代看过他写的《长安乱》）。记得和《长安乱》同时期还有一部很火热的小说，是郭敬明的《幻城》。两部小说我都是从同学处借来阅读的，先是看了《幻城》，然后才是《长安乱》。我很少看小说，当时感觉幻城这种类型的小说还蛮有意思的，但是直觉还是更喜欢长安乱。虽然我一直觉得没看懂长安乱写得是什么，而且到现在其实已经忘记了其中的内容。</p>
<a id="more"></a>

<p>和《长安乱》一样，后会无期这部电影也是有些「表意不明」的作品。于是每个人看到的东西都不一样吧。我曾经痴迷于另一部表意不明的作品，庵野秀明先生的 EVA。EVA 这部作品其实给人一种神神秘秘的感觉，从作品的设定到表达的世界观，都蛮奇怪的。有两年我十分痴迷，为此去学习了日语，去翻阅日文资料。然后在国内第一次完整整理了它的设定和世界观的文档，也写了很多自己的感想。不过后来再看这些文字，觉得有些矫情。于是慢慢也就不再写了，转而躲在屏幕背后，看这一批一批的人如何去体会 EVA。慢慢就会发现，其实所有人都在作品中寻找自己的身影，寻找适合自己的那个影子覆盖之处的光亮（希望）。</p>
<p>归因于最近的经历，我大概是以一种比较「麻木」的状态去看这电影的。当然这种麻木不是「不仁」，而是一种「嗯，这样也挺好的」这种接受一切的态度。这可能正好切合了韩寒想要表达的情感也未可知。</p>
<p>对这部电影，我自己的感受，其实就是那句西班牙语「Que Sera Sera」，也觉得这就是韩寒自己想传达出的意思。这句西语，应该是「Whatever will be」的意思。看起来有点消极，但是其实取决于个人选择的行为方式。电影中意外出现的那只小狗代表着电影世界里的真善美。这种「意外」代表着「无处不在」的可能性，正如世界的美好一样。电影的最后小狗「无意识」地选择了江河，反过来映衬了江河的选择：用自己的方式相信这个世界，相信这个世界的真善美。我觉得这就是所谓「平凡之路」，这不是读万卷书或者行万里路之后「悟」出来的路，而是内心向善，简单而平凡坚信的一条路。</p>
<p>简单地相信一些美好的东西，坚定地走着自己平凡的路。对比马浩汉希望振兴家乡旅游业的强烈愿望不同，这种平凡而坚定的信念，反而带给了江河一个不错的结局。而在这「出乎预料」的结局里，江河表现得还是一如既往地平凡：「导游」在宣传江河的作品的时候，画面中的江河不正是在平静地走着他的平凡之路吗……</p>
<p>这种接受世界、感受世界、行走在这个世界的行为方式，就是韩寒想传达的行为方式：不甘于平庸，回归于平凡，不脱离现实而又不服于现实。</p>
]]></content>
    <summary type="html"><![CDATA[<p>我始终是认为，真正体会到的美好，不是一瞬间的事情，而是伴随美好到底的经历。于是我是很不喜欢「后会无期」这个词的，这种只能将美好放在记忆中的状态让我很不舒服。因为我总觉得记忆这种东西是带着一点悲凉和悲哀的色彩的。不论多么美好和美丽的事物，保存在记忆中都会随着时间慢慢被抹去。</p>
<p>我是第一次接触这种类型的电影，接触韩寒的作品是第二次（第一次是中学时代看过他写的《长安乱》）。记得和《长安乱》同时期还有一部很火热的小说，是郭敬明的《幻城》。两部小说我都是从同学处借来阅读的，先是看了《幻城》，然后才是《长安乱》。我很少看小说，当时感觉幻城这种类型的小说还蛮有意思的，但是直觉还是更喜欢长安乱。虽然我一直觉得没看懂长安乱写得是什么，而且到现在其实已经忘记了其中的内容。</p>
]]></summary>
    
      <category term="Movie" scheme="http://liam0205.me/tags/Movie/"/>
    
      <category term="Han Han" scheme="http://liam0205.me/tags/Han%20Han/"/>
    
      <category term="The Continent" scheme="http://liam0205.me/tags/The%20Continent/"/>
    
      <category term="Literature and Social Sciences" scheme="http://liam0205.me/categories/Literature%20and%20Social%20Sciences/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Matplotlib 教程]]></title>
    <link href="http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/"/>
    <id>http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/</id>
    <published>2014-09-11T13:51:15.000Z</published>
    <updated>2014-09-11T14:29:52.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Matplotlib_ 教程 ">Matplotlib 教程</h2>
<blockquote>
<p>本文为译文，原文<a href="http://www.loria.fr/~rougier/teaching/matplotlib/" target="_blank">载于此</a>，译文<a href="http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/">原载于此</a>。本文欢迎转载，但请保留本段文字，尊重作者和译者的权益。谢谢。<code>: )</code></p>
</blockquote>
<h3 id=" 介绍 ">介绍</h3>
<p>Matplotlib 可能是 Python 2D- 绘图领域使用最广泛的套件。它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。这里将会探索 matplotlib 的常见用法。</p>
<a id="more"></a>

<h4 id="IPython_ 以及 _pylab_ 模式 ">IPython 以及 pylab 模式</h4>
<p><a href="http://ipython.org/" target="_blank">IPython</a> 是 Python 的一个增强版本。它在下列方面有所增强：命名输入输出、使用系统命令（shell commands）、排错（debug）能力。我们在命令行终端给 IPython 加上参数 <code>-pylab</code> （0.12 以后的版本是 <code>--pylab</code>）之后，就可以像 Matlab 或者 Mathematica 那样以交互的方式绘图。</p>
<h4 id="pylab">pylab</h4>
<p>pylab 是 matplotlib 面向对象绘图库的一个接口。它的语法和 Matlab 十分相近。也就是说，它主要的绘图命令和 Matlab 对应的命令有相似的参数。</p>
<h3 id=" 初级绘制 ">初级绘制</h3>
<p>这一节中，我们将从简到繁：先尝试用默认配置在同一张图上绘制正弦和余弦函数图像，然后逐步美化它。</p>
<p>第一步，是取得正弦函数和预先函数的值：</p>
<pre><code><span class="built_in">from</span> pylab import *

X = np.linspace(-np.<span class="constant">pi</span>, np.<span class="constant">pi</span>, <span class="number">256</span>,endpoint=True)
C,S = np.<span class="built_in">cos</span>(X), np.<span class="built_in">sin</span>(X)
</code></pre><p><code>X</code> 是一个 <code>numpy</code> 数组，包含了从 $-\pi$ 到 $+\pi$ 等间隔的 256 个值。<code>C</code> 和 <code>S</code> 则分别是这 256 个值对应的余弦和正弦函数值组成的 <code>numpy</code> 数组。</p>
<p>你可以在 IPython 的交互模式下测试代码，也可以下载代码（下载链接就是这些示例图），然后执行：</p>
<pre><code><span class="variable">$ </span>python exercise_1.py
</code></pre><h4 id=" 使用默认配置 ">使用默认配置</h4>
<p>Matplotlib 的默认配置都允许用户自定义。你可以调整大多数的默认配置：图片大小和分辨率（dpi）、线宽、颜色、风格、坐标轴、坐标轴以及网格的属性、文字与字体属性等。不过，matplotlib 的默认配置在大多数情况下已经做得足够好，你可能只在很少的情况下才会想更改这些默认配置。</p>
<pre><code><span class="built_in">from</span> pylab import *

X = np.linspace(-np.<span class="constant">pi</span>, np.<span class="constant">pi</span>, <span class="number">256</span>,endpoint=True)
C,S = np.<span class="built_in">cos</span>(X), np.<span class="built_in">sin</span>(X)

plot(X,C)
plot(X,S)

show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_1.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_1.png" alt=""></a></p>
<h4 id=" 默认配置的具体内容 ">默认配置的具体内容</h4>
<p>下面的代码中，我们展现了 matplotlib 的默认配置并辅以注释说明，这部分配置包含了有关绘图样式的所有配置。代码中的配置与默认配置完全相同，你可以在交互模式中修改其中的值来观察效果。</p>
<pre><code><span class="preprocessor"># 导入 matplotlib 的所有内容（nympy 可以用 np 这个名字来使用）</span>
from pylab import *

<span class="preprocessor"># 创建一个 8 * 6 点（point）的图，并设置分辨率为 80</span>
figure(figsize=(<span class="number">8</span>,<span class="number">6</span>), dpi=<span class="number">80</span>)

<span class="preprocessor"># 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）</span>
subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)

X = np.linspace(-np.pi, np.pi, <span class="number">256</span>,endpoint=True)
C,S = np.cos(X), np.sin(X)

<span class="preprocessor"># 绘制余弦曲线，使用蓝色的、连续的、宽度为 1 （像素）的线条</span>
plot(X, C, color=<span class="string">"blue"</span>, linewidth=<span class="number">1.0</span>, linestyle=<span class="string">"-"</span>)

<span class="preprocessor"># 绘制正弦曲线，使用绿色的、连续的、宽度为 1 （像素）的线条</span>
plot(X, S, color=<span class="string">"green"</span>, linewidth=<span class="number">1.0</span>, linestyle=<span class="string">"-"</span>)

<span class="preprocessor"># 设置横轴的上下限</span>
xlim(-<span class="number">4.0</span>,<span class="number">4.0</span>)

<span class="preprocessor"># 设置横轴记号</span>
xticks(np.linspace(-<span class="number">4</span>,<span class="number">4</span>,<span class="number">9</span>,endpoint=True))

<span class="preprocessor"># 设置纵轴的上下限</span>
ylim(-<span class="number">1.0</span>,<span class="number">1.0</span>)

<span class="preprocessor"># 设置纵轴记号</span>
yticks(np.linspace(-<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>,endpoint=True))

<span class="preprocessor"># 以分辨率 72 来保存图片</span>
<span class="preprocessor"># savefig("exercice_2.png",dpi=72)</span>

<span class="preprocessor"># 在屏幕上显示</span>
show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_2.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_2.png" alt=""></a></p>
<h4 id=" 改变线条的颜色和粗细 ">改变线条的颜色和粗细</h4>
<p>首先，我们以蓝色和红色分别表示余弦和正弦函数，而后将线条变粗一点。接下来，我们在水平方向拉伸一下整个图。</p>
<pre><code><span class="keyword">...</span>
figure(figsize=(<span class="number">10</span>,<span class="number">6</span>), dpi=<span class="number">80</span>)
plot(X, C, color=<span class="string">"blue"</span>, linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"-"</span>)
plot(X, S, color=<span class="string">"red"</span>,  linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"-"</span>)
<span class="keyword">...</span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_3.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_3.png" alt=""></a></p>
<h4 id=" 设置图片边界 ">设置图片边界</h4>
<p>当前的图片边界设置得不好，所以有些地方看得不是很清楚。</p>
<pre><code><span class="keyword">...</span>
xlim(X.min()*<span class="number">1.1</span>, X.max()*<span class="number">1.1</span>)
ylim(C.min()*<span class="number">1.1</span>, C.max()*<span class="number">1.1</span>)
<span class="keyword">...</span>
</code></pre><p>更好的方式是这样：</p>
<pre><code>xmin ,xmax = X.<span class="built_in">min</span>(), X.<span class="built_in">max</span>()
ymin, ymax = Y.<span class="built_in">min</span>(), Y.<span class="built_in">max</span>()

dx = (xmax - xmin) * <span class="number">0.2</span>
dy = (ymax - ymin) * <span class="number">0.2</span>

xlim(xmin - dx, xmax + dx)
ylim(ymin - dy, ymax + dy)
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_4.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_4.png" alt=""></a></p>
<h4 id=" 设置记号 ">设置记号</h4>
<p>我们讨论正弦和余弦函数的时候，通常希望知道函数在 $\pm\pi$ 和 $\pm\frac{\pi}{2}$ 的值。这样看来，当前的设置就不那么理想了。</p>
<pre><code><span class="keyword">...</span>
xticks( [-np.pi, -np.pi/<span class="number">2</span>, <span class="number">0</span>, np.pi/<span class="number">2</span>, np.pi])
yticks([-<span class="number">1</span>, <span class="number">0</span>, +<span class="number">1</span>])
<span class="keyword">...</span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_5.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_5.png" alt=""></a></p>
<h4 id=" 设置记号的标签 ">设置记号的标签</h4>
<p>记号现在没问题了，不过标签却不大符合期望。我们可以把 $3.142$ 当做是 $\pi$，但毕竟不够精确。当我们设置记号的时候，我们可以同时设置记号的标签。注意这里使用了 LaTeX。</p>
<pre><code>...
xticks([-np.pi, -np.pi/<span class="number">2</span>, <span class="number">0</span>, np.pi/<span class="number">2</span>, np.pi],
       [<span class="string">r'$-\pi$'</span>, <span class="string">r'$-\pi/2$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+\pi/2$'</span>, <span class="string">r'$+\pi$'</span>])

yticks([-<span class="number">1</span>, <span class="number">0</span>, +<span class="number">1</span>],
       [<span class="string">r'$-1$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+1$'</span>])
...
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_6.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_6.png" alt=""></a></p>
<h4 id=" 移动脊柱 ">移动脊柱</h4>
<p>坐标轴线和上面的记号连在一起就形成了脊柱（Spines，一条线段上有一系列的凸起，是不是很像脊柱骨啊~），它记录了数据区域的范围。它们可以放在任意位置，不过至今为止，我们都把它放在图的四边。</p>
<p>实际上每幅图有四条脊柱（上下左右），为了将脊柱放在图的中间，我们必须将其中的两条（上和右）设置为无色，然后调整剩下的两条到合适的位置——数据空间的 0 点。</p>
<pre><code><span class="keyword">...</span>
ax = gca()
ax.spines[<span class="string">'right'</span>].set_color(<span class="string">'none'</span>)
ax.spines[<span class="string">'top'</span>].set_color(<span class="string">'none'</span>)
ax.xaxis.set_ticks_position(<span class="string">'bottom'</span>)
ax.spines[<span class="string">'bottom'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))
ax.yaxis.set_ticks_position(<span class="string">'left'</span>)
ax.spines[<span class="string">'left'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))
<span class="keyword">...</span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_7.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_7.png" alt=""></a></p>
<h4 id=" 添加图例 ">添加图例</h4>
<p>我们在图的左上角添加一个图例。为此，我们只需要在 <code>plot</code> 函数里以「键 - 值」的形式增加一个参数。</p>
<pre><code><span class="keyword">...</span>
plot(X, C, color=<span class="string">"blue"</span>, linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"-"</span>, label=<span class="string">"cosine"</span>)
plot(X, S, color=<span class="string">"red"</span>,  linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"-"</span>, label=<span class="string">"sine"</span>)

legend(loc=<span class="string">'upper left'</span>)
<span class="keyword">...</span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_8.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_8.png" alt=""></a></p>
<h4 id=" 给一些特殊点做注释 ">给一些特殊点做注释</h4>
<p>我们希望在 $2\pi/3$ 的位置给两条函数曲线加上一个注释。首先，我们在对应的函数图像位置上画一个点；然后，向横轴引一条垂线，以虚线标记；最后，写上标签。</p>
<pre><code><span class="keyword">...</span>

t = <span class="number">2</span>*np.pi/<span class="number">3</span>
plot([t,t],[<span class="number">0</span>,np.cos(t)], color =<span class="string">'blue'</span>, linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"--"</span>)
scatter([t,],[np.cos(t),], <span class="number">50</span>, color =<span class="string">'blue'</span>)

annotate(r<span class="string">'$\sin(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$'</span>,
         xy=(t, np.sin(t)), xycoords=<span class="string">'data'</span>,
         xytext=(+<span class="number">10</span>, +<span class="number">30</span>), textcoords=<span class="string">'offset points'</span>, fontsize=<span class="number">16</span>,
         arrowprops=dict(arrowstyle=<span class="string">"-&gt;"</span>, connectionstyle=<span class="string">"arc3,rad=.2"</span>))

plot([t,t],[<span class="number">0</span>,np.sin(t)], color =<span class="string">'red'</span>, linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"--"</span>)
scatter([t,],[np.sin(t),], <span class="number">50</span>, color =<span class="string">'red'</span>)

annotate(r<span class="string">'$\cos(\frac{2\pi}{3})=-\frac{1}{2}$'</span>,
         xy=(t, np.cos(t)), xycoords=<span class="string">'data'</span>,
         xytext=(-<span class="number">90</span>, -<span class="number">50</span>), textcoords=<span class="string">'offset points'</span>, fontsize=<span class="number">16</span>,
         arrowprops=dict(arrowstyle=<span class="string">"-&gt;"</span>, connectionstyle=<span class="string">"arc3,rad=.2"</span>))
<span class="keyword">...</span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_9.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_9.png" alt=""></a></p>
<h4 id=" 精益求精 ">精益求精</h4>
<p>坐标轴上的记号标签被曲线挡住了，作为强迫症患者（雾）这是不能忍的。我们可以把它们放大，然后添加一个白色的半透明底色。这样可以保证标签和曲线同时可见。</p>
<pre><code><span class="keyword">...</span>
<span class="keyword">for</span> label <span class="keyword">in</span> ax.get_xticklabels() + ax.get_yticklabels():
    label.set_fontsize(<span class="number">16</span>)
    label.set_bbox(dict(facecolor=<span class="string">'white'</span>, edgecolor=<span class="string">'None'</span>, alpha=<span class="number">0.65</span> ))
<span class="keyword">...</span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/exercice_10.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/exercice_10.png" alt=""></a></p>
<h3 id=" 图像、子图、坐标轴和记号 ">图像、子图、坐标轴和记号</h3>
<p>到目前为止，我们都用隐式的方法来绘制图像和坐标轴。快速绘图中，这是很方便的。我们也可以显式地控制图像、子图、坐标轴。Matplotlib 中的「图像」指的是用户界面看到的整个窗口内容。在图像里面有所谓「子图」。子图的位置是由坐标网格确定的，而「坐标轴」却不受此限制，可以放在图像的任意位置。我们已经隐式地使用过图像和子图：当我们调用 <code>plot</code> 函数的时候，matplotlib 调用 <code>gca()</code> 函数以及 <code>gcf()</code> 函数来获取当前的坐标轴和图像；如果无法获取图像，则会调用 <code>figure()</code> 函数来创建一个——严格地说，是用 <code>subplot(1,1,1)</code> 创建一个只有一个子图的图像。</p>
<h4 id=" 图像 ">图像</h4>
<p>所谓「图像」就是 GUI 里以「Figure #」为标题的那些窗口。图像编号从 1 开始，与 MATLAB 的风格一致，而于 Python 从 0 开始编号的风格不同。以下参数是图像的属性：</p>
<table border="1" class="docutils"><br><colgroup><br><col width="17%"><br><col width="28%"><br><col width="54%"><br></colgroup><br><thead valign="bottom"><br><tr><th class="head">参数</th><br><th class="head">默认值</th><br><th class="head">描述</th><br></tr><br></thead><br><tbody valign="top"><br><tr><td>num</td><br><td>1</td><br><td>图像的数量</td><br></tr><br><tr><td>figsize</td><br><td>figure.figsize</td><br><td>图像的长和宽（英寸）</td><br></tr><br><tr><td>dpi</td><br><td>figure.dpi</td><br><td>分辨率（点 / 英寸）</td><br></tr><br><tr><td>facecolor</td><br><td>figure.facecolor</td><br><td>绘图区域的背景颜色</td><br></tr><br><tr><td>edgecolor</td><br><td>figure.edgecolor</td><br><td>绘图区域边缘的颜色</td><br></tr><br><tr><td>frameon</td><br><td>True</td><br><td>是否绘制图像边缘</td><br></tr><br></tbody><br></table>

<p>这些默认值可以在源文件中指明。不过除了图像数量这个参数，其余的参数都很少修改。</p>
<p>你在图形界面中可以按下右上角的 X 来关闭窗口（OS X 系统是左上角）。Matplotlib 也提供了名为 <code>close</code> 的函数来关闭这个窗口。<code>close</code> 函数的具体行为取决于你提供的参数：</p>
<ol>
<li>不传递参数：关闭当前窗口；</li>
<li>传递窗口编号或窗口实例（instance）作为参数：关闭指定的窗口；</li>
<li><code>all</code>：关闭所有窗口。</li>
</ol>
<p>和其他对象一样，你可以使用 <code>setp</code> 或者是 <code>set_something</code> 这样的方法来设置图像的属性。</p>
<h4 id=" 子图 ">子图</h4>
<p>你可以用子图来将图样（plot）放在均匀的坐标网格中。用 <code>subplot</code> 函数的时候，你需要指明网格的行列数量，以及你希望将图样放在哪一个网格区域中。此外，<a href="http://matplotlib.sourceforge.net/users/gridspec.html" target="_blank"><code>gridspec</code></a> 的功能更强大，你也可以选择它来实现这个功能。</p>
<p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-horizontal.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/subplot-horizontal.png" alt=""></a></p>
<p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-vertical.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/subplot-vertical.png" alt=""></a></p>
<p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/subplot-grid.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/subplot-grid.png" alt=""></a></p>
<p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/gridspec.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/gridspec.png" alt=""></a></p>
<h4 id=" 坐标轴 ">坐标轴</h4>
<p>坐标轴和子图功能类似，不过它可以放在图像的任意位置。因此，如果你希望在一副图中绘制一个小图，就可以用这个功能。</p>
<p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/axes.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/axes.png" alt=""></a></p>
<p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/axes-2.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/axes-2.png" alt=""></a></p>
<h4 id=" 记号 ">记号</h4>
<p>良好的记号是图像的重要组成部分。Matplotlib 里的记号系统里的各个细节都是可以由用户个性化配置的。你可以用 Tick Locators 来指定在那些位置放置记号，用 Tick Formatters 来调整记号的样式。主要和次要的记号可以以不同的方式呈现。默认情况下，每一个次要的记号都是隐藏的，也就是说，默认情况下的次要记号列表是空的——<code>NullLocator</code>。</p>
<h5 id="Tick_Locators">Tick Locators</h5>
<p>下面有为不同需求设计的一些 Locators。</p>
<table border="1" class="docutils"><br><colgroup><br><col width="22%"><br><col width="78%"><br></colgroup><br><thead valign="bottom"><br><tr><th class="head">类型</th><br><th class="head">说明</th><br></tr><br></thead><br><tbody valign="top"><br><tr><td><tt class="docutils literal">NullLocator</tt></td><br><td><p class="first">No ticks.</p><br><img alt="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-NullLocator.png" class="last" src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-NullLocator.png"><br></td><br></tr><br><tr><td><tt class="docutils literal">IndexLocator</tt></td><br><td><p class="first">Place a tick on every multiple of some base number of points plotted.</p><br><img alt="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-IndexLocator.png" class="last" src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-IndexLocator.png"><br></td><br></tr><br><tr><td><tt class="docutils literal">FixedLocator</tt></td><br><td><p class="first">Tick locations are fixed.</p><br><img alt="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-FixedLocator.png" class="last" src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-FixedLocator.png"><br></td><br></tr><br><tr><td><tt class="docutils literal">LinearLocator</tt></td><br><td><p class="first">Determine the tick locations.</p><br><img alt="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-LinearLocator.png" class="last" src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-LinearLocator.png"><br></td><br></tr><br><tr><td><tt class="docutils literal">MultipleLocator</tt></td><br><td><p class="first">Set a tick on every integer that is multiple of some base.</p><br><img alt="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-MultipleLocator.png" class="last" src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-MultipleLocator.png"><br></td><br></tr><br><tr><td><tt class="docutils literal">AutoLocator</tt></td><br><td><p class="first">Select no more than n intervals at nice locations.</p><br><img alt="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-AutoLocator.png" class="last" src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-AutoLocator.png"><br></td><br></tr><br><tr><td><tt class="docutils literal">LogLocator</tt></td><br><td><p class="first">Determine the tick locations for log axes.</p><br><img alt="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-LogLocator.png" class="last" src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/ticks-LogLocator.png"><br></td><br></tr><br></tbody><br></table>

<p>这些 Locators 都是 <code>matplotlib.ticker.Locator</code> 的子类，你可以据此定义自己的 Locator。以日期为 ticks 特别复杂，因此 Matplotlib 提供了 <code>matplotlib.dates</code> 来实现这一功能。</p>
<h3 id=" 其他类型的图 ">其他类型的图</h3>
<p>接下来的内容是练习。请运用你学到的知识，从提供的代码开始，实现配图所示的效果。具体的答案可以点击配图下载。</p>
<h4 id=" 普通图 ">普通图</h4>
<pre><code><span class="built_in">from</span> pylab import *

n = <span class="number">256</span>
X = np.linspace(-np.<span class="constant">pi</span>,np.<span class="constant">pi</span>,n,endpoint=True)
Y = np.<span class="built_in">sin</span>(<span class="number">2</span>*X)

plot (X, Y+<span class="number">1</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">1.00</span>)
plot (X, Y-<span class="number">1</span>, color=<span class="string">'blue'</span>, alpha=<span class="number">1.00</span>)
show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/plot_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/plot_ex.png" alt=""></a></p>
<h4 id=" 散点图 ">散点图</h4>
<pre><code><span class="built_in">from</span> pylab import *

n = <span class="number">1024</span>
X = np.<span class="built_in">random</span>.<span class="keyword">normal</span>(<span class="number">0</span>,<span class="number">1</span>,n)
Y = np.<span class="built_in">random</span>.<span class="keyword">normal</span>(<span class="number">0</span>,<span class="number">1</span>,n)

scatter(X,Y)
show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/scatter_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/scatter_ex.png" alt=""></a></p>
<h4 id=" 条形图 ">条形图</h4>
<pre><code>from pylab import *

n = <span class="number">12</span>
X = np.arange(n)
Y1 = (<span class="number">1</span>-X/<span class="keyword">float</span>(n)) * np.random.<span class="keyword">uniform</span>(<span class="number">0.5</span>,<span class="number">1.0</span>,n)
Y2 = (<span class="number">1</span>-X/<span class="keyword">float</span>(n)) * np.random.<span class="keyword">uniform</span>(<span class="number">0.5</span>,<span class="number">1.0</span>,n)

bar(X, +Y1, facecolor=<span class="string">'#9999ff'</span>, edgecolor=<span class="string">'white'</span>)
bar(X, -Y2, facecolor=<span class="string">'#ff9999'</span>, edgecolor=<span class="string">'white'</span>)

<span class="keyword">for</span> x,y <span class="keyword">in</span> zip(X,Y1):
    <span class="keyword">text</span>(x+<span class="number">0.4</span>, y+<span class="number">0.05</span>, <span class="string">'%.2f'</span> % y, ha=<span class="string">'center'</span>, va= <span class="string">'bottom'</span>)

ylim(-<span class="number">1.25</span>,+<span class="number">1.25</span>)
show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/bar_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/bar_ex.png" alt=""></a></p>
<h4 id=" 等高线图 ">等高线图</h4>
<pre><code><span class="keyword">from</span> pylab <span class="keyword">import</span> *

<span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x,y)</span>:</span> <span class="keyword">return</span> (<span class="number">1</span>-x/<span class="number">2</span>+x**<span class="number">5</span>+y**<span class="number">3</span>)*np.exp(-x**<span class="number">2</span>-y**<span class="number">2</span>)

n = <span class="number">256</span>
x = np.linspace(-<span class="number">3</span>,<span class="number">3</span>,n)
y = np.linspace(-<span class="number">3</span>,<span class="number">3</span>,n)
X,Y = np.meshgrid(x,y)

contourf(X, Y, f(X,Y), <span class="number">8</span>, alpha=<span class="number">.75</span>, cmap=<span class="string">'jet'</span>)
C = contour(X, Y, f(X,Y), <span class="number">8</span>, colors=<span class="string">'black'</span>, linewidth=<span class="number">.5</span>)
show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/contour_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/contour_ex.png" alt=""></a></p>
<h4 id=" 灰度图（Imshow）">灰度图（Imshow）</h4>
<pre><code><span class="keyword">from</span> pylab <span class="keyword">import</span> *

<span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x,y)</span>:</span> <span class="keyword">return</span> (<span class="number">1</span>-x/<span class="number">2</span>+x**<span class="number">5</span>+y**<span class="number">3</span>)*np.exp(-x**<span class="number">2</span>-y**<span class="number">2</span>)

n = <span class="number">10</span>
x = np.linspace(-<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>*n)
y = np.linspace(-<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>*n)
X,Y = np.meshgrid(x,y)
imshow(f(X,Y)), show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/imshow_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/imshow_ex.png" alt=""></a></p>
<h4 id=" 饼状图 ">饼状图</h4>
<pre><code>from pylab import *

n = <span class="number">20</span>
<span class="variable">Z</span> = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,n)
<span class="function"><span class="title">pie</span><span class="params">(<span class="variable">Z</span>)</span>, <span class="title">show</span><span class="params">()</span></span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/pie_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/pie_ex.png" alt=""></a></p>
<h4 id=" 量场图（Quiver_Plots）">量场图（Quiver Plots）</h4>
<pre><code>from pylab import *

n = <span class="number">8</span>
<span class="variable">X</span>,<span class="variable">Y</span> = np.mgrid[<span class="number">0</span>:n,<span class="number">0</span>:n]
<span class="function"><span class="title">quiver</span><span class="params">(<span class="variable">X</span>,<span class="variable">Y</span>)</span>, <span class="title">show</span><span class="params">()</span></span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/quiver_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/quiver_ex.png" alt=""></a></p>
<h4 id=" 网格 ">网格</h4>
<pre><code>from pylab import *

axes = gca()
axes<span class="preprocessor">.set</span>_xlim(<span class="number">0</span>,<span class="number">4</span>)
axes<span class="preprocessor">.set</span>_ylim(<span class="number">0</span>,<span class="number">3</span>)
axes<span class="preprocessor">.set</span>_xticklabels([])
axes<span class="preprocessor">.set</span>_yticklabels([])

show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/grid_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/grid_ex.png" alt=""></a></p>
<h4 id=" 多重网格 ">多重网格</h4>
<pre><code>from pylab import *

<span class="function"><span class="title">subplot</span><span class="params">(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)</span>
<span class="title">subplot</span><span class="params">(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>)</span>
<span class="title">subplot</span><span class="params">(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>)</span>

<span class="title">show</span><span class="params">()</span></span>
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/multiplot_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/multiplot_ex.png" alt=""></a></p>
<h4 id=" 极轴图 ">极轴图</h4>
<pre><code>from pylab import *

axes([<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>])

N = <span class="number">20</span>
theta = np<span class="preprocessor">.arange</span>(<span class="number">0.0</span>, <span class="number">2</span>*np<span class="preprocessor">.pi</span>, <span class="number">2</span>*np<span class="preprocessor">.pi</span>/N)
radii = <span class="number">10</span>*np<span class="preprocessor">.random</span><span class="preprocessor">.rand</span>(N)
width = np<span class="preprocessor">.pi</span>/<span class="number">4</span>*np<span class="preprocessor">.random</span><span class="preprocessor">.rand</span>(N)
bars = bar(theta, radii, width=width, bottom=<span class="number">0.0</span>)

for r,bar <span class="keyword">in</span> zip(radii, bars):
    bar<span class="preprocessor">.set</span>_facecolor( cm<span class="preprocessor">.jet</span>(r/<span class="number">10.</span>))
    bar<span class="preprocessor">.set</span>_alpha(<span class="number">0.5</span>)

show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/polar_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/polar_ex.png" alt=""></a></p>
<h4 id="3D_ 图 ">3D 图</h4>
<pre><code>from pylab import *
from mpl_toolkits.mplot3d import Axes3D

<span class="constant">fig</span> = figure()
<span class="constant">ax</span> = Axes3D(fig)
<span class="constant">X</span> = np.arange(-4, 4, 0.25)
<span class="constant">Y</span> = np.arange(-4, 4, 0.25)
X, Y = np.meshgrid(X, Y)
<span class="constant">R</span> = np.sqrt(X**2 + Y**2)
<span class="constant">Z</span> = np.sin(R)

ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='hot')

show()
</code></pre><p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/plot3d_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/plot3d_ex.png" alt=""></a></p>
<h4 id=" 手稿 ">手稿</h4>
<p><a href="http://www.loria.fr/~rougier/teaching/matplotlib/scripts/text_ex.py" target="_blank"><img src="http://www.loria.fr/~rougier/teaching/matplotlib/figures/text_ex.png" alt=""></a></p>
<h3 id=" 结束篇 ">结束篇</h3>
<p>Matplotlib 能有今天这样强大的功能和广泛的使用得益于大量的文档和社区开发者。这里提供一些有益的链接。</p>
<h4 id=" 入门教程 ">入门教程</h4>
<ul>
<li><a href="http://matplotlib.sourceforge.net/users/pyplot_tutorial.html" target="_blank">Pyplot tutorial</a></li>
<li><a href="http://matplotlib.sourceforge.net/users/image_tutorial.html" target="_blank">Image tutorial</a></li>
<li><a href="http://matplotlib.sourceforge.net/users/index_text.html" target="_blank">Text tutorial</a></li>
<li><a href="http://matplotlib.sourceforge.net/users/artists.html" target="_blank">Artist tutorial</a></li>
<li><a href="http://matplotlib.sourceforge.net/users/path_tutorial.html" target="_blank">Path tutorial</a></li>
<li><a href="http://matplotlib.sourceforge.net/users/transforms_tutorial.html" target="_blank">Transforms tutorial</a></li>
</ul>
<h4 id="Matplotlib_ 文档 ">Matplotlib 文档</h4>
<ul>
<li><a href="http://matplotlib.sourceforge.net/users/index.html" target="_blank">用户指南</a></li>
<li><a href="http://matplotlib.sourceforge.net/faq/index.html" target="_blank">常见问题及回答</a></li>
<li><a href="http://matplotlib.sourceforge.net/users/screenshots.html" target="_blank">截屏</a></li>
</ul>
<h4 id=" 随代码分发的文档 ">随代码分发的文档</h4>
<p>Matplotlib 的代码是自文档（Self-documented）的。你可以在 Python 中快速查询某个命令的用法。</p>
<pre><code>&gt;&gt;&gt; <span class="built_in">from</span> pylab import *
&gt;&gt;&gt; help(plot)
Help <span class="command"><span class="keyword">on</span> <span class="title">function</span> <span class="title">plot</span> <span class="title">in</span> <span class="title">module</span> <span class="title">matplotlib</span>.<span class="title">pyplot</span>:</span>

plot(*args, **kwargs)
   Plot <span class="keyword">lines</span> <span class="operator">and</span>/<span class="operator">or</span> markers <span class="built_in">to</span> <span class="operator">the</span>
   :class:`~matplotlib.axes.Axes`.  *args* is <span class="operator">a</span> <span class="built_in">variable</span> <span class="built_in">length</span>
   argument, allowing <span class="keyword">for</span> multiple *x*, *y* pairs <span class="operator">with</span> <span class="operator">an</span>
   optional <span class="built_in">format</span> <span class="keyword">string</span>.  For example, <span class="keyword">each</span> <span class="operator">of</span> <span class="operator">the</span> following is
   legal::

       plot(x, y)         <span class="comment"># plot x and y using default line style and color</span>
       plot(x, y, <span class="string">'bo'</span>)   <span class="comment"># plot x and y using blue circle markers</span>
       plot(y)            <span class="comment"># plot y using x as index array 0..N-1</span>
       plot(y, <span class="string">'r+'</span>)      <span class="comment"># ditto, but with red plusses</span>

   If *x* <span class="operator">and</span>/<span class="operator">or</span> *y* is <span class="number">2</span>-dimensional, <span class="keyword">then</span> <span class="operator">the</span> corresponding columns
   will be plotted.
   ...
</code></pre><h4 id=" 画廊 ">画廊</h4>
<p><a href="http://matplotlib.sourceforge.net/gallery.html" target="_blank">Matplotlib 画廊</a> 也非常有用。其中的例子都有配图和对应的代码，当你不知道某一个效果如何实现的时候，你可以在这里找找。</p>
<p>哦，这里还有一个<a href="http://www.loria.fr/~rougier/coding/gallery/" target="_blank">小一点的画廊</a>。</p>
<h4 id=" 邮件列表 ">邮件列表</h4>
<p>你可以在<a href="https://lists.sourceforge.net/lists/listinfo/matplotlib-users" target="_blank">用户邮件列表</a>提问，或者在<a href="https://lists.sourceforge.net/lists/listinfo/matplotlib-devel" target="_blank">开发者邮件列表</a>里交流技术。</p>
<blockquote>
<p>译注：邮件列表是一个很正式的交流平台，其内的每一封邮件，列表的收听者都会看到，所以请不要在邮件列表灌水或发表质量低劣的文章。</p>
</blockquote>
<h4 id=" 快速查询 ">快速查询</h4>
<p>你可以在<a href="http://www.loria.fr/~rougier/teaching/matplotlib/#id12" target="_blank">这里</a>找到 Matplotlib 主要的属性表，以便按照需求个性化配置你的输出图样。</p>
]]></content>
    <summary type="html"><![CDATA[<h2 id="Matplotlib_ 教程 ">Matplotlib 教程</h2>
<blockquote>
<p>本文为译文，原文<a href="http://www.loria.fr/~rougier/teaching/matplotlib/" target="_blank">载于此</a>，译文<a href="http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/">原载于此</a>。本文欢迎转载，但请保留本段文字，尊重作者和译者的权益。谢谢。<code>: )</code></p>
</blockquote>
<h3 id=" 介绍 ">介绍</h3>
<p>Matplotlib 可能是 Python 2D- 绘图领域使用最广泛的套件。它能让使用者很轻松地将数据图形化，并且提供多样化的输出格式。这里将会探索 matplotlib 的常见用法。</p>
]]></summary>
    
      <category term="Python" scheme="http://liam0205.me/tags/Python/"/>
    
      <category term="Matplotlib" scheme="http://liam0205.me/tags/Matplotlib/"/>
    
      <category term="Tutorial" scheme="http://liam0205.me/tags/Tutorial/"/>
    
      <category term="IT" scheme="http://liam0205.me/categories/IT/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一份其实很短的 LaTeX 入门文档]]></title>
    <link href="http://liam0205.me/2014/09/08/latex-introduction/"/>
    <id>http://liam0205.me/2014/09/08/latex-introduction/</id>
    <published>2014-09-08T03:46:31.000Z</published>
    <updated>2014-09-08T04:16:18.000Z</updated>
    <content type="html"><![CDATA[<h2 id=" 优雅的 _LaTeX">优雅的 LaTeX</h2>
<p>有很多 Geeks 或者 LaTeX’s Fanatical Fans 过分地强调了 LaTeX 的一些并非重点的特性，以至于很多初学者会觉得 LaTeX 很神秘很复杂，从而引发了初学者的畏难情绪甚至是负面情绪。尽管这些 Fans 说得并没有错，我是说在事实上，但是他们的表达方式和内心态度却间接阻碍了 LaTeX 的发展，我想这也是和他们的初衷相悖的。</p>
<p>我曾经也受到过这些言论的影响，但幸运的事，至今为止我已经越过了这些障碍，并更加坚信了他们所言（LaTeX 的优点）的正确性。因此我想以我自己的方式，向更多的人介绍 LaTeX —— <strong>这个优雅，但有着自己高傲，却绝不复杂甚至神秘的东西</strong>。</p>
<a id="more"></a>

<blockquote>
<p> 欢迎从校内转移过来的同学们，因为校内的技术原因，文章无法在校内继续更新。尽管非我之故，但还是给各位同学说声抱歉。同时，欢迎各位来到我的博客。<code>: )</code></p>
</blockquote>
<p>ps, 来自 楠哥 的吐槽：“这篇小文的例子因为要兼容中文，变得太复杂了，可以先看<a href="http://blog.renren.com/blog/bp/Q7LjRQLBcl" target="_blank">这篇文章</a>，再回来看这篇小文”。</p>
<h2 id=" 你将从这里看到 ">你将从这里看到</h2>
<ol>
<li>（几乎是）最简洁的 (La)TeX 编辑器——TeXworks——的基本使用方法；</li>
<li>如何使用 (Xe)LaTeX 进行简单的<strong>中英混排</strong>；</li>
<li>简单的文章组织结构；</li>
<li>如何用 (Xe)LaTeX 进行数学公式的排版；</li>
<li>如何在 (Xe)LaTeX 的文档中插入图片 / 表格；</li>
<li>如何进行简单的版面设置；</li>
<li>几个最常见的带有 TeX 的单词的含义；</li>
<li>出现问题应当如何处理 / 怎样聪明地提出你的问题——怎样从这里毕业。</li>
</ol>
<h2 id=" 你不会从这里看到 ">你不会从这里看到</h2>
<ol>
<li>如何安装 TeX 发行；</li>
<li>特殊需求（特殊宏包）的解决方法；</li>
<li>关于若干 TeX 发行的好坏比较；</li>
<li>关于各种 TeX 编辑器的好坏比较；</li>
<li>过多的废话。</li>
</ol>
<h2 id=" 你应当如何阅读本文 ">你应当如何阅读本文</h2>
<p>事实上本文在行文过程中，会有相当多的提示帮助你以正确的方式阅读。因此有必要在此先介绍一下最常用的一些标记。</p>
<ol>
<li>斜体：使用<em>斜体</em> 意味着如果忽略掉这些文字，你可能在<em>逻辑</em> 上很难理解后面某处的知识；</li>
<li>粗体：使用<strong>粗体</strong>意味如果忽略掉这些文字，你可能在<strong>TeX 的概念</strong>上很难理解后面某处的知识；</li>
<li>粗斜体：使用<strong><em>粗斜体</em></strong> 基本是最重要的部分，是上述两种情况的合并；</li>
<li>引用：使用引用，<blockquote>
<p>表明这些文字在你第一次阅读本文的时候<em>不需要</em> 了解，其中的内容可能过于深奥，或者过于琐碎。对于第一次接触 TeX 的你（如果你是 TeX 资深使用者当然不在此列），如果了解到这些内容可能会使你困惑，并且不会从实际上增加你对 TeX 的领悟以及对 TeX 的好感。</p>
</blockquote>
</li>
</ol>
<h1 id=" 关于编辑器的简单介绍 ">关于编辑器的简单介绍</h1>
<p>流行的 <em>TeX 发行</em>，比如 CTeX 和 TeX Live, 都自带有一些用于编辑文档的编辑器。这些编辑器差异还是很大的，从简单的 TeXworks 到复杂的 WinEdt, 各种各样。但是不管是什么样的编辑器，他们都是用来编辑纯文本的而已（.tex 就是纯文本），换言之他们只是 Windows 自带的记事本程序的加强版而已，<strong><em>他们本身并不是 TeX 系统的一部分</em></strong>。</p>
<blockquote>
<p>所谓 TeX 发行，指的是包括 TeX 系统的各种可执行程序，以及他们执行时需要的一些辅助程序和宏包文档的集合。</p>
</blockquote>
<p>国内的同学安装 CTeX 的比较多，CTeX 自带的编辑器，除了大家熟知的 WinEdt，还有 TeXworks。而 TeX Live 则只是自带了 TeXworks 而已。</p>
<p>本文只介绍 TeXworks 编辑器的使用。原因有二：</p>
<ul>
<li>WinEdt 过于繁琐，很多功能用不上，反而给新手增加学习成本；</li>
<li>TeXworks 是 TeX Live 自带的编辑器，而 TeX Live 是跨平台的，各个操作系统都可以使用。</li>
</ul>
<h2 id=" 启动 _TeXworks">启动 TeXworks</h2>
<p>启动 TeXworks 很简单，不论你安装的是 CTeX 还是 TeX Live, 你都可以在 Windows 启动对话框中输入 texworks 按回车。具体步骤是：</p>
<ul>
<li>按下键盘上的 Windows 徽标键，同时按下 R 键 —— <code>&lt;Win&gt; + R</code>;</li>
<li>键入 <code>texworks</code>；</li>
<li>回车。</li>
</ul>
<p>如果安装的是 CTeX，也可以进入开始菜单，从 CTeX - MiKTeX - TeXworks 打开。</p>
<p>启动之后，TeXworks 的界面，会默认占据你屏幕的左半边，右半边留空。效果如下图：<br><img src="http://ww4.sinaimg.cn/large/818901c1jw1e44dgufrnpj20iy0kimxz.jpg" alt=""></p>
<p>图中空白的部分，就是输入编辑文本的编辑框；在编辑框的右下角，显示有三个按钮，最左边的是换行符模式，中间是<em>编码模式</em>，右边标示当前光标所在位置；编辑框的上方是工具栏，工具栏的右半部分使大家熟悉的功能（新建、打开、保存、撤消、恢复、剪切、复制、黏贴、查找、替换），工具栏的左边则是<em>编译按钮</em> （TeXworks 也称其为“排版工具”）；工具栏在往上，则是菜单栏，此处按下不表。</p>
<blockquote>
<p>Windows，Unix 等操作系统对待“换行符”是有不同的。索性 TeXworks 为我们做了足够的提示，方面我们的选择（点击一下那个按钮就知道了）。一般而言，保持默认即可。</p>
<p>字符（包括英文字符和中文字符）在计算机中，经过编码以二进制的形式存储在计算机中。如果编辑器编码和计算机内部编码不一致，则会导致所谓“乱码”的现象。TeXworks 默认使用 UTF8 编码，在我们的文档中不需要进行任何更改，而对于一些其他的文档可能需要按照要求更改编码。</p>
</blockquote>
<h2 id=" 排版工具 ">排版工具</h2>
<p>TeXworks 为我们预设了若干排版工具（pdfTeX, pdfLaTeX, XeTeX, XeLaTeX 等），他们分别代表什么实在太过复杂并且也不是当前需要讲明白的。本文中需要用到的排版工具主要是 <strong><em>XeLaTeX</em></strong>，关于这些工具的介绍，可以参看后文。当你对 TeX 系统相当熟悉之后，也可以不适用 TeXworks 预设的工具，自己配置排版工具。</p>
<p>TeXworks 默认的排版工具是 pdfLaTeX，如果你希望更改这个默认值，可以在<em>编辑 - 首选项 - 排版 - 处理工具 - 默认</em> 中修改。</p>
<h2 id="Hello,_world!">Hello, world!</h2>
<p>在编辑框中，输入如下内容：</p>
<pre><code>\documentclass<span class="cell">{article}</span>
<span class="comment">% 这里是导言区</span>
\begin<span class="cell">{document}</span>
Hello, world!
\<span class="keyword">end</span><span class="cell">{document}</span>
</code></pre><p>将文档保存在你希望的位置，然后在排版工具的下拉选框中选中 <strong>XeLaTeX</strong> 后，按下绿色的编译按钮。一会儿，如果没有意外，屏幕的右边就会出现编译之后结果。如下图：<br><img src="http://ww4.sinaimg.cn/large/818901c1jw1e44e55rnkkj211y0kmwgi.jpg" alt=""></p>
<p>很容易发现，输入进编辑框的五行文字，在最终输出的 pdf 档中只显示了 1 行。事实上，交付 TeX 处理的文档内容，并不会全部输出。</p>
<p>此处的第一行<code>\documentclass{article}</code>中包含了一个控制序列（或称命令 / 标记）。所谓控制序列，是以反斜杠<code>\</code>开头，以第一个<strong><em>空格或非字母</em></strong> 的字符结束的一串文字，他们并不被输出，但是他们会影响输出文档的效果。这里的控制序列是<code>documentclass</code>，它后面紧跟着的<code>{article}</code>代表这个控制序列有一个必要的参数，该参数的值为<code>article</code>. 这个控制序列的作用，是调用名为 “article” 的文档类。</p>
<blockquote>
<p>部分控制序列还有被方括号<code>[]</code>包括的可选参数。</p>
<p>所谓文档类，即是 TeX 系统预设的（或是用户自定的）一些格式的集合。不同的文档类在输出效果上会有差别。</p>
</blockquote>
<p>此处的第二行以<code>%</code>开头。在 TeX 风格的文档中，从 “%” 开始，到该行末尾的所有字符，都会被 TeX 系统无视，只作为供人类阅读的注释。除非在 “%” 前加上反斜杠来取消这一特性，例如</p>
<pre><code>今年的净利润为 20<span class="command">\%</span>, 比去年高。
</code></pre><p>此处 “%” 被当做正常的百分号处理，其后的文字也将被正常输出。</p>
<p>其后出现了控制序列<code>begin</code>，这个控制序列总是与<code>end</code>成对出现。这两个控制序列以及他们中间的内容被称为“环境”；他们之后的第一个必要参数总是<strong>一致的</strong>，被称为环境名。</p>
<p>只有在 “document” 环境中的内容，才会被正常输出到文档中去或是作为控制序列对文档产生影响。因此，在<code>\end{document}</code>之后插入任何内容都是无效的。</p>
<p><code>\begin{document}</code>与<code>\documentclass{article}</code>之间的部分被称为导言区。导言区中的控制序列，通常会影响到整个输出文档。</p>
<h1 id=" 实现中英文混排 ">实现中英文混排</h1>
<p>除掉成功生成第一个文档，实现中文输出（或者说是中英文混排）恐怕是困扰中国的 TeX 使用者的第二个普遍问题。众所周知，TeX 系统是高教授开发的，当初并没有考虑到亚洲文字的问题。因此早期的 TeX 系统并不能直接支持中文，必须要用其他工具先处理一下（或者是一些宏包之类的）。</p>
<p>但是现在，XeTeX 原生支持 Unicode，并且可以方便地调用系统字体。可以说解决了困扰中国 TeX 使用者多年的大问题。</p>
<p>此外，除去中文支持，中文的版式处理和标点禁则也是不小的挑战。好在由吴凌云和江疆牵头，现在主要由刘海洋和李清（还有我打个酱油）维护的 <code>ctex</code> 宏包 / 文档类一次性解决了这些问题。<code>ctex</code> 宏包和文档类的优势在于，它适用于多种编译方式；在内部处理好了中文和中文版式的支持，隐藏了这些细节；并且，提供了不少中文用户需要的功能接口。</p>
<p>为了和原有的日志对接，这里分别用两种方法来介绍中英文混排。当然，老方法只是为了「兼容性」存在的，推荐使用新方法。</p>
<h2 id=" 新方法——使用 _ctex_ 文档类 ">新方法——使用 <code>ctex</code> 文档类</h2>
<p>在 TeXworks 编辑框中输入以下内容，保存，使用 XeLaTeX 编译：</p>
<pre><code>\documentclass<span class="matrix">[UTF8]</span><span class="cell">{ctexart}</span>
\begin<span class="cell">{document}</span>
你好，world!
\<span class="keyword">end</span><span class="cell">{document}</span>
</code></pre><p>如果没有意外，你将会看到类似下图的输出结果。</p>
<p><img src="http://ww2.sinaimg.cn/large/818901c1jw1e44g5azwaej20j00kimy3.jpg" alt=""></p>
<p>相较于之前的例子，这份代码只有细微的差异：</p>
<ol>
<li>文档类从 <code>article</code> 变为 <code>ctexart</code>；</li>
<li>增加了文档类选项 <code>UTF8</code>。</li>
</ol>
<p><code>ctex</code> 宏包和文档类的默认配置是为使用简体中文 Windows 系统的用户配置的，在 Linux 或 Unix 系统（包括 OS X）下使用会遇到一点困难。对此，项目组官方给出了一个 wiki 来解释说明。参见：</p>
<p><a href="https://code.google.com/p/ctex-kit/wiki/UnixFonts" target="_blank">https://code.google.com/p/ctex-kit/wiki/UnixFonts</a></p>
<p>对于安装了 MacTeX 的 OS X 系统的用户，应该做如下额外的配置：</p>
<p>打开路径 <code>/usr/local/texlive/2014/texmf-dist/tex/latex/ctex/cfg</code> 编辑文件 <code>ctex.cfg</code> 为以下内容：</p>
<pre><code>\setCJKmainfont<span class="matrix">[BoldFont=STHeiti,ItalicFont=STKaiti]</span><span class="cell">{STSong}</span>
\setCJKsansfont<span class="matrix">[BoldFont=STHeiti]</span><span class="cell">{STXihei}</span>
\setCJKmonofont<span class="cell">{STFangsong}</span>
\setCJKfamilyfont<span class="cell">{stsong}</span><span class="cell">{STSong}</span>
\setCJKfamilyfont<span class="cell">{sthei}</span><span class="cell">{STHeiti}</span>
\setCJKfamilyfont<span class="cell">{stkai}</span><span class="cell">{STKaiti}</span>
\setCJKfamilyfont<span class="cell">{stfs}</span><span class="cell">{STFangsong}</span>
\newcommand<span class="cell">{\songti}</span><span class="cell">{\CJKfamily{stsong}</span>} <span class="comment">% 宋体</span>
\newcommand<span class="cell">{\heiti}</span><span class="cell">{\CJKfamily{sthei}</span>}   <span class="comment">% 黑体</span>
\newcommand<span class="cell">{\kaishu}</span><span class="cell">{\CJKfamily{stkai}</span>}  <span class="comment">% 楷书</span>
\newcommand<span class="cell">{\fangsong}</span><span class="cell">{\CJKfamily{stfs}</span>} <span class="comment">% 仿宋</span>
\endinput
</code></pre><p>在同一个目录下，新建文件 <code>ctexopts.cfg</code>，编辑为以下内容：</p>
<pre><code><span class="command">\ExecuteOptions</span><span class="special">{</span>nofonts<span class="special">}</span>
<span class="command">\ExecuteOptions</span><span class="special">{</span>fntef<span class="special">}</span>

<span class="command">\endinput</span>
</code></pre><p>对于 Linux 的用户，<code>ctexopts.cfg</code> 的修改方式完全一致，<code>ctex.cfg</code> 则略有不同。由于 Linux 发行版众多，使用的字体也不一致，这里没有办法给出一套完整的方案。你可以参考本文后的「查看当前操作系统中的字体」一节，将合适的字体填入即可。</p>
<h2 id=" 老方法——直接调用 _xeCJk_ 宏包 ">老方法——直接调用 xeCJk 宏包</h2>
<p>在 TeXworks 编辑框中输入以下内容，保存，使用 XeLaTeX 编译：</p>
<pre><code>\documentclass<span class="cell">{article}</span>
\usepackage<span class="cell">{xeCJK}</span><span class="comment">% 调用 xeCJK 宏包</span>
\setCJKmainfont<span class="cell">{SimSun}</span><span class="comment">% 设置 CJK 主字体为 SimSun （宋体）</span>
\begin<span class="cell">{document}</span>
你好，world!
\<span class="keyword">end</span><span class="cell">{document}</span>
</code></pre><p>如果一切顺利，你将会在屏幕右边的窗口，看见类似下图的输出结果。<br><img src="http://ww2.sinaimg.cn/large/818901c1jw1e44g5azwaej20j00kimy3.jpg" alt=""></p>
<p>如果你的 TeX 系统提示找不到字体，请换用你的操作系统中可用的中文字体。关于如何寻找你的操作系统中可用的中文字体，请参考本章最后一小节。</p>
<p>除了 “document” 环境中同时出现了中文和英文，和最原始的 Hello, world! 不同点在于，导言区中多出了两条控制序列。他们的作用我已经用注释标出了。</p>
<p>所谓的宏包，就是一系列控制序列的合集。这些控制序列太常用，以至于人们会觉得每次将他们写在导言区太过繁琐，于是将他们打包放在同一个文件中，成为所谓的宏包（台湾方面称之为“巨集套件”）。<code>\usepackage{·}</code>可以用来调用宏包。</p>
<p><code>\setCJKmainfont{·}</code>是定义在 “xeCJK” 宏包中的控制序列，它可以用来设置 CJK 主字体。</p>
<p><strong><em>请注意，TeX 系统对宏包名称和控制序列的大小写是敏感的</em></strong></p>
<h2 id=" 查看当前操作系统中的字体 ">查看当前操作系统中的字体</h2>
<p>按照如下步骤打开系统命令行（*nix 系统请打开终端）：</p>
<ul>
<li>按下<code>&lt;win&gt; + R</code>；</li>
<li>键入<code>cmd</code>, 回车。</li>
</ul>
<p>在系统命令行中输入如下命令：</p>
<pre><code>fc-list <span class="symbol">:lang=zh-cn</span> &gt; <span class="constant">C</span><span class="symbol">:</span>\font_zh-cn.txt
</code></pre><p>（相信使用 *nix 的你，一定知道如何修改上述命令达到你想要的效果）</p>
<p>打开 C 盘根目录下的 <code>C:\font_zh-cn.txt</code> 纯文本文档，里面的内容就是你当前系统可用的全部中文字体，形如：</p>
<p><img src="http://ww1.sinaimg.cn/large/818901c1jw1e44gmvz7yuj20i40actcb.jpg" alt=""></p>
<p>每一个小黑框之间的内容，就对应着一个可用的字体。这些小黑框实际上是换行符，但是由于 Windows 系统的原因，他们没有被正常显示。如果看着不爽，你可以尝试用 TeXworks 打开这个文件查看（放心，能够打开的）。以下是我用 gVim 打开的效果：</p>
<p><img src="http://ww2.sinaimg.cn/large/818901c1jw1e44gpsi9fpj20km0f478v.jpg" alt=""></p>
<p>其中的每一行，都代表着一个可用的字体。其形式如下：</p>
<pre><code><span class="tag">&lt;<span class="title">字体文件路径</span>&gt;</span>: <span class="tag">&lt;<span class="title">字体标示名 1</span>&gt;</span>, <span class="tag">&lt;<span class="title">字体表示名 2</span>&gt;</span>:Style=<span class="tag">&lt;<span class="title">字体类型</span>&gt;</span>
</code></pre><p>我们可以看到图中的倒数第四行</p>
<pre><code><span class="constant">C</span><span class="symbol">:/WINDOWS/fonts/simsun</span>.<span class="symbol">ttc:</span> 宋体,<span class="constant">SimSun</span><span class="symbol">:style=Regular</span>
</code></pre><p>出现了之前文档里调用的字体<code>SimSun</code>，此处表明该字体有两个表示名：<code>宋体</code>和<code>SimSun</code>，我们在<code>\setCJKmainfont{·}</code>中填入任意一个都有同样的效果。</p>
<p>因此，如果之前的文档无法编译通过，请在你的操作系统字体中，选取一个自己喜欢的，将它的字体表示名填入到<code>\setCJKmainfont{·}</code>中去。</p>
<h1 id=" 组织你的文章 ">组织你的文章</h1>
<p>由于新的中英混排方法的引入，这里对于每一个效果提供两份代码（如果有必要）。如果没有特别的需求，应当使用新方法。</p>
<h2 id=" 作者、标题、日期 ">作者、标题、日期</h2>
<p>保存并用 XeLaTeX 编译如下文档，查看效果：</p>
<p>新方法：</p>
<pre><code><span class="command">\documentclass</span><span class="special">[</span>UTF8<span class="special">]</span><span class="special">{</span>ctexart<span class="special">}</span>
<span class="command">\title</span><span class="special">{</span>你好，world!<span class="special">}</span>
<span class="command">\author</span><span class="special">{</span>Liam<span class="special">}</span>
<span class="command">\date</span><span class="special">{</span><span class="command">\today</span><span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\maketitle</span>
你好，world!
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</code></pre><p>旧方法：</p>
<pre><code>\documentclass{article}
%
% 设置中文字体
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\usepackage[<span class="constant">SlantFont</span>,<span class="constant">BoldFont</span>,<span class="constant">CJKchecksingle</span>,<span class="constant">CJKnumber</span>]{xeCJK}
\newcommand\fontnamehei{<span class="constant">SimHei</span>}% 黑体
\newcommand\fontnamesong{<span class="constant">SimSun</span>}% 宋体
\newcommand\fontnamekai{<span class="constant">KaiTi_GB2312</span>}% 楷体
\newcommand\fontnameyahei{<span class="constant">Yahei</span> <span class="constant">Mono</span>}% 雅黑
\defaultfontfeatures{<span class="constant">Mapping</span>=tex-text}
\setCJKmainfont[<span class="constant">BoldFont</span>=\fontnamehei,<span class="constant">ItalicFont</span>=\fontnamekai]{\fontnamesong}
\setCJKmonofont{\fontnameyahei}
\setCJKsansfont[<span class="constant">BoldFont</span>=\fontnamehei]{\fontnameyahei}
\<span class="constant">XeTeXlinebreaklocale</span> <span class="string">"zh"</span>          % 使用中文的换行风格
\<span class="constant">XeTeXlinebreakskip</span> = 0pt plus <span class="number">1</span>pt  % 调整换行逻辑的弹性大小
%
% 设置标题、作者、日期
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\title{你好，world!}
\author{<span class="constant">Liam</span>}
\date{\today}
\<span class="keyword">begin</span>{document}
\maketitle
你好，world!
\<span class="keyword">end</span>{document}
</code></pre><p>导言区复杂了很多，但和之前的文档主要的区别只有两处（新方法只有一处，此处第 2 条）。</p>
<ol>
<li>深入定义了中文字体以及断行逻辑；<ul>
<li>调用<code>xeCJK</code>宏包的时候，添加了一些可选参数；</li>
<li>使用<code>\newcommand</code>命令，将系统字体名映射为相应的命令，方便维护；</li>
<li>在定义主字体的时候，用<code>[]</code>添加了一些可选参数，增强功能。</li>
</ul>
</li>
<li>定义了 标题、作者、日期。</li>
</ol>
<p>在<code>document</code>环境中，除了原本的<code>你好，world!</code>，还多了一个控制序列<code>maketitle</code>。这个控制序列能将在导言区中定义的 标题、作者、日期 按照预定的格式展现出来。</p>
<blockquote>
<p>使用<code>titling</code>宏包可以修改上述默认格式。参考<a href="http://texdoc.net/texmf-dist/doc/latex/titling/titling.pdf" target="_blank">TeXdoc</a>.</p>
</blockquote>
<h2 id=" 章节和段落 ">章节和段落</h2>
<p>保存并用 XeLaTeX 编译如下文档，查看效果：</p>
<p>新方法：</p>
<pre><code>\documentclass[UTF8]{ctexart}
\title{你好，world!}
\author{Liam}
\<span class="type">date</span>{\today}
\begin{document}
\maketitle
\section{你好中国}
中国在 East Asia.
\subsection{Hello Beijing}
北京是 capital <span class="keyword">of</span> China.
\subsubsection{Hello Dongcheng District}
\<span class="property">paragraph</span>{Tian'anmen Square}
<span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">the</span> center <span class="keyword">of</span> Beijing
\subparagraph{Chairman Mao}
<span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">the</span> center <span class="keyword">of</span> 天安门广场。
\subsection{Hello 山东}
\<span class="property">paragraph</span>{山东大学} <span class="keyword">is</span> one <span class="keyword">of</span> <span class="keyword">the</span> best university <span class="keyword">in</span> 山东。
\<span class="keyword">end</span>{document}
</code></pre><p>旧方法：</p>
<pre><code>\documentclass{article}
%
% 设置中文字体
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\usepackage[<span class="constant">SlantFont</span>,<span class="constant">BoldFont</span>,<span class="constant">CJKchecksingle</span>,<span class="constant">CJKnumber</span>]{xeCJK}
\newcommand\fontnamehei{<span class="constant">SimHei</span>}
\newcommand\fontnamesong{<span class="constant">SimSun</span>}
\newcommand\fontnamekai{<span class="constant">KaiTi_GB2312</span>}%<span class="constant">KaiTi</span>
\newcommand\fontnameyahei{<span class="constant">Yahei</span> <span class="constant">Mono</span>}
\defaultfontfeatures{<span class="constant">Mapping</span>=tex-text}
\setCJKmainfont[<span class="constant">BoldFont</span>=\fontnamehei,<span class="constant">ItalicFont</span>=\fontnamekai]{\fontnamesong}
\setCJKmonofont{\fontnameyahei}
\setCJKsansfont[<span class="constant">BoldFont</span>=\fontnamehei]{\fontnameyahei}
\<span class="constant">XeTeXlinebreaklocale</span> <span class="string">"zh"</span>          % 使用中文的换行风格
\<span class="constant">XeTeXlinebreakskip</span> = 0pt plus <span class="number">1</span>pt  % 调整换行逻辑的弹性大小
%
% 设置标题、作者、日期
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\title{你好，world!}
\author{<span class="constant">Liam</span>}
\date{\today}
\<span class="keyword">begin</span>{document}
\maketitle
\section{你好中国}
中国在<span class="constant">East</span> <span class="constant">Asia</span>.
\subsection{<span class="constant">Hello</span> <span class="constant">Beijing</span>}
北京是 capital of <span class="constant">China</span>.
\subsubsection{<span class="constant">Hello</span> <span class="constant">Dongcheng</span> <span class="constant">District</span>}
\paragraph{<span class="constant">Tian</span><span class="string">'anmen Square}
is in the center of Beijing
\subparagraph{Chairman Mao}
is in the center of 天安门广场。
\subsection{Hello 山东}
\paragraph{山东大学} is one of the best university in 山东。
\end{document}</span>
</code></pre><p>在文档类 <code>article</code>/<code>ctexart</code> 中，定义了五个控制序列来调整行文组织结构。他们分别是</p>
<ul>
<li><code>\section{·}</code></li>
<li><code>\subsection{·}</code></li>
<li><code>\subsubsection{·}</code></li>
<li><code>\paragraph{·}</code></li>
<li><code>\subparagraph{·}</code></li>
</ul>
<blockquote>
<p>在<code>report</code>/<code>ctexrep</code>中，还有<code>\chapter{·}</code>；在文档类<code>book</code>/<code>ctexbook</code>中，还定义了<code>\part{·}</code>。</p>
</blockquote>
<h2 id=" 插入目录 ">插入目录</h2>
<p>在上一节的文档中，找到<code>\maketitle</code>，在它的下面插入控制序列<code>\tableofcontents</code>，保存并用 XeLaTeX 编译<strong>两次</strong>，观察效果：</p>
<p>新方法：</p>
<pre><code>\documentclass[UTF8]{ctexart}
\title{你好，world!}
\author{Liam}
\<span class="type">date</span>{\today}
\begin{document}
\maketitle
\tableofcontents
\section{你好中国}
中国在 East Asia.
\subsection{Hello Beijing}
北京是 capital <span class="keyword">of</span> China.
\subsubsection{Hello Dongcheng District}
\<span class="property">paragraph</span>{Tian'anmen Square}
<span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">the</span> center <span class="keyword">of</span> Beijing
\subparagraph{Chairman Mao}
<span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">the</span> center <span class="keyword">of</span> 天安门广场。
\subsection{Hello 山东}
\<span class="property">paragraph</span>{山东大学} <span class="keyword">is</span> one <span class="keyword">of</span> <span class="keyword">the</span> best university <span class="keyword">in</span> 山东。
\<span class="keyword">end</span>{document}
</code></pre><p>旧方法：</p>
<pre><code>\documentclass{article}
%
% 设置中文字体
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\usepackage[<span class="constant">SlantFont</span>,<span class="constant">BoldFont</span>,<span class="constant">CJKchecksingle</span>,<span class="constant">CJKnumber</span>]{xeCJK}
\newcommand\fontnamehei{<span class="constant">SimHei</span>}
\newcommand\fontnamesong{<span class="constant">SimSun</span>}
\newcommand\fontnamekai{<span class="constant">KaiTi_GB2312</span>}%<span class="constant">KaiTi</span>
\newcommand\fontnameyahei{<span class="constant">Yahei</span> <span class="constant">Mono</span>}
\defaultfontfeatures{<span class="constant">Mapping</span>=tex-text}
\setCJKmainfont[<span class="constant">BoldFont</span>=\fontnamehei,<span class="constant">ItalicFont</span>=\fontnamekai]{\fontnamesong}
\setCJKmonofont{\fontnameyahei}
\setCJKsansfont[<span class="constant">BoldFont</span>=\fontnamehei]{\fontnameyahei}
\<span class="constant">XeTeXlinebreaklocale</span> <span class="string">"zh"</span>          % 使用中文的换行风格
\<span class="constant">XeTeXlinebreakskip</span> = 0pt plus <span class="number">1</span>pt  % 调整换行逻辑的弹性大小
%
% 设置标题、作者、日期
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\title{你好，world!}
\author{<span class="constant">Liam</span>}
\date{\today}
\<span class="keyword">begin</span>{document}
\maketitle
\tableofcontents
\section{你好中国}
中国在<span class="constant">East</span> <span class="constant">Asia</span>.

中国在<span class="constant">East</span> <span class="constant">Asia</span>.
\subsection{<span class="constant">Hello</span> <span class="constant">Beijing</span>}
北京是 capital of <span class="constant">China</span>.
\subsubsection{<span class="constant">Hello</span> <span class="constant">Dongcheng</span> <span class="constant">District</span>}
\paragraph{<span class="constant">Tian</span><span class="string">'anmen Square}
is in the center of Beijing
\subparagraph{Chairman Mao}
is in the center of 天安门广场。
\subsection{Hello 山东}
\paragraph{山东大学} is one of the best university in 山东。
\end{document}</span>
</code></pre><blockquote>
<p>试试交换<code>\maketitle</code>和<code>\tableofcontents</code>的顺序，看看会发生什么。</p>
</blockquote>
<p>请注意，在“你好中国”这一节中，两次“中国在 East Asia.”中夹有一个空行，但输出却只有一个换行并没有空行。这是因为 LaTeX 将一个换行当做是一个简单的空格来处理，如果需要换行另起一段，则需要用两个换行（一个空行）来实现。</p>
<h1 id=" 插入数学公式 ">插入数学公式</h1>
<p>首先恭喜你看到这里。如果前面的几个文档你都认真编译过了，那么你已经可以胜任许多文档的排版工作。下面我们进入 LaTeX 最为犀利的部分。</p>
<p>这部分的演示中，为了节省篇幅，将取消导言区中中文支持的部分。在实际使用中，你只需要将导言区中的相关部分加上，就可以同时使用中文，并编写数学公式了——这并不冲突。</p>
<p>为了使用 AMS-LaTeX 提供的数学功能，我们需要在导言区加载<code>amsmath</code>宏包：</p>
<pre><code>\usepackage<span class="list">{amsmath}</span>
</code></pre><h2 id=" 数学模式 ">数学模式</h2>
<p>LaTeX 的数学模式有两种：行内模式 (inline) 和行间模式 (display)。前者在正文的行文中，插入数学公式；后者独立排列单独成行。</p>
<p>在行文中，使用<code>$ ... $</code>可以插入行内公式，使用<code>\[ ... \]</code>可以插入行间公式，如果需要对行间公式进行编号，可以使用<code>equation</code>环境：<br>    \begin{equaion}<br>    …<br>    \end{equation}</p>
<blockquote>
<p>行内公式也可以使用<code>\(...\)</code>来插入，略嫌麻烦。无编号的行间公式也可以使用<code>$$ ... $$</code>来插入，但是这样做会改变行文的默认行间距，不推荐。</p>
</blockquote>
<h2 id=" 上下标 ">上下标</h2>
<p>示例代码（请保存后，使用 XeLaTeX 编译，查看效果）：</p>
<pre><code>\documentclass{article}
%
% 数学环境支持
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\usepackage{amsmath}
\<span class="keyword">begin</span>{document}
<span class="constant">Einstein</span> <span class="string">'s $E=mc^2$.

\[ E=mc^2. \]

\begin{equation}
E=mc^2.
\end{equation}
\end{document}</span>
</code></pre><p>值得一提的是，行内公式和行间公式对标点的要求是不同的。行内公式的标点，应该放在数学模式的限定符之外，而行间公式则应该放在数学模式限定符之内。</p>
<p>在数学模式中，需要表示上标，可以使用<code>^</code>来实现（下标则是<code>_</code>）。<strong>它默认只作用于之后的一个字符</strong>，如果想对连续的几个字符起作用，请将这些字符用花括号<code>{}</code>括起来，例如：</p>
<pre><code><span class="command">\[</span> z = r<span class="command">\cdot</span> e^<span class="special">{</span>2<span class="command">\pi</span> i<span class="special">}</span>. <span class="command">\]</span>
</code></pre><h2 id=" 根式与分式 ">根式与分式</h2>
<p>根式用<code>\sqrt{·}</code>来表示，分式用<code>\frac{·}{·}</code>来表示（第一个参数为分子，第二个为分母）。</p>
<p>示例代码（请保存后，使用 XeLaTeX 编译，查看效果）：</p>
<pre><code>\documentclass{article}
%
% 数学环境支持
% <span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span><span class="string">%%%</span>
\usepackage{amsmath}
\<span class="keyword">begin</span>{document}
<span class="variable">$\</span>sqrt{x}<span class="variable">$,</span> <span class="variable">$\</span>frac{<span class="number">1</span>}{<span class="number">2</span>}<span class="variable">$.</span>

\[ \sqrt{x}, \]

\[ \frac{<span class="number">1</span>}{<span class="number">2</span>}. \]
\<span class="keyword">end</span>{document}
</code></pre><p>可以发现，在行间公式和行内公式中，分式的输出效果是有差异的。如果要强制行内模式的分式显示为行间模式的大小，可以使用<code>\dfrac</code>, 反之可以使用<code>\tfrac</code>。</p>
<h2 id=" 运算符 ">运算符</h2>
<p>一些小的运算符，可以在数学模式下直接输入；另一些需要用控制序列生成，如</p>
<pre><code><span class="command">\[</span> <span class="command">\pm</span><span class="command">\;</span> <span class="command">\times</span> <span class="command">\;</span> <span class="command">\div</span><span class="command">\;</span> <span class="command">\cdot</span><span class="command">\;</span> <span class="command">\cap</span><span class="command">\;</span> <span class="command">\cup</span><span class="command">\;</span>
<span class="command">\geq</span><span class="command">\;</span> <span class="command">\leq</span><span class="command">\;</span> <span class="command">\neq</span><span class="command">\;</span> <span class="command">\approx</span> <span class="command">\;</span> <span class="command">\equiv</span> <span class="command">\]</span>
</code></pre><p>连加、连乘、极限、积分等大型运算符分别用<code>\sum</code>, <code>\prod</code>, <code>\lim</code>, <code>\int</code>生成。他们的上下标在行内公式中被压缩，以适应行高。我们可以用<code>\limits</code>和<code>\nolimits</code>来强制显式地指定是否压缩这些上下标。例如：</p>
<pre><code><span class="formula">$ <span class="command">\sum</span>_<span class="special">{</span>i=1<span class="special">}</span>^n i<span class="command">\quad</span> <span class="command">\prod</span>_<span class="special">{</span>i=1<span class="special">}</span>^n $</span>
<span class="formula">$ <span class="command">\sum</span><span class="command">\limits</span> _<span class="special">{</span>i=1<span class="special">}</span>^n i<span class="command">\quad</span> <span class="command">\prod</span><span class="command">\limits</span> _<span class="special">{</span>i=1<span class="special">}</span>^n $</span>
<span class="command">\[</span> <span class="command">\lim</span>_<span class="special">{</span>x<span class="command">\to</span>0<span class="special">}</span>x^2 <span class="command">\quad</span> <span class="command">\int</span>_a^b x^2 dx <span class="command">\]</span>
<span class="command">\[</span> <span class="command">\lim</span><span class="command">\nolimits</span> _<span class="special">{</span>x<span class="command">\to</span>0<span class="special">}</span>x^2<span class="command">\quad</span> <span class="command">\int</span><span class="command">\nolimits</span>_a^b x^2 dx <span class="command">\]</span>
</code></pre><p>多重积分可以使用<code>\iint</code>, <code>\iiint</code>, <code>\iiiint</code>, <code>\idotsint</code> 等命令输入。</p>
<pre><code><span class="command">\[</span> <span class="command">\iint</span><span class="command">\quad</span> <span class="command">\iiint</span><span class="command">\quad</span> <span class="command">\iiiint</span><span class="command">\quad</span> <span class="command">\idotsint</span> <span class="command">\]</span>
</code></pre><h2 id=" 分隔符 ">分隔符</h2>
<p>各种括号用<code>()</code>, <code>[]</code>, <code>\{\}</code>, <code>\langle\rangle</code> 等命令表示；注意花括号通常用来输入命令和环境的参数，所以在数学公式中它们前面要加<code>\</code>。因为 LaTeX 中<code>|</code>和<code>\|</code>的应用过于随意，amsmath 宏包推荐用<code>\lvert\rvert</code>和<code>\lVert\rVert</code>取而代之。</p>
<p>为了调整这些分隔符的大小，amsmath 宏包推荐使用<code>\big</code>, <code>\Big</code>, <code>\bigg</code>, <code>\Bigg</code>放在上述括号前面调整大小。</p>
<pre><code><span class="command">\[</span> <span class="command">\Bigg</span>(<span class="command">\bigg</span>(<span class="command">\Big</span>(<span class="command">\big</span>((x)<span class="command">\big</span>)<span class="command">\Big</span>)<span class="command">\bigg</span>)<span class="command">\Bigg</span>) <span class="command">\]</span>
<span class="command">\[</span> <span class="command">\Bigg</span><span class="special">[</span><span class="command">\bigg</span><span class="special">[</span><span class="command">\Big</span><span class="special">[</span><span class="command">\big</span><span class="special">[</span><span class="special">[</span>x<span class="special">]</span><span class="command">\big</span><span class="special">]</span><span class="command">\Big</span><span class="special">]</span><span class="command">\bigg</span><span class="special">]</span><span class="command">\Bigg</span><span class="special">]</span> <span class="command">\]</span>
<span class="command">\[</span> <span class="command">\Bigg</span> <span class="command">\{</span><span class="command">\bigg</span> <span class="command">\{</span><span class="command">\Big</span> <span class="command">\{</span><span class="command">\big</span> <span class="command">\{</span><span class="command">\{</span>x<span class="command">\}</span><span class="command">\big</span> <span class="command">\}</span><span class="command">\Big</span> <span class="command">\}</span><span class="command">\bigg</span> <span class="command">\}</span><span class="command">\Bigg</span><span class="command">\}</span> <span class="command">\]</span>
<span class="command">\[</span> <span class="command">\Bigg</span><span class="command">\langle</span><span class="command">\bigg</span><span class="command">\langle</span><span class="command">\Big</span><span class="command">\langle</span><span class="command">\big</span><span class="command">\langle</span><span class="command">\langle</span> x
<span class="command">\rangle</span><span class="command">\big</span><span class="command">\rangle</span><span class="command">\Big</span><span class="command">\rangle</span><span class="command">\bigg</span><span class="command">\rangle</span><span class="command">\Bigg</span><span class="command">\rangle</span> <span class="command">\]</span>
<span class="command">\[</span> <span class="command">\Bigg</span><span class="command">\lvert</span><span class="command">\bigg</span><span class="command">\lvert</span><span class="command">\Big</span><span class="command">\lvert</span><span class="command">\big</span><span class="command">\lvert</span><span class="command">\lvert</span> x
<span class="command">\rvert</span><span class="command">\big</span><span class="command">\rvert</span><span class="command">\Big</span><span class="command">\rvert</span><span class="command">\bigg</span><span class="command">\rvert</span><span class="command">\Bigg</span><span class="command">\rvert</span> <span class="command">\]</span>
<span class="command">\[</span> <span class="command">\Bigg</span><span class="command">\lVert</span><span class="command">\bigg</span><span class="command">\lVert</span><span class="command">\Big</span><span class="command">\lVert</span><span class="command">\big</span><span class="command">\lVert</span><span class="command">\lVert</span> x
<span class="command">\rVert</span><span class="command">\big</span><span class="command">\rVert</span><span class="command">\Big</span><span class="command">\rVert</span><span class="command">\bigg</span><span class="command">\rVert</span><span class="command">\Bigg</span><span class="command">\rVert</span> <span class="command">\]</span>
</code></pre><p><img src="http://ww2.sinaimg.cn/large/818901c1jw1e44jk66wwfj204x0a4aa0.jpg" alt=""></p>
<h2 id=" 省略号 ">省略号</h2>
<p>省略号用<code>\dots</code>, <code>\cdots</code>, <code>\vdots</code>, <code>\ddots</code> 等命令表示。<code>\dots</code> 和<code>\cdots</code>的纵向位置不同，前者一般用于有下标的序列。</p>
<pre><code><span class="command">\[</span> x_1,x_2,<span class="command">\dots</span> ,x_n<span class="command">\quad</span> 1,2,<span class="command">\cdots</span> ,n<span class="command">\quad</span>
<span class="command">\vdots</span><span class="command">\quad</span> <span class="command">\ddots</span> <span class="command">\]</span>
</code></pre><h2 id=" 矩阵 ">矩阵</h2>
<p>amsmath 的<code>pmatrix</code>, <code>bmatrix</code>, <code>Bmatrix</code>, <code>vmatrix</code>, <code>Vmatrix</code> 等环境可以在矩阵两边加上各种分隔符。</p>
<pre><code><span class="command">\[</span> <span class="command">\begin</span><span class="special">{</span>pmatrix<span class="special">}</span> a<span class="special">&amp;</span>b<span class="command">\\</span>c<span class="special">&amp;</span>d <span class="command">\end</span><span class="special">{</span>pmatrix<span class="special">}</span> <span class="command">\quad</span>
<span class="command">\begin</span><span class="special">{</span>bmatrix<span class="special">}</span> a<span class="special">&amp;</span>b<span class="command">\\</span>c<span class="special">&amp;</span>d <span class="command">\end</span><span class="special">{</span>bmatrix<span class="special">}</span> <span class="command">\quad</span>
<span class="command">\begin</span><span class="special">{</span>Bmatrix<span class="special">}</span> a<span class="special">&amp;</span>b<span class="command">\\</span>c<span class="special">&amp;</span>d <span class="command">\end</span><span class="special">{</span>Bmatrix<span class="special">}</span> <span class="command">\quad</span>
<span class="command">\begin</span><span class="special">{</span>vmatrix<span class="special">}</span> a<span class="special">&amp;</span>b<span class="command">\\</span>c<span class="special">&amp;</span>d <span class="command">\end</span><span class="special">{</span>vmatrix<span class="special">}</span> <span class="command">\quad</span>
<span class="command">\begin</span><span class="special">{</span>Vmatrix<span class="special">}</span> a<span class="special">&amp;</span>b<span class="command">\\</span>c<span class="special">&amp;</span>d <span class="command">\end</span><span class="special">{</span>Vmatrix<span class="special">}</span> <span class="command">\]</span>
</code></pre><p>效果图：</p>
<p><img src="http://ww2.sinaimg.cn/large/818901c1jw1e44jpqbz2aj208k024744.jpg" alt=""></p>
<p>使用<code>smallmatrix</code>环境，可以生成行内公式的小矩阵。</p>
<pre><code><span class="constant">Marry</span> has a little matrix <span class="variable">$ </span>( \<span class="keyword">begin</span>{smallmatrix} a&amp;b\\c&amp;d \<span class="keyword">end</span>{smallmatrix} ) <span class="variable">$.</span>
</code></pre><p>效果图：</p>
<p><img src="http://ww3.sinaimg.cn/large/818901c1jw1e44jsd9ldbj20680200si.jpg" alt=""></p>
<h2 id=" 多行公式 ">多行公式</h2>
<p>有的公式特别长，我们需要手动为他们换行；有几个公式是一组，我们需要将他们放在一起；还有些类似分段函数，我们需要给它加上一个左边的花括号。</p>
<h3 id=" 长公式 ">长公式</h3>
<h4 id=" 不对齐 ">不对齐</h4>
<p>无须对齐的长公式可以使用<code>multline</code>环境。</p>
<pre><code>\begin<span class="cell">{multline}</span>
x = a+b+c+<span class="cell">{}</span> \\
d+e+f+g
\<span class="keyword">end</span><span class="cell">{multline}</span>
</code></pre><p>效果：</p>
<p><img src="http://ww2.sinaimg.cn/large/818901c1jw1e44jzfychej20dv02sjr6.jpg" alt=""></p>
<p>如果不需要编号，可以使用<code>multiline*</code>环境代替。</p>
<h4 id=" 对齐 ">对齐</h4>
<p>需要对齐的公式，可以使用<code>aligned</code><em>次环境</em>来实现，它必须包含在数学环境之内。</p>
<pre><code><span class="command">\[</span><span class="command">\begin</span><span class="special">{</span>aligned<span class="special">}</span>
x =<span class="special">{</span><span class="special">}</span><span class="special">&amp;</span> a+b+c+<span class="special">{</span><span class="special">}</span> <span class="command">\\</span>
<span class="special">&amp;</span>d+e+f+g
<span class="command">\end</span><span class="special">{</span>aligned<span class="special">}</span><span class="command">\]</span>
</code></pre><p>效果图：</p>
<p><img src="http://ww3.sinaimg.cn/large/818901c1jw1e44k2acde4j205g02ft8h.jpg" alt=""></p>
<h3 id=" 公式组 ">公式组</h3>
<p>无需对齐的公式组可以使用<code>gather</code>环境，需要对齐的公式组可以使用<code>aligned</code>环境。他们都带有编号，如果不需要编号可以使用带星花的版本。</p>
<pre><code><span class="command">\begin</span><span class="special">{</span>gather<span class="special">}</span>
a = b+c+d <span class="command">\\</span>
x = y+z
<span class="command">\end</span><span class="special">{</span>gather<span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>align<span class="special">}</span>
a <span class="special">&amp;</span>= b+c+d <span class="command">\\</span>
x <span class="special">&amp;</span>= y+z
<span class="command">\end</span><span class="special">{</span>align<span class="special">}</span>
</code></pre><p>效果：</p>
<p><img src="http://ww4.sinaimg.cn/large/818901c1jw1e44k5od3xaj209u04lweb.jpg" alt=""></p>
<h3 id=" 分段函数 ">分段函数</h3>
<p>分段函数可以用<code>cases</code>次环境来实现，它必须包含在数学环境之内。</p>
<pre><code><span class="command">\[</span> y=<span class="command">\ </span>begin<span class="special">{</span>cases<span class="special">}</span>
-x,<span class="command">\quad</span> x<span class="command">\leq</span> 0 <span class="command">\\</span>
x,<span class="command">\quad</span> x&gt;0
<span class="command">\end</span><span class="special">{</span>cases<span class="special">}</span> <span class="command">\]</span>
</code></pre><p>效果图：</p>
<p><img src="http://ww1.sinaimg.cn/large/818901c1jw1e44k7zto1wj205o01pt8i.jpg" alt=""></p>
<h1 id=" 插入图片和表格 ">插入图片和表格</h1>
<h2 id=" 图片 ">图片</h2>
<p>在 LaTeX 中插入图片，有很多种方式。最好用的应当属利用<code>graphicx</code>宏包提供的<code>\includegraphics</code>命令。比如你在你的 TeX 源文件同目录下，有名为 a.jpg 的图片，你可以用这样的方式将它插入到输出文档中：</p>
<pre><code>\documentclass<span class="cell">{article}</span>
\usepackage<span class="cell">{graphicx}</span>
\begin<span class="cell">{document}</span>
\includegraphics<span class="cell">{a.jpg}</span>
\<span class="keyword">end</span><span class="cell">{document}</span>
</code></pre><p>图片可能很大，超过了输出文件的纸张大小，或者干脆就是你自己觉得输出的效果不爽。这时候你可以用<code>\includegraphics</code>控制序列的可选参数来控制。比如</p>
<pre><code><span class="command">\includegraphics</span><span class="special">[</span>width = .8<span class="command">\textwidth</span><span class="special">]</span><span class="special">{</span>a.jpg<span class="special">}</span>
</code></pre><p>这样图片的宽度会被缩放至页面宽度的百分之八十，图片的总高度会按比例缩放。</p>
<blockquote>
<p><code>\includegraphics</code>控制序列还有若干其他的可选参数可供使用，一般并用不到。感兴趣的话，可以去查看<a href="http://texdoc.net/texmf-dist/doc/latex/graphics/graphicx.pdf" target="_blank">该宏包的文档</a>。</p>
</blockquote>
<h2 id=" 表格 ">表格</h2>
<p><code>tabular</code>环境提供了最简单的表格功能。它用<code>\hline</code>命令表示横线，<code>|</code>表示竖线；用<code>&amp;</code>来分列，用<code>\\</code>来换行；每列可以采用居中、居左、居右等横向对齐方式，分别用<code>l</code>、<code>c</code>、<code>r</code> 来表示。</p>
<pre><code><span class="command">\begin</span><span class="special">{</span>tabular<span class="special">}</span><span class="special">{</span>|l|c|r|<span class="special">}</span>
 <span class="command">\hline</span>
操作系统<span class="special">&amp;</span> 发行版<span class="special">&amp;</span> 编辑器<span class="command">\\</span>
 <span class="command">\hline</span>
Windows <span class="special">&amp;</span> MikTeX <span class="special">&amp;</span> TexMakerX <span class="command">\\</span>
 <span class="command">\hline</span>
Unix/Linux <span class="special">&amp;</span> teTeX <span class="special">&amp;</span> Kile <span class="command">\\</span>
 <span class="command">\hline</span>
Mac OS <span class="special">&amp;</span> MacTeX <span class="special">&amp;</span> TeXShop <span class="command">\\</span>
 <span class="command">\hline</span>
通用<span class="special">&amp;</span> TeX Live <span class="special">&amp;</span> TeXworks <span class="command">\\</span>
 <span class="command">\hline</span>
<span class="command">\end</span><span class="special">{</span>tabular<span class="special">}</span>
</code></pre><p>效果：</p>
<p><img src="http://ww1.sinaimg.cn/large/818901c1jw1e44ku9n696j20cj05haad.jpg" alt=""></p>
<h2 id=" 浮动体 ">浮动体</h2>
<p>插图和表格通常需要占据大块空间，所以在文字处理软件中我们经常需要调整他们的位置。<code>figure</code>和<code>table</code>环境可以自动完成这样的任务；这种自动调整位置的环境称作浮动体 (float)。我们以<code>figure</code>为例。</p>
<pre><code><span class="command">\begin</span><span class="special">{</span>figure<span class="special">}</span><span class="special">[</span>htbp<span class="special">]</span>
<span class="command">\centering</span>
<span class="command">\includegraphics</span><span class="special">{</span>a.jpg<span class="special">}</span>
<span class="command">\caption</span><span class="special">{</span>有图有真相<span class="special">}</span>
<span class="command">\label</span><span class="special">{</span>fig:myphoto<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>figure<span class="special">}</span>
</code></pre><p>“htbp” 选项用来指定插图的理想位置，这几个字母分别代表 here, top, bottom, float page，也就是就这里、页顶、页尾、浮动页 (专门放浮动体的单独页面) 。<code>\centering</code>用来使插图居中；<code>\caption</code>命令设置插图标题，LaTeX 会自动给浮动体的标题加上编号。注意<code>\label</code>应该放在标题之后。</p>
<blockquote>
<p>图片和表格的各种特殊效果，限于篇幅此处无法详叙。请查看最后一章推荐的文档。</p>
</blockquote>
<h1 id=" 版面设置 ">版面设置</h1>
<h2 id=" 页边距 ">页边距</h2>
<p>设置页边距，推荐使用<code>geometry</code>宏包。可以在<a href="http://texdoc.net/texmf-dist/doc/latex/geometry/geometry.pdf" target="_blank">这里</a>查看它的说明文档。</p>
<p>比如我希望，将纸张的长度设置为 20cm、宽度设置为 15cm、左边距 1cm、右边距 2cm、上边距 3cm、下边距 4cm，可以在导言区加上这样几行：</p>
<pre><code>\usepackage<span class="list">{geometry}</span>
\geometry<span class="list">{papersize={20cm,15cm}</span>}
\geometry<span class="list">{left=1cm,right=2cm,top=3cm,bottom=4cm}</span>
</code></pre><h2 id=" 页眉页脚 ">页眉页脚</h2>
<p>设置页眉页脚，推荐使用<code>fancyhdr</code>宏包。可以在<a href="http://texdoc.net/texmf-dist/doc/latex/fancyhdr/fancyhdr.pdf" target="_blank">这里</a>查看它的说明文档。</p>
<p>比如我希望，在页眉左边写上我的名字，中间写上今天的日期，右边写上我的电话；页脚的正中写上页码；页眉和正文直接有一道宽为 0.4pt 的横线分割，可以在导言区加上如下几行：</p>
<pre><code><span class="command">\usepackage</span><span class="special">{</span>fancyhdr<span class="special">}</span>
<span class="command">\pagestyle</span><span class="special">{</span>fancy<span class="special">}</span>
<span class="command">\lhead</span><span class="special">{</span><span class="command">\author</span><span class="special">}</span>
<span class="command">\chead</span><span class="special">{</span><span class="command">\date</span><span class="special">}</span>
<span class="command">\rhead</span><span class="special">{</span>152xxxxxxxx<span class="special">}</span>
<span class="command">\lfoot</span><span class="special">{</span><span class="special">}</span>
<span class="command">\cfoot</span><span class="special">{</span><span class="command">\thepage</span><span class="special">}</span>
<span class="command">\rfoot</span><span class="special">{</span><span class="special">}</span>
<span class="command">\renewcommand</span><span class="special">{</span><span class="command">\headrulewidth</span><span class="special">}</span><span class="special">{</span>0.4pt<span class="special">}</span>
<span class="command">\renewcommand</span><span class="special">{</span><span class="command">\headwidth</span><span class="special">}</span><span class="special">{</span><span class="command">\textwidth</span><span class="special">}</span>
<span class="command">\renewcommand</span><span class="special">{</span><span class="command">\footrulewidth</span><span class="special">}</span><span class="special">{</span>0pt<span class="special">}</span>
</code></pre><h2 id=" 首行缩进 ">首行缩进</h2>
<p>中国人写文章，习惯每一段的段首都空出两个中文汉字的长度。美国人没有这个习惯，他们每一小节的段首都顶格。为了解决这个问题，我们可以在导言区调用<code>\usepackage{indentfirst}</code>.</p>
<p>就算是这样，首行缩进的长度，仍然不符合中国人的习惯。我们可以在导言区添加这样的控制序列<code>\setlength{\parindent}{2.45em}</code>来调整首行缩进的大小。这里的 2.45em 是中文小四号字大小两个中文字的长度。</p>
<h2 id=" 行间距 ">行间距</h2>
<p>我们可以通过<code>setspace</code>宏包提供的命令来调整行间距。比如在导言区添加如下内容，可以将行距设置为 1.5 倍：</p>
<pre><code><span class="command">\usepackage</span><span class="special">{</span>setspace<span class="special">}</span>
<span class="command">\onehalfspacing</span>
</code></pre><p>具体可以查看该宏包的<a href="http://texdoc.net/texmf-dist/doc/latex/setspace/README" target="_blank">文档</a>。</p>
<h2 id=" 段间距 ">段间距</h2>
<p>我们可以通过修改计数器<code>\parskip</code>的值来调整段间距。例如在导言区添加以下内容</p>
<pre><code>\addtolength<span class="list">{\parskip}</span><span class="list">{.4em}</span>
</code></pre><p>则可以在原有的基础上，增加段间距 0.4em. 如果需要减小段间距，只需将该数值改为负值即可。</p>
<h1 id="TeX_ 家族 ">TeX 家族</h1>
<p>恭喜你终于看到了这里。如果你认真完成了上面所有的练习，并琢磨了其中的意义，相信你已经可以用 LaTeX 排版出漂亮的文档了。现在我们说一点历史，帮助你更好地理解 TeX 这个系统。</p>
<p>带有 TeX 的词，仅仅是本文就已经提到了 TeX, LaTeX, XeLaTeX. 通常中国学生面对不了解意思的一群形近单词，都会有一种“本能的恐惧”（笑~）。<br>因此，“大神们”在为新手介绍 TeX 的时候，如果互相争论 “XXTeX 比 YYTeX 好”或者是“XXTeX 的 YYTeX 如何如何”，往往会蹦出下面这些带有 TeX 的词汇：<br>TeX, pdfTeX, XeTeX, LuaTeX, LaTeX, pdfLaTeX, XeLaTeX …</p>
<p>事实上，这部分的内容太过复杂，我自己的了解也实在有限。所以下面这部分的内容也只能是对我了解到的知识的一个概括，甚至可能有些许谬误。所以大家只需要将这部分的内容当做是一个参考就可以了。</p>
<h2 id="TeX_-_LaTeX">TeX - LaTeX</h2>
<p>TeX 是高德纳（Donald Ervin Knuth，1938 年 1 月 10 日 —）教授愤世嫉俗（大雾；追求完美）做出来的排版引擎，同时也是该引擎使用的标记语言（Markup Lang）的名称。这里所谓的引擎，是指能够实现断行、分页等操作的程序（请注意这并不是定义）；这里的标记语言，是指一种将控制命令和文本结合起来的格式，它的主体是其中的文本而控制命令则实现一些特殊效果（同样请注意这并不是定义）。</p>
<blockquote>
<p>你可以在<a href="http://en.wikipedia.org/wiki/TeX" target="_blank">这里</a>找到关于 TeX 引擎的具体描述；</p>
<p>你可以在<a href="http://en.wikipedia.org/wiki/Markup_language" target="_blank">这里</a>找到关于标记语言的具体描述。</p>
</blockquote>
<p>而 LaTeX 则是 L. Lamport （1941 年 2 月 7 日 — ） 教授开发的基于 TeX 的排版系统。实际上 LaTeX 利用 TeX 的控制命令，定义了许多新的控制命令并封装成一个可执行文件。这个可执行文件会去解释 LaTeX 新定义的命令成为 TeX 的控制命令，并最终交由 TeX 引擎进行排版。</p>
<blockquote>
<p>实际上，LaTeX 是基于一个叫做 plain TeX 的格式的。plain TeX 是高德纳教授为了方便用户，自己基于原始的 TeX 定义的格式，但实际上 plain TeX 的命令仍然十分晦涩。至于原始的 TeX 直接使用的人就更少了，因此 plain TeX 格式逐渐就成为了 TeX 格式的同义词，尽管他们事实上是不同的。</p>
</blockquote>
<p>因此在 TeX - LaTeX 组合中，</p>
<ol>
<li>最终进行断行、分页等操作的，是 TeX 引擎；</li>
<li>LaTeX 实际上是一个工具，它将用户按照它的格式编写的文档解释成 TeX 引擎能理解的形式并交付给 TeX 引擎处理，再将最终结果返回给用户。</li>
</ol>
<h2 id="pdfTeX_-_pdfLaTeX">pdfTeX - pdfLaTeX</h2>
<p>TeX 系统生成的文件是 <em>dvi</em> 格式，虽然可以用其他程序将其转换为例如 pdf 等更为常见的格式，但是毕竟不方便。</p>
<blockquote>
<p>dvi 格式是为了排版而产生的，它本身并不支持所谓的“交叉引用”，pdfTeX 直接输出 pdf 格式的文档，这也是 pdfTeX 相对 TeX 进步（易用性方面）的地方。</p>
</blockquote>
<p>为了解决这个问题，Hàn Thế Thành 博士在他的博士论文中提出了 pdfTeX 这个对 TeX 引擎的扩展。二者最主要的差别就是 pdfTeX 直接输出 pdf 格式文档，而 TeX 引擎则输出 dvi 格式的文档。</p>
<blockquote>
<p>pdfTeX 的信息可以查看<a href="http://en.wikipedia.org/wiki/PdfTeX" target="_blank">wiki</a>.</p>
</blockquote>
<p>pdfLaTeX 这个程序的主要工作依旧是将 LaTeX 格式的文档进行解释，不过此次是将解释之后的结果交付给 pdfTeX 引擎处理。</p>
<h2 id="XeTeX_-_XeLaTeX">XeTeX - XeLaTeX</h2>
<p>高德纳教授在实现 TeX 的当初并没有考虑到中日韩等字符的处理，而只支持 ASCII 字符。这并不是说中日韩字符就无法使用 TeX 引擎排版了，事实上 TeX 将每个字符用一个框包括起来（这被称为<strong>盒子</strong>）然后将一个个的盒子按照一定规则排列起来，因而 TeX 的算法理论上适用于任何字符。ASCII 字符简单理解，就是在半角模式下你的键盘能直接输出的字符。</p>
<p>在 XeTeX 出现之前，为了能让 TeX 系统排版中文，国人曾使用了 天元、CCT、<strong>CJK</strong> 等手段处理中文。其中 天元和 CCT 现在已经基本不用，CJK 因为使用时间长且效果相对较好，现在还有人使用。</p>
<p>不同于 CJK 等方式使用 TeX 和 pdfTeX 这两个不直接支持 Unicode 字符的引擎，XeTeX 引擎直接支持 Unicode 字符。也就是说现在不使用 CJK 也能排版中日韩文的文档了，并且这种方式要比之前的方式更加优秀。</p>
<p>XeLaTeX 和 XeTeX 的关系与 pdfLaTeX 和 pdfTeX 的关系类似，这里不再赘述。</p>
<p>使用 XeTeX 引擎需要使用 UTF-8 编码。</p>
<blockquote>
<p>所谓编码就是字符在计算机储存时候的对应关系。例如，假设有一种编码，将汉字“你”对应为数字“1”；“好”对应为数字“2”，则含有“你好”的纯文本文件，在计算机中储存为“12”（读取文件的时候，将“12”再转换为“你好”显示在屏幕上或打印出来）。</p>
<p>UTF-8 编码是 Unicode 编码的一种，可以参考它的 <a href="http://en.wikipedia.org/wiki/UTF-8" target="_blank">wiki</a>.</p>
</blockquote>
<h2 id="LuaTeX">LuaTeX</h2>
<p>LuaTeX 是正在开发完善的一个 TeX 引擎，相对它的前辈们还相当的不完善，这里不赘述。</p>
<h2 id="CTeX_-_MiKTeX_-_TeX_Live">CTeX - MiKTeX - TeX Live</h2>
<p>之前介绍了 TeX, LaTeX, pdfTeX, pdfLaTeX, XeTeX, XeLaTeX, LuaTeX 等，他们都是 TeX 家族的一部分。但是作为一个能够使用的 TeX 系统，仅仅有他们还是不够的。CTeX, MiKTeX, TeX Live 都是被称为“发行”的软件合集。他们包括了上述各种引擎的可执行程序，以及一些文档类、模板、字体文件、辅助程序等等。其中 CTeX 是建立在 MiKTeX 的基础之上的。</p>
<h2 id=" 总结 ">总结</h2>
<p>TeX - pdfTeX - XeTeX - LuaTeX 都是排版引擎，按照先进程度递增（LuaTeX 尚未完善）。</p>
<p>LaTeX 是一种格式，基于 TeX 格式定义了很多更方便使用的控制命令。上述四个引擎都有对应的程序将 LaTeX 格式解释成引擎能处理的内容。</p>
<p>CTeX, MiKTeX, TeX Live 都是 TeX 的发行，他们是许许多多东西的集合。</p>
<h1 id=" 出现问题应当如何处理 / 怎样聪明地提出你的问题——怎样从这里毕业 ">出现问题应当如何处理 / 怎样聪明地提出你的问题——怎样从这里毕业</h1>
<p>这篇文章原来的名字叫做<strong>慢慢爱上 LaTeX</strong>，后来行文的过程中发觉 LaTeX 实在是有太多的内容可以讲述，越发地没有把握让大家仅仅通过这一篇短小的文章就喜欢上 LaTeX，于是改成了现在这个名字。</p>
<p>限于篇幅，还有我的精力，这篇文章事实上还有许多的问题没有讲明白。它仅仅是提供了一些，在你学习使用 LaTeX 可能遇到的问题的解决方案，并不完全，而且没有教会你如何处理编译过程中可能遇到的形形色色的错误。<br>所以这最终只能是一篇小文，而不可能成为一篇正式的文档。</p>
<p>因此，如果通过我这篇小文，体验到了 LaTeX 带给你的一些乐趣，有了对 LaTeX 的兴趣（如果是这样，我就已经能够无比开心了~），请务必去阅读一些正式的 LaTeX 文档。</p>
<h2 id=" 去读文档 ">去读文档</h2>
<p>关于 LaTeX 的文档有很多，其中有些内容过时地很快。所以有必要告诉大家，哪些文档应该看，那些文档不应该看。<br>索性，这个问题，刘海洋 (milksea) 前辈已经叙述得很清楚了。前段时间，我和几个朋友，将现在看起来还未过时的文档打包上传到了我的博客。参考：</p>
<p><a href="http://liam0205.me/attachment/LaTeX-useful-tools/LaTeX_Docs_2014.rar">http://liam0205.me/attachment/LaTeX-useful-tools/LaTeX_Docs_2014.rar</a></p>
<h2 id=" 遇到问题怎么办 ">遇到问题怎么办</h2>
<ol>
<li>绝对的新手，先读完一本入门读物，了解基本的知识；</li>
<li>无论如何，先读文档！绝大部分问题都是文档可以解决的；</li>
<li>利用 Google 搜索你的问题；</li>
<li>在各个论坛或者 LaTeX 交流群里聪明地提出你的问题。</li>
</ol>
<p>参考：<a href="http://www.wapm.cn/smart-questions/smart-questions-zh.html" target="_blank">http://www.wapm.cn/smart-questions/smart-questions-zh.html</a>。</p>
<p>CTeX 论坛提问版：<a href="http://bbs.ctex.org/forum.php?mod=forumdisplay&amp;fid=6&amp;page=1" target="_blank">http://bbs.ctex.org/forum.php?mod=forumdisplay&amp;fid=6&amp;page=1</a></p>
<p>提供一个交流 QQ 群：141877998</p>
]]></content>
    <summary type="html"><![CDATA[<h2 id=" 优雅的 _LaTeX">优雅的 LaTeX</h2>
<p>有很多 Geeks 或者 LaTeX’s Fanatical Fans 过分地强调了 LaTeX 的一些并非重点的特性，以至于很多初学者会觉得 LaTeX 很神秘很复杂，从而引发了初学者的畏难情绪甚至是负面情绪。尽管这些 Fans 说得并没有错，我是说在事实上，但是他们的表达方式和内心态度却间接阻碍了 LaTeX 的发展，我想这也是和他们的初衷相悖的。</p>
<p>我曾经也受到过这些言论的影响，但幸运的事，至今为止我已经越过了这些障碍，并更加坚信了他们所言（LaTeX 的优点）的正确性。因此我想以我自己的方式，向更多的人介绍 LaTeX —— <strong>这个优雅，但有着自己高傲，却绝不复杂甚至神秘的东西</strong>。</p>
]]></summary>
    
      <category term="Introduction" scheme="http://liam0205.me/tags/Introduction/"/>
    
      <category term="ctex" scheme="http://liam0205.me/tags/ctex/"/>
    
      <category term="TeXworks" scheme="http://liam0205.me/tags/TeXworks/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 Windows 下批量将位图转为 EPS 格式的图档]]></title>
    <link href="http://liam0205.me/2014/08/21/bitmap-convert-to-eps-batch/"/>
    <id>http://liam0205.me/2014/08/21/bitmap-convert-to-eps-batch/</id>
    <published>2014-08-21T02:38:38.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>虽然「LaTeX 只能识别 EPS 格式的图档」是多年的误传，但是仍有许多杂志和期刊只接受 EPS 格式的图档。所以，尽管在日常使用中，我们很少会用到 EPS 格式，但是有时候不得不用。</p>
<p>今天帮朋友排版论文的时候，就又遇到了这样无节操的期刊。没办法，转呗。结果一看傻眼了，一共五六十个图片，手工得弄到猴年马月……于是动了动脑，写了个批处理搞定。</p>
<a id="more"></a>

<p>在现在的 TeX 发行版中，一般都带有一个 <code>bmeps</code> 的小程序，它能将 <code>png</code>, <code>jpg</code> 和 <code>bmp</code> 等格式的位图转换成 EPS 格式的图档。我们用它来处理图片是最好不过了，以 <code>png</code> 格式为例，批处理命令如下</p>
<pre><code><span class="keyword">for</span> /f <span class="string">%%i in ('dir /b *.png') do (
    @echo %</span>%i
    bmeps -c <span class="string">%%i %</span>%~ni.eps
    <span class="variable">@echo</span> <span class="constant">Finished</span>
    )
</code></pre><p>这里用到了 <code>for</code> 循环，在当前目录下遍历所有后缀为 <code>png</code> 的文件，然后对当前文件依次执行 <code>bmeps</code> 命令。</p>
<p>我写了一个完整的批处理文件，可以在<a href="/attachment/LaTeX-useful-tools/epscolor.bat">这里</a>下载，置于位图所在的目录，双击运行即可。</p>
]]></content>
    <summary type="html"><![CDATA[<p>虽然「LaTeX 只能识别 EPS 格式的图档」是多年的误传，但是仍有许多杂志和期刊只接受 EPS 格式的图档。所以，尽管在日常使用中，我们很少会用到 EPS 格式，但是有时候不得不用。</p>
<p>今天帮朋友排版论文的时候，就又遇到了这样无节操的期刊。没办法，转呗。结果一看傻眼了，一共五六十个图片，手工得弄到猴年马月……于是动了动脑，写了个批处理搞定。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="Bitmap" scheme="http://liam0205.me/tags/Bitmap/"/>
    
      <category term="EPS" scheme="http://liam0205.me/tags/EPS/"/>
    
      <category term="Windows Batch" scheme="http://liam0205.me/tags/Windows%20Batch/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《失明症漫记》读后感]]></title>
    <link href="http://liam0205.me/2014/08/20/book-review-blindness/"/>
    <id>http://liam0205.me/2014/08/20/book-review-blindness/</id>
    <published>2014-08-20T10:13:38.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>《失明症漫记》（又名《盲流感》）是诺贝尔文学奖获得者，葡萄牙作家<a href="http://zh.wikipedia.org/zh/%E8%8B%A5%E6%B3%BD%C2%B7%E8%90%A8%E6%8B%89%E9%A9%AC%E6%88%88" target="_blank">萨拉马戈</a>的作品，中文翻译版本由范维信先生译著。</p>
<a id="more"></a>

<p>整本书都在尝试营造一种压抑的气氛，哪怕是最后看起来是大团圆的结局也是如此，而压抑的气氛中四处弥漫着隐喻。</p>
<p>小说篇幅中等，中译本能有两百多页。但是，作者以一种奇怪的方式来行文——书中出现的所有角色，包括动物，都没有明确的名称。我认为这样的手法是有意义的。其一，「偷车贼」、「戴墨镜的女人」这些称呼过于随意，读者可以在生活中简单地遇到，这种简单的指代予读者以代入感。其二，不赋姓名的未知感和不安全感，与书中所提及的「白色失明症」特征一致，相辅相成。其三，在探讨人性的时候，以不明确地指代，泛指某一类人，如<a href="http://www.wangmurong.org.cn/about/" target="_blank">王穆荣</a>所说，这就像「面向对象编程中的类名，在这里不需要实例化」。</p>
<blockquote>
<p>剧透，慎。</p>
</blockquote>
<p>小说以指代的方式来行文，必然的一个结果就是其剧情不会复杂。事实上，其剧情和典型的「灾难大片」类似：未知的疾病突然出现，政府紧张民众恐慌将病患隔离，疫情不受控制地爆发同时隔离区内沦丧的人类尊严和道德约束勾出人性中恶的一面，最终全国沦陷一群人重获新生。</p>
<p>然而，这不是一部大团圆的作品，而是一部残酷的作品。</p>
<ul>
<li>第一个失明者感受到人情温暖，被人送回家中；陪护者因为对方失明无惧暴露而大胆盗车。</li>
<li>政府隔离失明者的根本动机不是治愈疾病，而是为了「避免麻烦」；隔离区内定期响起的冠冕堂皇的「训令」无疑是对此的讽刺。</li>
<li>隔离区内的人们因为失明而无所顾忌，人性恶的一面完全爆发出来；贪婪、淫欲、麻木、虚伪和自私充斥着整个隔离区。</li>
<li>逃出隔离区，等待盲人们的却不是美好的世界，整个国家变得不再熟悉：基础设施瘫痪、卫生条件极差；所有人已无有人形，以兽的方式苟活于世。</li>
</ul>
<p>如果仅止于此，那么这部小说不配称为世界级的小说。</p>
<p>小说的最后，也是点睛之笔在于，当所有人的失明症逐渐消失能够看清世界的时候，作为失明症期间唯一一个看得见的人，医生的妻子抬头看见蓝天白云，恍惚以为失明症终于找上了自己。这是想说明医生的妻子害怕失明吗？我想不是的。如果她会害怕失明，那她就不会在隔离区内不断给大家以勇气；如果她害怕失明，那她就不会在隔离区内奋起杀掉荒淫的统治者；如果她害怕失明，她就不会在满目疮痍的城市里四处奔波，为伙伴们寻找食物。然而她终究是害怕的。她害怕在隔离区里大家失去生的勇气；她害怕隔离区里的统治者将所有人变得麻木而不再为人；她害怕伙伴们死去留下她一个人孤苦伶仃。</p>
<p>那么她究竟害怕什么？我认为，作为唯一一个看遍整个事件体现出的人性所有的恶的她，害怕经过恶的洗礼的城市无法在闪烁人性的光辉！</p>
<p>这绝不是一个大团圆的结局，只有神经衰弱者，才需要大团圆。</p>
]]></content>
    <summary type="html"><![CDATA[<p>《失明症漫记》（又名《盲流感》）是诺贝尔文学奖获得者，葡萄牙作家<a href="http://zh.wikipedia.org/zh/%E8%8B%A5%E6%B3%BD%C2%B7%E8%90%A8%E6%8B%89%E9%A9%AC%E6%88%88" target="_blank">萨拉马戈</a>的作品，中文翻译版本由范维信先生译著。</p>
]]></summary>
    
      <category term="Book review" scheme="http://liam0205.me/tags/Book%20review/"/>
    
      <category term="Blindness" scheme="http://liam0205.me/tags/Blindness/"/>
    
      <category term="Humanity" scheme="http://liam0205.me/tags/Humanity/"/>
    
      <category term="Literature and Social Sciences" scheme="http://liam0205.me/categories/Literature%20and%20Social%20Sciences/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[禁止 Kindle Paperwhite2 在连接 WiFi 的情况下静默升级]]></title>
    <link href="http://liam0205.me/2014/08/17/kindle-paperwhite2-stop-slient-updating/"/>
    <id>http://liam0205.me/2014/08/17/kindle-paperwhite2-stop-slient-updating/</id>
    <published>2014-08-17T02:40:38.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>又是关于 Kindle 的文章呢，不过心情和上一篇可谓截然相反。嘛，生活还要继续，不想了。</p>
<p>Kindle 的原生系统实在是欠调教，想要用得顺手不得不自己安装插件。若是如此也就罢了，恼人的是，Amazon 会在 Kindle 链接 WiFi 的情况下为 Kindle 推送更新，而这些不经过用户同意静默安装的升级，会使得不少插件失效。这样一来，每次升级就得重新安装优化不少插件，着实浪费时间，于是禁止静默升级变得十分有必要。</p>
<a id="more"></a>

<h2 id="BackDoorLock_ 介绍 ">BackDoorLock 介绍</h2>
<p><a href="http://www.mobileread.com/forums/showthread.php?t=205666" target="_blank">BackDoorLock</a> 是 <a href="http://www.mobileread.com/" target="_blank">mobileread 论坛</a> 上的 dsmid 前辈制作的插件，其作用只有一个：禁止 Amazon 在不经用户同意的情况下静默升级 Kindle 的固件。</p>
<p>BackDoorLock 并不会阻止 Kindle 从 Amazon 上取得升级所需的安装文件，它会在 Kindle 尝试安装升级的时候打断这个过程。这样设计是有意义的，因为如果阻止 Kindle 下载升级文件，则 Kindle 在联网的情况下会不断尝试下载，从而造成耗电量剧增，并最终影响电池寿命。</p>
<h2 id="BackDoorLock_ 的安装 ">BackDoorLock 的安装</h2>
<p>首先保证你的 Kindle PW2 已经越狱（参考<a href="http://liam0205.me/2014/05/20/koreader-on-kindle-paperwhite/">这篇文章</a>中关于越狱的部分）。dsmid 提供了两种方法安装 BackDoorLock。其一是下载 <code>.bin</code> 文件，放在 Kindle 根目录，使用「更新您的 Kindle」的方式安装。其二是先安装 KUAL (Kindle Unified Application Launcher) 安装，然后以查件的方式运行。这里推荐使用第二种方法。</p>
<h3 id=" 安装 _MKK">安装 MKK</h3>
<p>KUAL 需要 MKK (Mobileread Kindlet Kit) 的支持，所以先安装 MKK。</p>
<ul>
<li>到<a href="http://www.mobileread.com/forums/showthread.php?t=233932" target="_blank">这里</a>下载 MKK 的安装包。</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有名为 <code>Update_mkk-20140214-k5-ALL_install.bin</code> 的文件，将其解压到 Kindle 根目录。</li>
<li>断开 Kindle 与计算机的 USB 连接。</li>
<li>依次进行如下操作<ul>
<li>主页按钮（[Home]）</li>
<li>菜单按钮（[Menu]）</li>
<li>设置选项（Settings）</li>
<li>菜单按钮（[Menu]）</li>
<li>更新您的 Kindle（Update Your Kindle）</li>
</ul>
</li>
</ul>
<h3 id=" 安装 _KUAL">安装 KUAL</h3>
<ul>
<li>到<a href="http://www.mobileread.com/forums/showthread.php?t=203326" target="_blank">这里</a>下载 KUAL 的安装包。</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有名为 <code>KUAL-KDK-2.0.azw2</code> 的文件，将其解压到 Kindle 的 <code>documents</code> 目录。</li>
</ul>
<h3 id=" 安装 _BackDoorLock">安装 BackDoorLock</h3>
<ul>
<li>到<a href="http://www.mobileread.com/forums/showthread.php?t=205666" target="_blank">这里</a>下载 MKK 的安装包。</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有名为 <code>backdoorlock</code> 的目录，将其完整地解压到 Kindle 的 <code>extensions</code> 目录（若不存在则新建）。</li>
</ul>
<h3 id=" 启用 _BackDoorLock">启用 BackDoorLock</h3>
<p>将 Kindle 从电脑中退出后，在 Kindle 首页能看到如下图所示的图标，标有「Kindle Launcher」的就是 KUAL 启动图标了。</p>
<p><img src="/attachment/images/Kindle/Home_KUAL.png" alt=" 安装完成后的主界面 "></p>
<p>点击 KUAL 图标，进入 KUAL 界面。</p>
<p><img src="/attachment/images/Kindle/KUAL_BackDoorLock.png" alt="KUAL 界面 "></p>
<p>点击 BackDoorLock，打开 BackDoorLock。</p>
<p><img src="/attachment/images/Kindle/BackDoorLock.png" alt="BackDoorLock 界面 "></p>
<p>这里</p>
<ul>
<li><code>Lock the back door</code> 是禁用静默升级，</li>
<li><code>Unlock the back door</code> 是启用静默升级，</li>
<li><code>Lock state</code> 是查看 BackDoorLock 的工作状态，</li>
<li><code>Delete update file(s)</code> 是删除升级文件，以腾出空间，</li>
<li><code>Move update file(s)</code> 则是移动升级文件。</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>又是关于 Kindle 的文章呢，不过心情和上一篇可谓截然相反。嘛，生活还要继续，不想了。</p>
<p>Kindle 的原生系统实在是欠调教，想要用得顺手不得不自己安装插件。若是如此也就罢了，恼人的是，Amazon 会在 Kindle 链接 WiFi 的情况下为 Kindle 推送更新，而这些不经过用户同意静默安装的升级，会使得不少插件失效。这样一来，每次升级就得重新安装优化不少插件，着实浪费时间，于是禁止静默升级变得十分有必要。</p>
]]></summary>
    
      <category term="Kindle" scheme="http://liam0205.me/tags/Kindle/"/>
    
      <category term="BackDoorLock" scheme="http://liam0205.me/tags/BackDoorLock/"/>
    
      <category term="KUAL" scheme="http://liam0205.me/tags/KUAL/"/>
    
      <category term="IT" scheme="http://liam0205.me/categories/IT/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[异步加载多说评论框以加快页面访问速度]]></title>
    <link href="http://liam0205.me/2014/07/22/duoshuo-delay/"/>
    <id>http://liam0205.me/2014/07/22/duoshuo-delay/</id>
    <published>2014-07-22T09:52:50.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>多说评论框可以让静态博客实现评论功能，对于搭在 GitHub Pages 上的博客来说是非常好用的功能。美中不足的是，多说评论框的加载速度有些慢；默认情况下，多说评论框总是随页面一起加载，拖慢了整个页面的加载速度。</p>
<p>本希望用自动异步加载的方式，在页面加载完成之后，再加载多说评论框。奈何多说没有提供所需的 API。于是只能退而求其次，采用手动的方法。</p>
<a id="more"></a>

<p>多说在其<a href="http://dev.duoshuo.com/docs/50b344447f32d30066000147" target="_blank">官博</a>提出了一种异步加载的方式。经测试，这个方法可用——只需要点击按钮，多说评论框就会弹出来。但是，官博提供的方法只能弹出，不能缩回，有些恼人。于是自己写了几行代码，解决了这个问题。</p>
<h2 id=" 详细步骤 ">详细步骤</h2>
<p>首先，我们需要加载多说的 <code>embed.js</code> 基础代码，并设置 <code>duoshuoQuery</code>。多说官博希望我们把这段代码放在网页的 head 中，我不推荐这样做。因为我们使用异步加载的原因，就是希望提高速度，而如果将多说的代码放在 head 中，又拖慢了速度。所以我们将代码放在多说评论框加载之前就可以了。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"><span class="keyword">var</span> duoshuoQuery = {short_name:<span class="string">" 你的多说二级域名 "</span>};</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://static.duoshuo.com/embed.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>



<p>多说二级域名是指你注册多说时，填写的 <code>abc.duoshuo.com</code> 中的 <code>abc</code> 部分。</p>
<p>紧接其后之后，我们要写入 JavaScript 函数，实现多说评论框的缩放功能。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
<span class="function"><span class="keyword">function</span> <span class="title">toggleDuoshuoComments</span><span class="params">(container, id, url)</span>{</span>
  <span class="keyword">if</span>(jQuery(container).has(<span class="string">"div"</span>).length&gt;<span class="number">0</span>){
    jQuery(container).empty();
    <span class="keyword">return</span>;
  }
  <span class="keyword">var</span> el = document.createElement(<span class="string">'div'</span>);
  el.setAttribute(<span class="string">'data-thread-key'</span>, id);
  el.setAttribute(<span class="string">'data-url'</span>, url);
  DUOSHUO.EmbedThread(el);
  jQuery(container).append(el);
}
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>



<p>在需要插入按钮的地方，我们建立一个 click 事件。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"javascript:void(0);"</span> <span class="attribute">onclick</span>=<span class="value">"toggleDuoshuoComments('#comment-box', &lt;%= item.title %&gt;, &lt;%- config.url %&gt;&lt;%- config.root %&gt;&lt;%- item.path %&gt;);"</span>&gt;</span>查看评论<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
</pre></td></tr></table></figure>



<p>其中 <code>&lt;%= item.title %&gt;</code> 和 <code>&lt;%- config.url %&gt;&lt;%- config.root %&gt;&lt;%- item.path %&gt;</code> 是 hexo 的语法。</p>
<p>最后，在需要弹出评论框的地方，插入一个 <code>div</code> 标签。</p>
<figure class="highlight html"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"comment-box"</span> &gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</pre></td></tr></table></figure>



<p>这样就大功告成啦！</p>
]]></content>
    <summary type="html"><![CDATA[<p>多说评论框可以让静态博客实现评论功能，对于搭在 GitHub Pages 上的博客来说是非常好用的功能。美中不足的是，多说评论框的加载速度有些慢；默认情况下，多说评论框总是随页面一起加载，拖慢了整个页面的加载速度。</p>
<p>本希望用自动异步加载的方式，在页面加载完成之后，再加载多说评论框。奈何多说没有提供所需的 API。于是只能退而求其次，采用手动的方法。</p>
]]></summary>
    
      <category term="Blog" scheme="http://liam0205.me/tags/Blog/"/>
    
      <category term="Duoshuo" scheme="http://liam0205.me/tags/Duoshuo/"/>
    
      <category term="Async Loading" scheme="http://liam0205.me/tags/Async%20Loading/"/>
    
      <category term="IT" scheme="http://liam0205.me/categories/IT/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[英语语法之二：名词短语]]></title>
    <link href="http://liam0205.me/2014/06/22/noun-phrase-and-articles/"/>
    <id>http://liam0205.me/2014/06/22/noun-phrase-and-articles/</id>
    <published>2014-06-22T01:01:50.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第二篇，主要讨论名词短语以及冠词的使用。</p>
<h2 id=" 名词短语的基本形态 ">名词短语的基本形态</h2>
<p>名词短语可以充当句子中的主语、宾语、补语等成分，出现的频率相当高。同时，在名词短语中充当限定词的冠词涉及到许多规则，也是容易弄错的地方。涉及到名词短语的语法规则有很多，特例也有很多。基本属于「有二十条规则，又有二十条特例」的情况，令人烦不胜烦。但其实，在表达清晰、意思完整、无有歧义的要求下，这些规则并不需要死记硬背，借由客观地讨论就能形成完整的体系。</p>
<a id="more"></a>

<p>完整的名词短语由三个部分组成：限定词、修饰词、名词。比如（下划线部分是限定词，加粗部分是修饰词）：</p>
<ul>
<li><u>a</u> <strong>new</strong> book.</li>
<li><u>many</u> <strong>good</strong> students.</li>
<li><u>his</u> <strong>beautiful</strong> wife.</li>
<li><u>the</u> <strong>bast</strong> answer.</li>
<li><u>those</u> <strong>sweet</strong> roses.</li>
</ul>
<p>名词短语的三个部分并非每一次都要同时出现，在特定场合下，这三个部分都有可能省略。</p>
<p>修饰词可能是名词短语中最不重要的部分，如果不需要描述名词的状态特征则完全可以省略。比如「a book」同样是正确的名词短语。如果说话人确信听众知道自己在讨论什么东西，则名词也可以省略。比如「Of those answers, this one is the best.」，这里的「the best」指得就是「the best answer」。在面对面交流的时候，修饰词和名词有时甚至可以一起省略。假设你在花店，用手指向一捧玫瑰花，对花店老板说「I want those.」的话，花店老板很清楚你想要什么。</p>
<h2 id=" 限定词 ">限定词</h2>
<p>任何事物出现都是有原因的，那么英语里为什么要有限定词呢？限定词作为名词短语的一部分存在，而名词短语的主体是名词。所以在讨论限定词之前，有必要讨论一下名词。</p>
<h3 id=" 名词的分类 ">名词的分类</h3>
<p>从名词指代的对象来说，名词可以分为「抽象名词」和「普通名词」。抽象名词指代的对象看不见摸不着，通常表示方式方法、状态品质等概念。普通名词则相反，它们指代的对象看得见摸得着，是实际存在的事物。</p>
<p>从名词是否可以计数的方面，名词可以分为「可数名词」和「不可数名词」。可数名词指代的对象通常具有固定的形体，因此可以计数。不可数名词则正好相反，它们指代的对象通常无有固定形体，因此你没法拿起其中的「一个」，对朋友说「嘿，这是一个 XX，你手边上也有一个」。</p>
<p>从名词指代的对象的状态来说，名词可以分成「专有名词」和「非专有名词」。所谓专有名词，就是名词指代的对象，天上地下独一份，没有第二个。而非专有名词则正好相反，它们指代的对象都不止存在一个。</p>
<p>抽象名词指代的对象显然不具有固定的形体或者明确的界限，因此<strong>抽象名词都是不可数名词</strong>。反过来，它的逆否命题显然成立，<strong>可数名词都是普通名词</strong>。</p>
<p>名词是否专有，是在可数名词的范围之内进行讨论的。因为如果名词不可数，也就无从定义「只有一个」，从而讨论是否专有就没有意义了。此外，名词是否专有，有时也要依情况而定。比如，医院都有院长，在医院内部讨论的时候，院长是唯一的，此时可以看做是专有名词；而在医院之间讨论，或者横向比较的时候，院长就不唯一了，此时是非专有名词。</p>
<p>对名词做这样的分类是有意义的。如果一个名词是可数的，并且它是非专有名词，这就意味着它指代的对象在世界上并不唯一，有许多个。以对于「书本」的讨论为例。如果笼统地讨论而不加限定，那么听者就不知道讲话者说得是什么——究竟是说所有的书本组成的这个整体，还是说某一本特定的书呢？显然，对于这样的名词，在讨论的时候需要加以限定，这就是限定词存在的意义。</p>
<h3 id=" 一个例子 ">一个例子</h3>
<p>我们继续上面关于成分省略的话题。如果我们将「many good students」的限定词 many 去掉，形成的「good students」仍然是一个正确的名词短语。但是，将「a new book」的限定词 a 去掉，形成的「new book」就不正确了。</p>
<p>我们对两个短语进行了同样的操作，但是结果却不相同。按照上一小节的讨论，学生和书本都是非专有名词。这种情况下，作为复数存在的 students 表意是明确的，它表示学生这个群体；而作为单数存在的 book 表意就不明确了。</p>
<h3 id=" 冠词的使用 ">冠词的使用</h3>
<p>限定词有很多，我们先简单地看一下。</p>
<ul>
<li>冠词：a, an, the</li>
<li>表示指代：this, that, these, those</li>
<li>所有格：my, your, his, her, their, Jason’s</li>
<li>表示否定：no, neither</li>
<li>表示全部：every, each</li>
<li>表示不确定：some, any, either</li>
<li>表示数量：基数词、序数词以及 many, much, little, few</li>
<li>表示数量的范围、倍数等：all, both, half, one-third, double, twice, three times, such 等</li>
</ul>
<p>行文时有关限定词的错误，要么是漏掉限定词，要么是限定词误用。除掉冠词之外的其余几类限定词都有相对明确的含义，在实际使用中不容易出错。所以我们只需要着重讨论冠词就可以。</p>
<p>从语源学（etymology）的角度说，不定冠词 a(n) 以及定冠词 the 分别是数次 one 和指示代词 that 和 those 的弱化。也就是说，a(n) 就是 one 的意思，the 就是 that 或者 those 的意思，只不过语气上比较弱。</p>
<p>因此，当后面的名词在叙述上有「一个」的含义时，应该加上不定冠词；当后面的名词在上下文有特指「那个」的时候，应该加上不定冠词；当后面的名词不适合以「一个」或「那个」来交代，就不加冠词。</p>
<p>举例分析如下：</p>
<ul>
<li><u>Unmaried men</u> are a rare species these days.<ul>
<li>名词短语 Unmaried men 中 men 是复数形态，没法说「一个」或者「那个」，所以不用冠词。</li>
</ul>
</li>
<li><u>Honesty</u> is necessarily the best policy.<ul>
<li>Honesty 是表达品质的抽象名词，没有复数形态，不能用「一个」来描述，所以不用冠词。</li>
</ul>
</li>
<li><u>Fresh water</u> is a precious resource in Saudi Arabia.<ul>
<li>Fresh water 是不可数的，没有复数形态，不能用「一个」来描述，所以不用冠词。</li>
</ul>
</li>
<li>I have an appointment on <u>Sunday</u>.<ul>
<li>这里 Sunday 在讨论范围内是唯一的，确指这周日，是专有名词，不能用「一个」或者「那个」来描述，所以冠词位置留空。</li>
</ul>
</li>
<li>I would have an appointment on <u>a Sunday</u> next month.<ul>
<li>这里 Sunday 在讨论范围内（下个月）里是不唯一的，因此要保留冠词。</li>
</ul>
</li>
<li>I need <u>a book</u> to read on my trip. I have finished <u>the book</u> you lent me.<ul>
<li>第一句中，a book 不做特指，「随便哪一本书我都乐意读」，因此用不定冠词。</li>
<li>第二句中，the book 特指「你借给我的那一本」，上下文中有暗示的「那个」，所以用定冠词。</li>
</ul>
</li>
<li><u>Modern history</u> is my favorite subject. <u>The history of recent China</u> is a sorry record.<ul>
<li>第一句中，modern history 是抽象名词，没有办法用「一个」或者「那个」来表述，所以冠词位留空。</li>
<li>第二句中，因为特指「中国的『那一段』历史」，所以要用定冠词。</li>
</ul>
</li>
<li>He should be home; I saw <u>a light</u> in his house. Turn off <u>the portal light</u>.<ul>
<li>第一句中，屋子里的灯可能不止一盏，所以不适合用「那个」来表述，只能用不定冠词。</li>
<li>第二局中，等特指门口的「那一盏」，所以用定冠词。</li>
</ul>
</li>
<li><u>Genghis Khan</u> is <u>hero</u>.<ul>
<li>这里 Genghis Khan 是成吉思汗，古今就这一位，是专有名词。如果用「一个」来描述，就表示还有另一个成吉思汗，这不合适，所以冠词位置留空。对于短语 hero 来说，它在居中是 Genghis Khan 的补语，和 Genghis Khan 等同，因此也应当做专有名词来对待。</li>
</ul>
</li>
<li>Someone said that Genghis Khan is <u>a greater hero</u> than Napoleon.<ul>
<li>这里的名词短语 a greater hero 同样是 Genghis Khan 的补语，二者地位等同，但是却没有当做专有名词来处理。这是因为后面还出现了拿破仑，此时 hero 就不唯一了，所以必须加冠词。</li>
</ul>
</li>
<li><u>The five-year-old Genghis Khan</u> was a breezy boy.<ul>
<li>成吉思汗只有一个，但是居中特指「五岁的『那个』成吉思汗」，将成吉思汗的一生展开讨论，于是有了多个时期的成吉思汗。此时成吉思汗不再作为专有名词，又因为讨论时特指「那个」，所以要加上定冠词。</li>
</ul>
</li>
<li>I always go to school by <u>bus</u>.<ul>
<li>Bus 本是个可数的普通名词，按理应加上冠词。但是这里出现在介词 by 之后，表示方式手段，意思是「坐车这种方式」，是抽象名词。这里的 bus 没办法用「一个」或者「那个」去理解，所以冠词位置留空。</li>
</ul>
</li>
<li><u>the Pacific Ocean</u><ul>
<li>「太平洋是专有名词，但是一个特例，要加上定冠词」，这是一般语法书的论调。但事实上，如果把 the Pacific Ocean 理解为「叫做 Pacific 的『那个』海洋」的话，就不需要背这个特例了，加定冠词也就显而易见了。</li>
</ul>
</li>
</ul>
<p>这篇文章不做类似「专有名词前面不加冠词」或是「抽象名词前面不加冠词」之类的总结。因为如你所见，一个名词是否是专有名词或者抽象名词，是需要依情况而定的。如例子里的成吉思汗，尽管它在大多数情况下是专有名词，但是在某些讨论中，它也可以是非专有名词。对这些规则的死记硬背通常导致不加思考的「错误套用」，更将引出无数例外，实不可取。</p>
<h2 id=" 总结 ">总结</h2>
<ul>
<li>名词短语包括限定词、修饰词和名词三个部分。任一部分在合适的情况下都可以省略。</li>
<li>名词短语中没有冠词限定的情况，是因为名词在上下文中不适合理解为「一个」或者「那个」。</li>
<li>a(n) 和 the 分别是 one 和 that/those 的弱化。</li>
</ul>
<p>这些规律在理解的基础上是很自然的，不需要死记硬背。吃透文章中的这些分析，足以涵盖「二十条规则和二十条例外」的语法细则。</p>
]]></content>
    <summary type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第二篇，主要讨论名词短语以及冠词的使用。</p>
<h2 id=" 名词短语的基本形态 ">名词短语的基本形态</h2>
<p>名词短语可以充当句子中的主语、宾语、补语等成分，出现的频率相当高。同时，在名词短语中充当限定词的冠词涉及到许多规则，也是容易弄错的地方。涉及到名词短语的语法规则有很多，特例也有很多。基本属于「有二十条规则，又有二十条特例」的情况，令人烦不胜烦。但其实，在表达清晰、意思完整、无有歧义的要求下，这些规则并不需要死记硬背，借由客观地讨论就能形成完整的体系。</p>
]]></summary>
    
      <category term="English" scheme="http://liam0205.me/tags/English/"/>
    
      <category term="Grammar" scheme="http://liam0205.me/tags/Grammar/"/>
    
      <category term="Literature and Social Sciences" scheme="http://liam0205.me/categories/Literature%20and%20Social%20Sciences/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[英语语法之一：基本句型、动词分类、补语]]></title>
    <link href="http://liam0205.me/2014/06/21/basic-sentence-and-the-complement/"/>
    <id>http://liam0205.me/2014/06/21/basic-sentence-and-the-complement/</id>
    <published>2014-06-21T04:44:23.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第一篇，主要讨论动词分类与补语的关系。</p>
<h2 id=" 基本句型 ">基本句型</h2>
<p>英语中的基本句型有五种：</p>
<ol>
<li>S + V</li>
<li>S + V + O</li>
<li>S + V + C</li>
<li>S + V + O + O</li>
<li>S + V + O + C</li>
</ol>
<p>从意思上说，一个完整句子表达的无非是「一个人 / 一个东西怎么样了」。这里「一个人 / 一个东西」称为主语部分（subject），告诉人们「这个句子讨论的是『一个人或者一个东西』」；「怎么样了」称为谓语部分（predicate，也称「述语部分」），它可以是「做了什么事情」或者「具有某种特性」。主语部分形式比较单一，通常由名词性的结构来担任。谓语部分的形式变化较多，五种基本句型实际就是通过不同的谓语部分结构来表达五种类型的含义。</p>
<a id="more"></a>

<p>不过，不管谓语部分如何变化，它都由动词起头，并承担主要的表意功能。因此讨论基本句型就有必要讨论谓语动词。</p>
<h2 id=" 动词的特性及分类 ">动词的特性及分类</h2>
<p>动词的特性分成两个部分。其一是「是否及宾（transitive/intransitive）」，其二是「是否完全（complete/incomplete）」。</p>
<h3 id=" 及宾与不及宾 ">及宾与不及宾</h3>
<p>第一个特性是从动词意思的层面上说的。如果一个动词和其他人或事物没有关系，那它就是不及宾动词；而如果一个动词被做出来必须有一个承担者，那它就是及宾动词。</p>
<ul>
<li>His father <em>died</em> in the war.</li>
<li>His father had <em>killed</em> three enemy soldiers before his father died in the war.</li>
</ul>
<p>例子中的 die 表示「死亡」，是一个不及宾动词。这是因为死亡这个动作只与他的父亲有关，和别人无关——他的父亲一个人就可以执行死亡这个动作了。不及宾动词后面不能与作为受词的宾语（object）直接相连。</p>
<p>例子中的 kill 表示「杀死」，是一个及宾动词。这是因为杀死这个动作必须有一个承受者（在句子中就是受词）——如果句子去掉 kill 的宾语，变成 <code>His father had *killed* before his father died in the war.</code> 的话，句意就不完整了。及宾动词后面必须有作为受词的宾语。</p>
<h3 id=" 完全与不完全 ">完全与不完全</h3>
<p>第二个特性是从表意功能上说的。如果一个谓语动词在句子当中只能起到连接主语和谓语部分的后续结构的作用，而在表意上功能不完全，则这个动词就是「不完全」的；反之若谓语动词能够完整地表意，那它就是「完全」的。</p>
<p>判断动词是否完全比判断动词是否及宾要容易许多。不完全的动词有一个非常明显的特征——它们都是判断动词「是」的变形，都表示某种意义上的「是」。举例如下：</p>
<ul>
<li>I am a boy.</li>
<li>The soup tastes pretty good.</li>
<li>That man looks weak.</li>
</ul>
<p>三个句子中的动词「am」、「taste」、「look」都是不完全的动词，它们分别译作「是」、「尝起来是」、「看起来是」。如果把他们后面的内容去掉，变成：</p>
<ul>
<li>I am.</li>
<li>The soup tastes.</li>
<li>That man looks.</li>
</ul>
<p>句子表意就不完整了。「我是」，我究竟是什么呢？「汤尝起来」，究竟怎么样呢？「那个男人看起来」，究竟怎么了？</p>
<p>总而言之，不完全的动词在句子当中都是判断动词「是」的变形，在句子当中起到连接主语和谓语部分其他内容的作用，但表意功能弱。因此，这些动词被称为「联系动词（Link-verb）」。也因此，当这些句子出现在句中的时候，需要有称为补语的部分将表意功能补足。</p>
<p>英语中，除去「be」之外，常见的联系动词有：</p>
<ul>
<li>look 看起来是</li>
<li>seem 似乎是</li>
<li>appear 显得像是</li>
<li>sound 听起来是</li>
<li>feel 摸起来像是</li>
<li>taste 尝起来是</li>
<li>stay 仍然是</li>
<li>remain 依旧是</li>
<li>turn 转变为</li>
<li>prove 证实为</li>
<li>become 成为</li>
<li>make 作为</li>
</ul>
<h2 id=" 补语 ">补语</h2>
<p>补语是和表意不完全的动词息息相关的。在第三种基本句型中，联系动词将主语和补语在某个意义层面上对等起来。</p>
<p>我们先来讨论主语的补语，而后将宾语的补语作为一种变形来讨论。</p>
<h3 id=" 主语的补语 _S_+_V_+_C">主语的补语 S + V + C</h3>
<p>在前一节的讨论中，我们已经见过补语这个结构了。为了更清晰地讨论补语，我们尝试将主语统一。</p>
<ul>
<li>The dog was a mastiff.</li>
<li>The dog was mean.</li>
<li>The dog was there.</li>
</ul>
<p>在这里，「a mastiff」、「mean」和「there」分别是三句话的补语，他们分别是名词、形容词和方位副词。</p>
<p>在这里，第一句话翻译为「这只狗是一只獒」，可以明显看到判断动词的存在；第二句话翻译成「这只狗很凶」，判断动词不见了。这实际上是翻译上作出的调整。第二个句子逐字翻译（Verbatim Translation）的结果应该是「这只狗是凶恶的」，但这不符合汉语的说话习惯。这个事实从另一个角度说明了，联系动词表意上是不完全的，在翻译上甚至可以将它们丢掉。</p>
<p>另一方面，尝试将下面句子中的联系动词替换为相应的「be」动词，我们会发现，这些句子的表意基本没有发生变化。这也说明，联系动词在表以上是不完全的。</p>
<ul>
<li>The house <em>looks</em> big.</li>
<li>The question <em>seems</em> easy.</li>
<li>The man <em>appears</em> to be a gentleman.</li>
<li>The music <em>sounds</em> of equanimity.</li>
<li>The book <em>feels</em> old.</li>
<li>The soup <em>tastes</em> hot.</li>
<li>This two men <em>stayed</em> friends for their whole life.</li>
<li>The woman <em>remains</em> single.</li>
<li>The player <em>turned</em> professional.</li>
<li>The drug <em>proved</em> effective.</li>
<li>The little boy <em>became</em> a super star.</li>
<li>A nurse <em>makes</em> a good wife.</li>
</ul>
<h3 id=" 宾语的补语 _S_+_V_+_O_+_C">宾语的补语 S + V + O + C</h3>
<p>主语的补语用来表示主语是什么。类似地，宾语的补语用来表示宾语是什么。在 S + V + O + C 这个句型当中，宾语和补语之间虽然没有动词存在。但是句子可以变形成：S + V + that + O + V + C 的形式，也就是将原本的宾语和补语以从句的形式出现。因此，可以认为宾语和补语之间有「隐藏的」判断动词「是」的存在。</p>
<p>上一小节的最后，我们举出了 12 个主语补语的句子，我们可以按照下面的方法轻易地变成宾语补语的句子。</p>
<ul>
<li>The house <em>looks</em> big.</li>
<li>I found that the house <em>looks</em> big.</li>
<li>I found the house big.</li>
</ul>
<p>这也说明了主语补语和宾语补语之间的关系。</p>
<h3 id=" 补语的词类 ">补语的词类</h3>
<p>除了前述的名词和形容词性结构可以充当补语之外，表示方位的副词也可以充当补语。比如：</p>
<ul>
<li>The car is there.</li>
<li>I find the key here.</li>
</ul>
<p>这里，表示方位的副词「there」和「here」分别作为「The car」和「the key」的补语。</p>
<h2 id=" 额外的内容 ">额外的内容</h2>
<h3 id=" 特殊的 _be_ 动词 ">特殊的 be 动词</h3>
<p>一些情况下，be 动词后面不带补语。我们知道 be 动词表示「是」的时候不带补语是表意不完全的，因此这些不带补语的 be 动词并不是系动词，而是作为有实际意义的动词，表示「存在」。</p>
<p>比如，被认为是现代哲学开端的笛卡尔先生的名言「我思故我在」中的 be 动词：I think; therefore I am.</p>
<p>又比如，莎翁名作《哈姆雷特》中，王子哈姆雷特在母亲与叔父通奸害死父王之后思考人生的名句：To be or not to be, that is the question. 这里的 be 也应该理解为存在，引申为「活着」，翻译为「要不要活下去，这是个问题」。</p>
<h3 id="S_+_V_+_O_+_O_ 与 _S_+_V_+_O_+_C">S + V + O + O 与 S + V + O + C</h3>
<p>这是两组结构相似的基本句型，对一些中国学生来说，辨识起来稍有困难。我们知道，五种基本句型的区别在于谓语部分的差别，而谓语部分的差别实际上是谓语动词的差别引起的。所以为了在这两种句型中作出辨析，就应着重探讨谓语动词的特征。</p>
<p>先看两个例子。</p>
<ul>
<li>Jason’s wife gave him a jar of honey.</li>
<li>Jason’s wife called him honey.</li>
</ul>
<p>这里前句是一个 S + V + O + O 的句型，后句是一个 S + V + O + C 的句型。</p>
<p>前句的谓语动词「give」首先是一个及宾动词，因为必须要「把什么东西给出去」。其次，它还必须有一个额外的接收者，因为必须要有人接受，东西才给得出去。所以，动词 give 出现，就必须有两个宾语来承受这个动作，因此是 S + V + O + O 的句型。此外，「him」和「a jar of honey」中不存在对等的概念，也即没有「He is a jar of honey」的意味在其中，所以这不可能是宾语和补语的关系。</p>
<p>后句中，「him」和「honey」隐含着对等的概念，所以这是一个 S + V + O + C 的句型。</p>
<h3 id=" 表语还是补语？">表语还是补语？</h3>
<p>文首列出的第三种基本句型，在中国大陆地区通常称为「主系表结构」。主语和系动词很好理解，那么表语是什么？</p>
<p>在大陆地区的语法书中，表语是这样定义的：</p>
<blockquote>
<p>表语是用来表明主语的身份、性质、品性、特征和状态的，表语常由名词、形容词、副词、介词短语、不定式、动词的 -ing、从句来充当，它常位于系动词的后面。</p>
</blockquote>
<p>显而易见，它就是我们讨论中所言的「主语的补语」，二者是相同的概念。</p>
]]></content>
    <summary type="html"><![CDATA[<p>语法是语言的规范，制定语法的目的是为了让表达清晰、意思完整、不致有歧义。人类活动中的情形千差万别，为了表达清晰等目的，会形成许多特例。因此如果尝试通过列举语法现象及特例来描述语法，可想见是非常繁琐的，并且这种行为有舍本逐末之嫌。</p>
<p>在看过旋元佑先生写的《语法俱乐部》之后，我更坚定了这个想法，并尝试将自己对该书的理解结合自己的经验和思考写出来，成为一个系列。</p>
<p>这是这个系列的第一篇，主要讨论动词分类与补语的关系。</p>
<h2 id=" 基本句型 ">基本句型</h2>
<p>英语中的基本句型有五种：</p>
<ol>
<li>S + V</li>
<li>S + V + O</li>
<li>S + V + C</li>
<li>S + V + O + O</li>
<li>S + V + O + C</li>
</ol>
<p>从意思上说，一个完整句子表达的无非是「一个人 / 一个东西怎么样了」。这里「一个人 / 一个东西」称为主语部分（subject），告诉人们「这个句子讨论的是『一个人或者一个东西』」；「怎么样了」称为谓语部分（predicate，也称「述语部分」），它可以是「做了什么事情」或者「具有某种特性」。主语部分形式比较单一，通常由名词性的结构来担任。谓语部分的形式变化较多，五种基本句型实际就是通过不同的谓语部分结构来表达五种类型的含义。</p>
]]></summary>
    
      <category term="English" scheme="http://liam0205.me/tags/English/"/>
    
      <category term="Grammar" scheme="http://liam0205.me/tags/Grammar/"/>
    
      <category term="Literature and Social Sciences" scheme="http://liam0205.me/categories/Literature%20and%20Social%20Sciences/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Virtual Audio Cable 解决 CamStudio 在部分 ThinkPad 机型上无法内录的问题]]></title>
    <link href="http://liam0205.me/2014/05/23/CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cable/"/>
    <id>http://liam0205.me/2014/05/23/CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cable/</id>
    <published>2014-05-23T03:24:46.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>最近因为一些缘故，需要在 Win7 上实现录屏和声音内录功能：前者记录计算机屏幕的内容变化，后者记录通过计算机扬声器或耳机线路发出的声音（Speaker 的声音）。在朋友圈中问了一圈，结合自己搜索之后，决定使用开源的 <a href="http://camstudio.org/" target="_blank">CamStudio</a> 来录屏。</p>
<p>CamStudio 十分优秀，视频上支持多种区域方式（全屏、区域、固定大小、窗口），声音上支持计算机内录和从麦克风输入录制，甚至可选鼠标和键盘操作的录制。但在实际操作中 CamStudio 的内录功能无法正常进行，提示 <code>WaveoutGetSelectControl() failed</code> 的错误，并且官方似乎也没有定位问题所在，导致在多个版本中都存在这个错误（见<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">官方论坛的讨论</a>）。</p>
<p>Woedge 在上述<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">讨论</a>中给出了一个解决方案，帮助一些用户解决了问题。这个方案的关键步骤，是打开 Windows 系统录音设备中的禁用设备——立体声混响（Stereo Mix）功能，然后使用立体声混响将系统内部声音和麦克风声音混在一起，交付给 CamStudio 进行录制。</p>
<p>这个方案无疑帮很多用户解决了问题，但在许多 ThinkPad 机型上却不行。原因是部分 ThinkPad 安装的声卡并不支持 Stereo Mix 功能，故而上述关键步骤无法执行。</p>
<p>经过一番研究之后，决定使用 Virtual Audio Cable 来解决问题。</p>
<a id="more"></a>

<h2 id=" 需求分析 ">需求分析</h2>
<ul>
<li>将计算机扬声器 / 耳机音频信号直接输入计算机麦克风</li>
<li>在内录进行时，保证计算机扬声器的正常工作（不能静音）</li>
</ul>
<h2 id=" 解决思路 ">解决思路</h2>
<p>大约是十年前，中国大陆地区流行 MP3 播放器的时候，部分播放器就提供了这种「内录」功能。这些 MP3 播放器大都随机提供了一只内录电缆（Line-in Cable）——类似常见的耳机，只不过正常耳机一头是插头另一头是耳机，而内陆电缆两头都是一模一样的插头，将电缆的一头插入朋友的 MP3 耳机插口中，一头插入自己 MP3 的麦克风插口中，开启录音模式就能录制朋友 MP3 中的歌曲了。当年可是用这个办法节省了不少上网费用（当年家里还是 56K 的拨号上网，一小时六块钱，可贵了）。</p>
<p>这种方式对我来说固然好，但是不免要浪费朋友的时间——内录进行过程中朋友是无法使用 MP3 听音乐的。作为一个爱动手的好孩子，我制作了一个音频分线器，起作用大约就相当于大家普遍使用的 USB 分线器（当计算机 USB 接口不够时，将它接到计算机的 USB 上，然后让其他设备，比如 U 盘，插入到分线器上）。当然，后来才知道这东西到处都有卖，也很便宜。</p>
<p><img src="http://liamsblog.qiniudn.com/post35mmhub.jpg" alt="3.5mm 音频分线器 "></p>
<p>今次我们要做的事情和十年前我曾经做过的事情如出一辙。我们当然也可以用一个分线器加一条内录电缆来达到目的，更好的办法无疑是在计算机内部使用软件来模拟分线器和内录电缆的效果来达到目的。为此，我们需要 Virtual Audio Cable.</p>
<h2 id=" 配置 _Virtual_Audio_Cable">配置 Virtual Audio Cable</h2>
<p>我将我使用的版本上传到了<a href="/attachment/soft/Virtual_Audio_Cable_4_10.zip">这里</a>，你可以下载安装。</p>
<p>接下来我们模拟「内录电缆」的效果。Virtual Audio Cable 在默认设置下，为计算机配置了一些新的输入输出设备。我们暂时不需要修改 Virtual Audio Cable 的设置，直接使用默认设置提供的这些设备即可。</p>
<p>右键 Windows 任务栏上的音量合成器按钮，选择「播放设备」，将「Line 1」设备设置为默认。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cableline1_input.png" alt=" 配置播放设备 "></p>
<p>然后切换到「录制」标签，同样，将「Line 1」设备设置为默认。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_Cableline1_output.png" alt=" 配置录制设备 "></p>
<p>这样 Virtual Audio Cable 就接管了操作系统音频的输入与输出，相当于将一条 Line-in 电缆接在了计算机耳机和麦克风的接口上。</p>
<p>这时，因为计算机的音频输出完全由 Virtual Audio Cable 的虚拟设备「Line 1」接管，计算机的扬声器 / 耳机中是没有音频信号的，因此我们听不到任何声音。为此，我们需要打开 Virtual Audio Cable 的中继器功能，来模拟前文所述的音频分线器。Virtual Audio Cable 提供了两个中继器模式，分别是 MME 和 KS, 你需要根据你的设备型号来选择。如果你不清楚你的设备型号，不知道选择哪一个的话，也不用担心。因为二者内部的配置完全相同；并且如果当前模式不支持你的硬件，Virtual Audio Cable 就会报错，这时候换另一个就行了。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_CableAudio_Repeater.png" alt="Virtual Audio Cable 的中继器 "></p>
<p>打开中继器窗口之后，将 Wave In 设置为「Line 1」，将 Wave Out 设置为你的系统扬声器。这样就相当于我们用音频分线器将「Line 1」中的信号分流到了系统扬声器之中，同时又输入到了麦克风信号当中。而这正是我们希望的效果。此时点击 Start 启动中继器，计算机的扬声器就会照常工作了。</p>
<p><img src="http://liamsblog.qiniudn.com/2014-05-23-CamStudio-WaveoutGetSelectControl-Virtual_Audio_CableAudio_Repeater_in_n_out.png" alt=" 中继器窗口的设置 "></p>
<p>这样我们就成功模拟了「内录电缆」和「分线器」的功能，打开 CamStudio 开始录屏吧！</p>
]]></content>
    <summary type="html"><![CDATA[<p>最近因为一些缘故，需要在 Win7 上实现录屏和声音内录功能：前者记录计算机屏幕的内容变化，后者记录通过计算机扬声器或耳机线路发出的声音（Speaker 的声音）。在朋友圈中问了一圈，结合自己搜索之后，决定使用开源的 <a href="http://camstudio.org/" target="_blank">CamStudio</a> 来录屏。</p>
<p>CamStudio 十分优秀，视频上支持多种区域方式（全屏、区域、固定大小、窗口），声音上支持计算机内录和从麦克风输入录制，甚至可选鼠标和键盘操作的录制。但在实际操作中 CamStudio 的内录功能无法正常进行，提示 <code>WaveoutGetSelectControl() failed</code> 的错误，并且官方似乎也没有定位问题所在，导致在多个版本中都存在这个错误（见<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">官方论坛的讨论</a>）。</p>
<p>Woedge 在上述<a href="http://camstudio.org/forum/discussion/33/waveoutgetselectcontrol-failed/p1" target="_blank">讨论</a>中给出了一个解决方案，帮助一些用户解决了问题。这个方案的关键步骤，是打开 Windows 系统录音设备中的禁用设备——立体声混响（Stereo Mix）功能，然后使用立体声混响将系统内部声音和麦克风声音混在一起，交付给 CamStudio 进行录制。</p>
<p>这个方案无疑帮很多用户解决了问题，但在许多 ThinkPad 机型上却不行。原因是部分 ThinkPad 安装的声卡并不支持 Stereo Mix 功能，故而上述关键步骤无法执行。</p>
<p>经过一番研究之后，决定使用 Virtual Audio Cable 来解决问题。</p>
]]></summary>
    
      <category term="ThinkPad" scheme="http://liam0205.me/tags/ThinkPad/"/>
    
      <category term="CamStudio" scheme="http://liam0205.me/tags/CamStudio/"/>
    
      <category term="Virtual Audio Cable" scheme="http://liam0205.me/tags/Virtual%20Audio%20Cable/"/>
    
      <category term="Vitual Sound Card" scheme="http://liam0205.me/tags/Vitual%20Sound%20Card/"/>
    
      <category term="WaveoutGetSelectControl" scheme="http://liam0205.me/tags/WaveoutGetSelectControl/"/>
    
      <category term="IT" scheme="http://liam0205.me/categories/IT/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Koreader 阅读 PDF 让 Kindle Paperwhite 如虎添翼]]></title>
    <link href="http://liam0205.me/2014/05/20/koreader-on-kindle-paperwhite/"/>
    <id>http://liam0205.me/2014/05/20/koreader-on-kindle-paperwhite/</id>
    <published>2014-05-20T03:53:38.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>和媳妇谈恋爱快一年了，远在大洋彼岸的媳妇托人带了份礼物给我，说是「知道我常看电子书，用电脑或者 iPad 看书对眼睛不好，所以送了一只『Kindle』给我」。这真是</p>
<blockquote>
<p>有妻如此，夫复何求。</p>
</blockquote>
<p>不过，也有「甜蜜的烦恼」。6 英寸的屏幕对付 A4 纸张大小的 PDF 文件，特别是扫描版的 PDF 文件总是让人不快；尤其 Kindle 原生的阅读器还要在 PDF 文件周边加上白边。好在经过一番搜索和折腾，终于找到了合适的解决方案——神器 Koreader.</p>
<a id="more"></a>

<h2 id="Koreader_ 简介 ">Koreader 简介</h2>
<p><a href="https://github.com/koreader/koreader" target="_blank">Koreader</a> 是用 <a href="http://www.lua.org/about.html" target="_blank">Lua</a> 这个脚本语言开发的 Kindle 插件，它基于 GPLv3 协议发布，可以运行在 Kindle 原生系统上，并支持 PDF, DJVU, EPUB 等格式。</p>
<p>Koreader 通过 <a href="https://github.com/koreader/kpvbooklet/" target="_blank">KPVBooklet</a> 与原生系统集成。成功安装后，将会默认使用 Koreader 打开 PDF, EPUB, DJVU, FB2, CHM 和 DOC 文档，MOBI, AZW, TXT 等格式则会默认使用原生阅读器打开。如果希望通过原生阅读器打开 PDF 等（默认使用 Koreader 的）格式，可以长按文档图标 / 标题，在弹出的窗口中选择「GOTO…/ 前往…」。二者的切换十分方便。</p>
<p>Koreader 的重排（Text Reflow）功能实际上是对另一个开源项目 <a href="http://www.willus.com/k2pdfopt/" target="_blank">K2pdfopt</a> 的移植以及再开发。K2pdfopt 使用完全基于图像处理的方法对文字重新排版：把原始 PDF/DJVU 页面放大，而后再分割成以词为单位的像素区域，把这些像素区域重新排列到目标宽度的页面中（原理如下图）。所以理论上只要能够读取文档的页面像素就可以对其中的文字进行重新排版。</p>
<p><img src="http://vislab.bjmu.edu.cn/blog/hwangxin/wp-content/uploads/2012/10/k2pdfopt.png" alt="K2pdfopt 文字重排原理 "></p>
<p>对 K2pdfopt 的移植和再开发，使得在 Kindle 上实时重排、交互式地微调效果成为可能，而这几乎就完美地解决了 Kindle 用户对 PDF 阅读的全部需求。</p>
<p>Koreader 文字重排效果可以参见 <a href="http://vislab.bjmu.edu.cn/blog/hwangxin/2012/10/read-scanned-pdfs-with-kindlepdfviewer/#i-2" target="_blank">Huang Xin 博客上的一篇文章</a>。</p>
<h2 id=" 在 _Kindle_Paperwrite_ 上的安装 ">在 Kindle Paperwrite 上的安装</h2>
<p>要在 Kindle 上安装插件必须对设备进行越狱（Jailbreak）；而后需要安装 Koreader 依赖的 KPVBooklet；最后安装 Koreader。</p>
<h3 id=" 越狱 ">越狱</h3>
<p>不同于 iOS 系统越狱的极度困难，Kindle 的越狱相对简单许多。</p>
<ul>
<li>到 <a href="http://www.mobileread.com/" target="_blank">MobileRead 论坛</a>上的<a href="http://www.mobileread.com/forums/showthread.php?t=186645" target="_blank">这个帖子</a>中下载 <a href="http://www.mobileread.com/forums/attachment.php?attachmentid=121550&amp;d=1397223190" target="_blank">kindle-jailbreak-x.x.N.zip</a>（x.x.N 是版本号）。当前版本为 1.10.N, 能够胜任 Kindle 固件版本 5.0.x - 5.4.4.2 的越狱工作。</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有名为 <code>kindle-5.4-jailbreak.zip</code> 的文件，解压其中的三个文件到 Kindle 根目录。<ul>
<li><code>bridge.sh</code></li>
<li><code>jb.sh</code></li>
<li><code>Update_jb_$(cd mnt &amp;&amp; cd us &amp;&amp; sh jb.sh).bin</code></li>
</ul>
</li>
<li>断开 Kindle 与计算机的 USB 连接。</li>
<li>依次进行如下操作<ul>
<li>主页按钮（[Home]）</li>
<li>菜单按钮（[Menu]）</li>
<li>设置选项（Settings）</li>
<li>菜单按钮（[Menu]）</li>
<li>更新您的 Kindle（Update Your Kindle）</li>
</ul>
</li>
<li>几秒钟后屏幕下方出现「<strong>*</strong> JAILBREAK <strong>*</strong>」字样表示越狱成功。</li>
</ul>
<h3 id=" 安装 _KPVBooklet">安装 KPVBooklet</h3>
<ul>
<li>到<a href="https://github.com/koreader/kpvbooklet/releases" target="_blank">这里</a>下载 KPVBooklet 的安装包。</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有名为 <code>update_kpvbooklet_x.x.x_install.bin</code> 的文件，将其解压到 Kindle 根目录。</li>
<li>断开 Kindle 与计算机的 USB 连接。</li>
<li>依次进行如下操作<ul>
<li>主页按钮（[Home]）</li>
<li>菜单按钮（[Menu]）</li>
<li>设置选项（Settings）</li>
<li>菜单按钮（[Menu]）</li>
<li>更新您的 Kindle（Update Your Kindle）</li>
</ul>
</li>
</ul>
<h3 id=" 安装 _Koreader">安装 Koreader</h3>
<ul>
<li>到<a href="https://github.com/koreader/koreader/releases" target="_blank">这里</a>下载 Koreader 的安装包，其中最新的版本在最上方，依次向下可以回溯各个版本。<ul>
<li>对于使用 Kindle 原生系统的用户，应当下载名为 <code>koreader-kindle-arm-linux-gnueabi-*.zip</code> 的文件。</li>
</ul>
</li>
<li>使用 USB 数据线将 Kindle 与计算机连接。</li>
<li>ZIP 归档中有三个目录，将它们全都解压到 Kindle 根目录。<ul>
<li><code>extensions</code></li>
<li><code>koreader</code></li>
<li><code>launchpad</code></li>
</ul>
</li>
<li>断开 Kindle 与计算机的 USB 连接。</li>
</ul>
<p>至此，安装完毕，在 Kindle 主界面即可直接用 Koreader 打开 PDF 和 EPUB 文档。</p>
<h3 id=" 关于原生系统固件升级 ">关于原生系统固件升级</h3>
<p>开启 WIFI 的情况下原生系统可能会在后台自动升级固件。不管手动固件升级还是自动固件升级都会擦除 KPVBooklet 启动器造成 Koreader 无法启动，解决这个问题只需要升级完成后重新安装 KPVBooklet 即可，Koreader 无需重新安装。</p>
]]></content>
    <summary type="html"><![CDATA[<p>和媳妇谈恋爱快一年了，远在大洋彼岸的媳妇托人带了份礼物给我，说是「知道我常看电子书，用电脑或者 iPad 看书对眼睛不好，所以送了一只『Kindle』给我」。这真是</p>
<blockquote>
<p>有妻如此，夫复何求。</p>
</blockquote>
<p>不过，也有「甜蜜的烦恼」。6 英寸的屏幕对付 A4 纸张大小的 PDF 文件，特别是扫描版的 PDF 文件总是让人不快；尤其 Kindle 原生的阅读器还要在 PDF 文件周边加上白边。好在经过一番搜索和折腾，终于找到了合适的解决方案——神器 Koreader.</p>
]]></summary>
    
      <category term="Kindle" scheme="http://liam0205.me/tags/Kindle/"/>
    
      <category term="PDF" scheme="http://liam0205.me/tags/PDF/"/>
    
      <category term="Koreader" scheme="http://liam0205.me/tags/Koreader/"/>
    
      <category term="IT" scheme="http://liam0205.me/categories/IT/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为什么一些种类的听力损失是不可逆转的？]]></title>
    <link href="http://liam0205.me/2014/05/10/hearing-impairment/"/>
    <id>http://liam0205.me/2014/05/10/hearing-impairment/</id>
    <published>2014-05-10T07:47:56.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>原文发布在<a href="http://www.zhihu.com/people/LiamHuang" target="_blank">我</a>在<a href="http://www.zhihu.com/question/23714947/answer/25434444" target="_blank">知乎上的回答</a>，有节选。</p>
<p><strong>在未获得本人书面许可的情况下，禁止任何形式的「合理使用」、转载、分享以及将链接发至知乎主站外任何网站或 App （包括知乎日报），外泄斩立决。智商欠奉，中文阅读障碍或微博控患者, 请在监护人及医师协助下学习本段落，谢谢合作。</strong></p>
</blockquote>
<p>众所周知，声音是在空气中传播的机械波，简称声波；而人类产生听觉的过程，就是「接收声波」、「转化和传递声波信号」、「转化为神经信号」从而最终刺激大脑产生听觉的过程。三个步骤依次进行，其中任何一个步骤出现问题，都会影响听力。通常所说的「听力损失不可逆」是第三个步骤出现的问题。</p>
<a id="more"></a>

<p>接收声波的步骤，由通称「外耳」的「耳廓」和「外耳道」承担，它们的形状类似喇叭，从外而内截面逐渐减小，因此起到收集的作用。外耳道内的「耵聍腺」及「皮脂腺」的分泌物，就是我们俗称的「耳屎」，它的分泌量不同人有不同。分泌量大的人，若不经常清理，可能堵塞外耳道，从而干扰声波的接收，影响听力。这种情况的听力下降，是可以恢复的，只需清洁外耳道即可。大多数情况可以自行使用软质的棉签清理，如果阻塞严重，则需要到医院请医生处理。</p>
<p>转化和传递声波信号的步骤，由通称「中耳」的「鼓膜」、「鼓室」内的「听小骨」承担。机械波的本质是振动能量的传递。外耳接受的声波，引起鼓膜的振动，再通过听小骨传递到下一个步骤。如果鼓膜穿孔，则无法承担声波信号转化为振动的工作，导致失聪。鼓膜穿孔通常是由于气压剧变、暴力等引起的外伤和中耳炎等引起，大多数情况能通过手术治疗恢复。听小骨创伤也可能引起听力损失，但大多数情况也能够经治疗恢复。</p>
<p>转化为神经信号的步骤，主要由通称「内耳」中的「耳蜗」承担。耳蜗是由细小空管蜗旋形成的结构，空管内有被称为「毛细胞」的绒毛状结构。这些绒毛随中耳传来的振动而颤动，将振动信号转换为神经冲动，形成神经信号。长时间的大音量刺激，会引起这些绒毛的「倒伏」，从而影响听力。这些绒毛的「倒伏」，人体无法自行修复，医学界目前也没有好的办法。所以这部分引起的听力损伤是「不可逆」的。</p>
<p>额外的话：</p>
<p>内耳中的「半规管」是三个互相垂直的半规管组成的联通空管结构，内有淋巴液。淋巴液收到重力及加速度引起的「惯性力」影响，在半规管内流动。人体通过半规管内的淋巴液的状态，从而确定大脑所处的倾角和加速度的状态，影响人体的平衡感。各省市科技馆内常设的「魔屋」，就是利用半规管产生的平衡感与眼睛所接收的地形信息的不对应，产生「魔」的效果。「陀螺仪」也是通过类似的原理确定加速度状态的，不知是否收到耳朵里半规管结构的启发。</p>
<p>抛砖引玉，希望不要贻笑大方。</p>
]]></content>
    <summary type="html"><![CDATA[<blockquote>
<p>原文发布在<a href="http://www.zhihu.com/people/LiamHuang" target="_blank">我</a>在<a href="http://www.zhihu.com/question/23714947/answer/25434444" target="_blank">知乎上的回答</a>，有节选。</p>
<p><strong>在未获得本人书面许可的情况下，禁止任何形式的「合理使用」、转载、分享以及将链接发至知乎主站外任何网站或 App （包括知乎日报），外泄斩立决。智商欠奉，中文阅读障碍或微博控患者, 请在监护人及医师协助下学习本段落，谢谢合作。</strong></p>
</blockquote>
<p>众所周知，声音是在空气中传播的机械波，简称声波；而人类产生听觉的过程，就是「接收声波」、「转化和传递声波信号」、「转化为神经信号」从而最终刺激大脑产生听觉的过程。三个步骤依次进行，其中任何一个步骤出现问题，都会影响听力。通常所说的「听力损失不可逆」是第三个步骤出现的问题。</p>
]]></summary>
    
      <category term="Hearing" scheme="http://liam0205.me/tags/Hearing/"/>
    
      <category term="Damnification" scheme="http://liam0205.me/tags/Damnification/"/>
    
      <category term="Life" scheme="http://liam0205.me/categories/Life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】符合 GBT7714-2005 标准的 BibTeX Style]]></title>
    <link href="http://liam0205.me/2014/05/09/gbt7714-2005-bibtex-style/"/>
    <id>http://liam0205.me/2014/05/09/gbt7714-2005-bibtex-style/</id>
    <published>2014-05-08T16:00:00.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>这是一份符合国家标准<a href="https://github.com/Haixing-Hu/typesetting-standard/raw/master/%E5%9B%BE%E4%B9%A6%E3%80%81%E6%9C%9F%E5%88%8A%E3%80%81%E8%AE%BA%E6%96%87%E7%9A%84%E7%BC%96%E6%8E%92/%E3%80%90GB:T%207714-2005%E3%80%91%E6%96%87%E5%90%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99.pdf" target="_blank">《GB/T 7714-2005: 文后参考文献著录规则》</a>的 BibTeX 样式文件，项目托管在 <a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style" target="_blank">GitHub</a> 上。具体的排版效果请参见<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/test/test.pdf" target="_blank">测试文档</a>。</p>
<a id="more"></a>

<h2 id=" 特色 ">特色</h2>
<ul>
<li>严格遵循中国国家标准<a href="https://github.com/Haixing-Hu/typesetting-standard/raw/master/%E5%9B%BE%E4%B9%A6%E3%80%81%E6%9C%9F%E5%88%8A%E3%80%81%E8%AE%BA%E6%96%87%E7%9A%84%E7%BC%96%E6%8E%92/%E3%80%90GB:T%207714-2005%E3%80%91%E6%96%87%E5%90%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99.pdf" target="_blank">《GB/T 7714-2005: 文后参考文献著录规则》</a>，适合中文书籍排版和中文论文排版；</li>
<li>代码完全手写生成，每行 BAFLL 代码都有对应的 Java 伪代码翻译，方便使用者学习和修改；</li>
<li>有<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/test/test.pdf" target="_blank">测试文档</a>，经过了详细的测试；</li>
<li>有详细的<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/manual/manual.pdf" target="_blank">用户手册</a>。</li>
</ul>
<h2 id=" 支持的文献类型 ">支持的文献类型</h2>
<ul>
<li>书籍：<code>book</code></li>
<li>汇编：<code>collection</code></li>
<li>会议录：<code>proceedings</code>或<code>conference</code></li>
<li>学位论文：<code>phdthesis</code>、<code>masterthesis</code>或<code>bachelorthesis</code></li>
<li>科技报告：<code>techreport</code></li>
<li>技术标准：<code>standard</code></li>
<li>参考工具：<code>reference</code></li>
<li>手册：<code>manual</code></li>
<li>未发表文献：<code>unpublished</code>或<code>manuscript</code></li>
<li>期刊：<code>periodical</code></li>
<li>报纸：<code>newspaper</code></li>
<li>专利：<code>patent</code></li>
<li>网页：<code>online</code></li>
<li>计算机程序：<code>program</code></li>
<li>数据库：<code>database</code></li>
<li>书籍中的析出文献：<code>inbook</code></li>
<li>汇编中的析出文献：<code>incollection</code></li>
<li>会议录中的析出文献（会议论文）：<code>inproceedings</code></li>
<li>期刊中的析出文献（期刊论文）：<code>article</code></li>
<li>新闻报道：<code>news</code></li>
</ul>
<h2 id=" 下载 ">下载</h2>
<ul>
<li><a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/tarball/master" target="_blank">下载 tar.gz 压缩包</a>，适合 Linux/Mac 用户</li>
<li><a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/zipball/master" target="_blank">下载 zip 压缩包</a>，适合 Windows 用户</li>
</ul>
<h2 id=" 安装 ">安装</h2>
<ol>
<li>下载<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/gbt7714-2005.bst" target="_blank">BST 文件</a></li>
<li>将其复制到<code>$(TEXMFLOCAL)/bibtex/bst/</code>，其中<code>$(TEXMFLOCAL)</code>是你的机器上的本地的<code>texmf</code>目录，您可以通过执行<code>kpsewhich --show-path=ls-R</code>获得该目录路径；</li>
<li>通过执行<code>texhash</code>刷新<code>texmf</code>目录索引，注意执行该命令可能需要系统管理员权限；</li>
<li>如果您使用 Linux 或 Mac OS X 操作系统，您也可以通过项目所提供的<code>Makefile</code>脚本进行安装，只需在项目所在目录下运行以下命令：<code>sudo make</code>，注意需要通过<code>sudo</code>切换 root 权限。</li>
</ol>
<h2 id=" 使用 ">使用</h2>
<p>您只需在您的 LaTeX 源码中使用<code>gbt7714-2005</code>参考文献样式即可：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="command">\bibliographystyle</span><span class="special">{</span>gbt7714-2005<span class="special">}</span>
</pre></td></tr></table></figure>


<p>更加具体的使用说明可参见<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/manual/manual.pdf" target="_blank">用户手册</a>。</p>
<h2 id="TODO">TODO</h2>
<ul class="task-list"><br><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked disabled> 完成 BibTeX 样式文件</li><br><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked disabled> 完成测试文档</li><br><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled> 撰写用户手册</li><br></ul>

<h2 id=" 相关项目 ">相关项目</h2>
<ul>
<li><a href="https://github.com/Haixing-Hu/nju-thesis" target="_blank">南京大学学位论文 XeLaTeX 模板</a></li>
<li><a href="https://github.com/Haixing-Hu/typesetting-standard" target="_blank">中文书刊排版相关标准和规范</a></li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>这是一份符合国家标准<a href="https://github.com/Haixing-Hu/typesetting-standard/raw/master/%E5%9B%BE%E4%B9%A6%E3%80%81%E6%9C%9F%E5%88%8A%E3%80%81%E8%AE%BA%E6%96%87%E7%9A%84%E7%BC%96%E6%8E%92/%E3%80%90GB:T%207714-2005%E3%80%91%E6%96%87%E5%90%8E%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99.pdf" target="_blank">《GB/T 7714-2005: 文后参考文献著录规则》</a>的 BibTeX 样式文件，项目托管在 <a href="https://github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style" target="_blank">GitHub</a> 上。具体的排版效果请参见<a href="https://raw.github.com/Haixing-Hu/GBT7714-2005-BibTeX-Style/master/test/test.pdf" target="_blank">测试文档</a>。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="BibTeX" scheme="http://liam0205.me/tags/BibTeX/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【LaTeX Tips】带圈数字与带圈数字列表]]></title>
    <link href="http://liam0205.me/2014/05/08/latex-circled-numbers/"/>
    <id>http://liam0205.me/2014/05/08/latex-circled-numbers/</id>
    <published>2014-05-08T12:32:22.000Z</published>
    <updated>2014-08-30T10:11:22.000Z</updated>
    <content type="html"><![CDATA[<p>在许多文章中，特别是中文文章中，我们会见到带有圆圈的数字。它们有点是单独出现的，有点作为列表的计数出现。</p>
<p>LaTeX 提供了 <code>\textcircled</code> 命令，但<a href="http://tex.stackexchange.com/questions/7032/good-way-to-make-textcircled-numbers" target="_blank">效果并不好</a>。<a href="http://www.latexstudio.net/latex-tips-768-defined-for-the-enclosed-list-of-environment/" target="_blank">LaTeX studio</a> 曾经提供了一个方法，但缺乏通用性。</p>
<p>这里给出一个利用 Ti<em>k</em>Z 绘制的方法，能较好地解决这个问题，但仍需完善。</p>
<a id="more"></a>

<p>基本的思路是定义一个新命令，接受一个数字参数，用 Ti<em>k</em>Z 在它周围画圈。同时要考虑基线和对齐的问题。一个尝试如下：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="command">\usepackage</span><span class="special">{</span>tikz<span class="special">}</span>
<span class="command">\newcommand*</span><span class="special">{</span><span class="command">\circled</span><span class="special">}</span><span class="special">[</span>1<span class="special">]</span><span class="special">{</span><span class="command">\lower</span>.7ex<span class="command">\hbox</span><span class="special">{</span><span class="command">\tikz</span><span class="command">\draw</span> (0pt, 0pt)<span class="comment">%</span>
    circle (.5em) node <span class="special">{</span><span class="command">\makebox</span><span class="special">[</span>1em<span class="special">]</span><span class="special">[</span>c<span class="special">]</span><span class="special">{</span><span class="command">\small</span> <span class="special">#</span>1<span class="special">}</span><span class="special">}</span>;<span class="special">}</span><span class="special">}</span>
</pre></td></tr></table></figure>



<p>这个新定义的命令可以按照 <code>\textcircled</code> 方法在正文中使用，如果需要用在列表中，则因为「脆弱命令」的问题，需要处理一下。这里我们选择使用 <code>etoolbox</code> 宏包提供的 <code>\robustify</code> 来处理一下，同时结合 <code>enumitem</code> 宏包，给出示例用法如下：</p>
<figure class="highlight tex"><figcaption><span>demo </span></figcaption><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre><span class="command">\documentclass</span><span class="special">{</span>article<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>tikz<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>etoolbox<span class="special">}</span>
<span class="command">\usepackage</span><span class="special">{</span>enumitem<span class="special">}</span>
<span class="command">\newcommand*</span><span class="special">{</span><span class="command">\circled</span><span class="special">}</span><span class="special">[</span>1<span class="special">]</span><span class="special">{</span><span class="command">\lower</span>.7ex<span class="command">\hbox</span><span class="special">{</span><span class="command">\tikz</span><span class="command">\draw</span> (0pt, 0pt)<span class="comment">%</span>
    circle (.5em) node <span class="special">{</span><span class="command">\makebox</span><span class="special">[</span>1em<span class="special">]</span><span class="special">[</span>c<span class="special">]</span><span class="special">{</span><span class="command">\small</span> <span class="special">#</span>1<span class="special">}</span><span class="special">}</span>;<span class="special">}</span><span class="special">}</span>
<span class="command">\robustify</span><span class="special">{</span><span class="command">\circled</span><span class="special">}</span>
<span class="command">\begin</span><span class="special">{</span>document<span class="special">}</span>
<span class="command">\mbox</span><span class="special">{</span><span class="special">}</span><span class="command">\rlap</span><span class="special">{</span><span class="command">\rule</span><span class="special">{</span>.7<span class="command">\linewidth</span><span class="special">}</span><span class="special">{</span>.4pt<span class="special">}</span><span class="special">}</span><span class="comment">%</span>
This is the circled number <span class="command">\circled</span><span class="special">{</span>20<span class="special">}</span>.

<span class="command">\begin</span><span class="special">{</span>enumerate<span class="special">}</span><span class="special">[</span>label=<span class="command">\circled</span><span class="special">{</span><span class="command">\arabic*</span><span class="special">}</span><span class="special">]</span>
<span class="command">\item</span> I
<span class="command">\item</span> am
<span class="command">\item</span> happy
<span class="command">\item</span> to
<span class="command">\item</span> join
<span class="command">\item</span> with
<span class="command">\item</span> you
<span class="command">\item</span> today
<span class="command">\item</span> in
<span class="command">\item</span> what
<span class="command">\item</span> will
<span class="command">\item</span> go
<span class="command">\item</span> down
<span class="command">\item</span> in
<span class="command">\item</span> history
<span class="command">\item</span> as
<span class="command">\item</span> the
<span class="command">\item</span> greatest
<span class="command">\item</span> demonstration
<span class="command">\item</span> for
<span class="command">\item</span> freedom
<span class="command">\item</span> in
<span class="command">\item</span> the
<span class="command">\item</span> history
<span class="command">\item</span> of
<span class="command">\item</span> our
<span class="command">\item</span> nation.
<span class="command">\end</span><span class="special">{</span>enumerate<span class="special">}</span>
<span class="command">\end</span><span class="special">{</span>document<span class="special">}</span>
</pre></td></tr></table></figure>



<hr>
<p>转载请注明作者，并保留原文链接。</p>
]]></content>
    <summary type="html"><![CDATA[<p>在许多文章中，特别是中文文章中，我们会见到带有圆圈的数字。它们有点是单独出现的，有点作为列表的计数出现。</p>
<p>LaTeX 提供了 <code>\textcircled</code> 命令，但<a href="http://tex.stackexchange.com/questions/7032/good-way-to-make-textcircled-numbers" target="_blank">效果并不好</a>。<a href="http://www.latexstudio.net/latex-tips-768-defined-for-the-enclosed-list-of-environment/" target="_blank">LaTeX studio</a> 曾经提供了一个方法，但缺乏通用性。</p>
<p>这里给出一个利用 Ti<em>k</em>Z 绘制的方法，能较好地解决这个问题，但仍需完善。</p>
]]></summary>
    
      <category term="LaTeX" scheme="http://liam0205.me/tags/LaTeX/"/>
    
      <category term="TikZ" scheme="http://liam0205.me/tags/TikZ/"/>
    
      <category term="Circled" scheme="http://liam0205.me/tags/Circled/"/>
    
      <category term="LaTeX" scheme="http://liam0205.me/categories/LaTeX/"/>
    
  </entry>
  
</feed>
